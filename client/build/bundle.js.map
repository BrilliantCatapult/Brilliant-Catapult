{"version":3,"sources":["webpack:///webpack/bootstrap 6597f69d87091b006e2f","webpack:///./client/js/app.jsx","webpack:///./client/js/components/Chart.react.jsx","webpack:///./~/react/react.js","webpack:///./~/react/lib/React.js","webpack:///./~/node-libs-browser/~/process/browser.js","webpack:///./~/react/lib/EventPluginUtils.js","webpack:///./~/react/lib/EventConstants.js","webpack:///./~/react/lib/keyMirror.js","webpack:///./~/react/lib/invariant.js","webpack:///./~/react/lib/ReactChildren.js","webpack:///./~/react/lib/PooledClass.js","webpack:///./~/react/lib/ReactFragment.js","webpack:///./~/react/lib/ReactElement.js","webpack:///./~/react/lib/ReactContext.js","webpack:///./~/react/lib/Object.assign.js","webpack:///./~/react/lib/emptyObject.js","webpack:///./~/react/lib/warning.js","webpack:///./~/react/lib/emptyFunction.js","webpack:///./~/react/lib/ReactCurrentOwner.js","webpack:///./~/react/lib/traverseAllChildren.js","webpack:///./~/react/lib/getIteratorFn.js","webpack:///./~/react/lib/ReactInstanceHandles.js","webpack:///./~/react/lib/ReactRootIndex.js","webpack:///./~/react/lib/ReactComponent.js","webpack:///./~/react/lib/ReactUpdateQueue.js","webpack:///./~/react/lib/ReactUpdates.js","webpack:///./~/react/lib/CallbackQueue.js","webpack:///./~/react/lib/ReactPerf.js","webpack:///./~/react/lib/ReactReconciler.js","webpack:///./~/react/lib/ReactRef.js","webpack:///./~/react/lib/ReactOwner.js","webpack:///./~/react/lib/ReactElementValidator.js","webpack:///./~/react/lib/ReactPropTypeLocations.js","webpack:///./~/react/lib/ReactPropTypeLocationNames.js","webpack:///./~/react/lib/ReactNativeComponent.js","webpack:///./~/react/lib/Transaction.js","webpack:///./~/react/lib/ReactLifeCycle.js","webpack:///./~/react/lib/ReactInstanceMap.js","webpack:///./~/react/lib/ReactClass.js","webpack:///./~/react/lib/ReactErrorUtils.js","webpack:///./~/react/lib/keyOf.js","webpack:///./~/react/lib/ReactDOM.js","webpack:///./~/react/lib/mapObject.js","webpack:///./~/react/lib/ReactDOMTextComponent.js","webpack:///./~/react/lib/DOMPropertyOperations.js","webpack:///./~/react/lib/DOMProperty.js","webpack:///./~/react/lib/quoteAttributeValueForBrowser.js","webpack:///./~/react/lib/escapeTextContentForBrowser.js","webpack:///./~/react/lib/ReactComponentBrowserEnvironment.js","webpack:///./~/react/lib/ReactDOMIDOperations.js","webpack:///./~/react/lib/CSSPropertyOperations.js","webpack:///./~/react/lib/CSSProperty.js","webpack:///./~/react/lib/ExecutionEnvironment.js","webpack:///./~/react/lib/camelizeStyleName.js","webpack:///./~/react/lib/camelize.js","webpack:///./~/react/lib/dangerousStyleValue.js","webpack:///./~/react/lib/hyphenateStyleName.js","webpack:///./~/react/lib/hyphenate.js","webpack:///./~/react/lib/memoizeStringOnly.js","webpack:///./~/react/lib/DOMChildrenOperations.js","webpack:///./~/react/lib/Danger.js","webpack:///./~/react/lib/createNodesFromMarkup.js","webpack:///./~/react/lib/createArrayFromMixed.js","webpack:///./~/react/lib/toArray.js","webpack:///./~/react/lib/getMarkupWrap.js","webpack:///./~/react/lib/ReactMultiChildUpdateTypes.js","webpack:///./~/react/lib/setTextContent.js","webpack:///./~/react/lib/setInnerHTML.js","webpack:///./~/react/lib/ReactMount.js","webpack:///./~/react/lib/ReactBrowserEventEmitter.js","webpack:///./~/react/lib/EventPluginHub.js","webpack:///./~/react/lib/EventPluginRegistry.js","webpack:///./~/react/lib/accumulateInto.js","webpack:///./~/react/lib/forEachAccumulated.js","webpack:///./~/react/lib/ReactEventEmitterMixin.js","webpack:///./~/react/lib/ViewportMetrics.js","webpack:///./~/react/lib/isEventSupported.js","webpack:///./~/react/lib/ReactEmptyComponent.js","webpack:///./~/react/lib/ReactMarkupChecksum.js","webpack:///./~/react/lib/adler32.js","webpack:///./~/react/lib/containsNode.js","webpack:///./~/react/lib/isTextNode.js","webpack:///./~/react/lib/isNode.js","webpack:///./~/react/lib/getReactRootElementInContainer.js","webpack:///./~/react/lib/instantiateReactComponent.js","webpack:///./~/react/lib/ReactCompositeComponent.js","webpack:///./~/react/lib/ReactComponentEnvironment.js","webpack:///./~/react/lib/shouldUpdateReactComponent.js","webpack:///./~/react/lib/ReactDOMComponent.js","webpack:///./~/react/lib/ReactMultiChild.js","webpack:///./~/react/lib/ReactChildReconciler.js","webpack:///./~/react/lib/flattenChildren.js","webpack:///./~/react/lib/ReactDefaultInjection.js","webpack:///./~/react/lib/BeforeInputEventPlugin.js","webpack:///./~/react/lib/EventPropagators.js","webpack:///./~/react/lib/FallbackCompositionState.js","webpack:///./~/react/lib/getTextContentAccessor.js","webpack:///./~/react/lib/SyntheticCompositionEvent.js","webpack:///./~/react/lib/SyntheticEvent.js","webpack:///./~/react/lib/getEventTarget.js","webpack:///./~/react/lib/SyntheticInputEvent.js","webpack:///./~/react/lib/ChangeEventPlugin.js","webpack:///./~/react/lib/isTextInputElement.js","webpack:///./~/react/lib/ClientReactRootIndex.js","webpack:///./~/react/lib/DefaultEventPluginOrder.js","webpack:///./~/react/lib/EnterLeaveEventPlugin.js","webpack:///./~/react/lib/SyntheticMouseEvent.js","webpack:///./~/react/lib/SyntheticUIEvent.js","webpack:///./~/react/lib/getEventModifierState.js","webpack:///./~/react/lib/HTMLDOMPropertyConfig.js","webpack:///./~/react/lib/MobileSafariClickEventPlugin.js","webpack:///./~/react/lib/ReactBrowserComponentMixin.js","webpack:///./~/react/lib/findDOMNode.js","webpack:///./~/react/lib/ReactDefaultBatchingStrategy.js","webpack:///./~/react/lib/ReactDOMButton.js","webpack:///./~/react/lib/AutoFocusMixin.js","webpack:///./~/react/lib/focusNode.js","webpack:///./~/react/lib/ReactDOMForm.js","webpack:///./~/react/lib/LocalEventTrapMixin.js","webpack:///./~/react/lib/ReactDOMImg.js","webpack:///./~/react/lib/ReactDOMIframe.js","webpack:///./~/react/lib/ReactDOMInput.js","webpack:///./~/react/lib/LinkedValueUtils.js","webpack:///./~/react/lib/ReactPropTypes.js","webpack:///./~/react/lib/ReactDOMOption.js","webpack:///./~/react/lib/ReactDOMSelect.js","webpack:///./~/react/lib/ReactDOMTextarea.js","webpack:///./~/react/lib/ReactEventListener.js","webpack:///./~/react/lib/EventListener.js","webpack:///./~/react/lib/getUnboundedScrollPosition.js","webpack:///./~/react/lib/ReactInjection.js","webpack:///./~/react/lib/ReactReconcileTransaction.js","webpack:///./~/react/lib/ReactInputSelection.js","webpack:///./~/react/lib/ReactDOMSelection.js","webpack:///./~/react/lib/getNodeForCharacterOffset.js","webpack:///./~/react/lib/getActiveElement.js","webpack:///./~/react/lib/ReactPutListenerQueue.js","webpack:///./~/react/lib/SelectEventPlugin.js","webpack:///./~/react/lib/shallowEqual.js","webpack:///./~/react/lib/ServerReactRootIndex.js","webpack:///./~/react/lib/SimpleEventPlugin.js","webpack:///./~/react/lib/SyntheticDragEvent.js","webpack:///./~/react/lib/SyntheticClipboardEvent.js","webpack:///./~/react/lib/SyntheticFocusEvent.js","webpack:///./~/react/lib/SyntheticKeyboardEvent.js","webpack:///./~/react/lib/getEventCharCode.js","webpack:///./~/react/lib/getEventKey.js","webpack:///./~/react/lib/SyntheticTouchEvent.js","webpack:///./~/react/lib/SyntheticWheelEvent.js","webpack:///./~/react/lib/SVGDOMPropertyConfig.js","webpack:///./~/react/lib/createFullPageComponent.js","webpack:///./~/react/lib/ReactDefaultPerf.js","webpack:///./~/react/lib/ReactDefaultPerfAnalysis.js","webpack:///./~/react/lib/performanceNow.js","webpack:///./~/react/lib/performance.js","webpack:///./~/react/lib/ReactServerRendering.js","webpack:///./~/react/lib/ReactServerRenderingTransaction.js","webpack:///./~/react/lib/onlyChild.js","webpack:///./client/js/components/BarChart.react.jsx","webpack:///./client/js/components/Bar.react.jsx","webpack:///./client/js/visualizations/BarVisualization.js","webpack:///./~/d3/d3.js","webpack:///./client/js/stores/BarChartStore.js","webpack:///./~/object-assign/index.js","webpack:///./~/events/events.js","webpack:///./client/js/dispatcher/D3Dispatcher.js","webpack:///./~/flux/index.js","webpack:///./~/flux/lib/Dispatcher.js","webpack:///./~/flux/lib/invariant.js","webpack:///./client/js/constants/D3Constants.js","webpack:///./~/keymirror/index.js","webpack:///./client/js/utils/WebAPIUtils.js","webpack:///./client/js/actions/D3ServerAction.js","webpack:///./client/js/utils/D3Utils.js","webpack:///./client/js/components/XAxis.react.jsx","webpack:///./client/js/components/YAxis.react.jsx","webpack:///./client/js/components/BubbleChart.react.jsx","webpack:///./client/js/components/Circle.react.jsx","webpack:///./client/js/visualizations/CircleVisualization.js","webpack:///./client/js/stores/BubbleChartStore.js","webpack:///./client/js/components/Legend.react.jsx","webpack:///./client/js/visualizations/LegendVisualization.js","webpack:///./client/js/components/LineChart.react.jsx","webpack:///./client/js/components/Line.react.jsx","webpack:///./client/js/visualizations/LineVisualization.js","webpack:///./client/js/stores/LineChartStore.js","webpack:///./client/js/components/YAxisLine.react.jsx","webpack:///./~/react-router/lib/index.js","webpack:///./~/react-router/lib/components/DefaultRoute.js","webpack:///./~/react-router/lib/PropTypes.js","webpack:///./~/react-router/lib/Route.js","webpack:///./~/react-router/lib/PathUtils.js","webpack:///./~/react-router/~/object-assign/index.js","webpack:///./~/react-router/~/qs/index.js","webpack:///./~/react-router/~/qs/lib/index.js","webpack:///./~/react-router/~/qs/lib/stringify.js","webpack:///./~/react-router/~/qs/lib/utils.js","webpack:///./~/react-router/~/qs/lib/parse.js","webpack:///./~/react-router/lib/components/RouteHandler.js","webpack:///./~/react-router/lib/components/ContextWrapper.js","webpack:///./~/react-router/lib/components/Route.js","webpack:///./~/react-router/lib/components/Link.js","webpack:///./~/react-router/lib/components/NotFoundRoute.js","webpack:///./~/react-router/lib/components/Redirect.js","webpack:///./~/react-router/lib/locations/HashLocation.js","webpack:///./~/react-router/lib/actions/LocationActions.js","webpack:///./~/react-router/lib/History.js","webpack:///./~/react-router/lib/locations/HistoryLocation.js","webpack:///./~/react-router/lib/locations/RefreshLocation.js","webpack:///./~/react-router/lib/locations/StaticLocation.js","webpack:///./~/react-router/lib/locations/TestLocation.js","webpack:///./~/react-router/lib/behaviors/ImitateBrowserBehavior.js","webpack:///./~/react-router/lib/behaviors/ScrollToTopBehavior.js","webpack:///./~/react-router/lib/Navigation.js","webpack:///./~/react-router/lib/State.js","webpack:///./~/react-router/lib/createRoutesFromReactChildren.js","webpack:///./~/react-router/lib/createRouter.js","webpack:///./~/react-router/lib/ScrollHistory.js","webpack:///./~/react-router/lib/getWindowScrollPosition.js","webpack:///./~/react-router/lib/isReactChildren.js","webpack:///./~/react-router/lib/Transition.js","webpack:///./~/react-router/lib/Cancellation.js","webpack:///./~/react-router/lib/Redirect.js","webpack:///./~/react-router/lib/Match.js","webpack:///./~/react-router/lib/supportsHistory.js","webpack:///./~/react-router/lib/runRouter.js","webpack:///./client/js/components/MapPage.react.jsx","webpack:///./client/js/map.js","webpack:///./~/d3.geo.tile/index.js","webpack:///./client/js/buildgeojson.js","webpack:///./client/json/bikeRoutesJson.js","webpack:///./client/json/docksPositionJson.js","webpack:///./client/js/fetchData.js","webpack:///./client/js/components/Predictions.react.jsx"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA,sBAAqB,IAAI,WAAW,GAAG,oBAAQ,GAAwB,CAAC,CAAC;AACzE,KAAI,KAAK,GAAG,oBAAQ,CAAO,CAAC,CAAC;;AAE7B,KAAI,MAAM,GAAG,oBAAQ,GAAc,CAAC,CAAC;AACrC,KAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AACvB,4DAA2D;AAC3D,KAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AACzB,uCAAsC;AACtC,KAAI,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;;AAEvC,KAAI,UAAU,GAAG,oBAAQ,CAA0B,CAAC,CAAC;AACrD,KAAI,OAAO,GAAG,oBAAQ,GAA4B,CAAC,CAAC;AACpD,KAAI,WAAW,GAAG,oBAAQ,GAAgC,CAAC,CAAC;AAC5D;;AAEA,KAAI,yBAAyB;GAC3B,MAAM,aAAI,CAAC;KACT;OACE,yBAAI,MAAC;SACH,yBAAI,IAAC,WAAS,CAAC,WAAY;aACvB,yBAAI,IAAC,WAAS,CAAC,YAAa;eAC1B,oBAAC,IAAI,IAAC,IAAE,CAAC,OAAK,CAAC,QAAM,CAAE,CAAC,MAAM,EAAE,CAAC,CAAG,OAAU;eAC9C,oBAAC,IAAI,IAAC,IAAE,CAAC,cAAY,CAAC,QAAM,CAAE,CAAC,MAAM,EAAE,CAAC,CAAG,cAAiB;eAC5D,oBAAC,IAAI,IAAC,IAAE,CAAC,eAAa,CAAC,QAAM,CAAE,CAAC,MAAM,EAAE,CAAC,CAAG,cAAmB;aAC3D;aACN,wBAAG,MAAC,eAAgB;aACpB,wBAAG,MAAC,0CAA2C;UAC5C;SACP,oBAAC,YAAY,MAAE;OACX;MACP;IACF;AACH,EAAC,CAAC,CAAC;AACH;;AAEA,0CAAyC;AACzC,KAAI,MAAM;GACR,oBAAC,KAAK,IAAC,SAAO,CAAE,GAAI,CAAC,UAAQ,CAAC,SAAU;KACtC,oBAAC,KAAK,IAAC,MAAI,CAAC,cAAY,CAAC,MAAI,CAAC,cAAY,CAAC,SAAO,CAAE,QAAa;KACjE,oBAAC,KAAK,IAAC,MAAI,CAAC,OAAK,CAAC,MAAI,CAAC,OAAK,CAAC,SAAO,CAAE,KAAU;KAChD,oBAAC,KAAK,IAAC,MAAI,CAAC,eAAa,CAAC,MAAI,CAAC,eAAa,CAAC,SAAO,CAAE,OAAc;GAC9D;AACV,EAAC,CAAC;AACF;;AAEA,OAAM,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,YAAY,EAAE,SAAS,IAAI,EAAE,CAAC;GACtD,KAAK,CAAC,MAAM,CAAC,oBAAC,IAAI,MAAE,IAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;EAC1D,CAAC,CAAC;;;;;;;AC/CH,sBAAqB,IAAI,KAAK,GAAG,oBAAQ,CAAO,CAAC,CAAC;AAClD,KAAI,QAAQ,GAAG,oBAAQ,GAAkB,CAAC,CAAC;AAC3C,KAAI,WAAW,GAAG,oBAAQ,GAAqB,CAAC,CAAC;AACjD,KAAI,SAAS,GAAG,oBAAQ,GAAmB,CAAC,CAAC;;AAE7C,KAAI,2BAA2B;AAC/B,GAAE,MAAM,EAAE,YAAY,CAAC;;KAEnB,IAAI,QAAQ,GAAG;OACb,KAAK,EAAE,MAAM;AACnB,MAAK,CAAC;;KAEF;OACE,yBAAI,MAAC;SACH,yBAAI,IAAC,OAAK,CAAE,QAAU;WACpB,oBAAC,QAAQ,KAAE,IAAE,CAAC,EAAM;SAChB;SACN,yBAAI,IAAC,OAAK,CAAE,QAAU;WACpB,oBAAC,QAAQ,KAAE,IAAE,CAAC,EAAM;SAChB;SACN,yBAAI,IAAC,OAAK,CAAE,QAAU;WACpB,oBAAC,QAAQ,KAAE,IAAE,CAAC,EAAM;SAChB;SACN,yBAAI,IAAC,OAAK,CAAE,CAAC,KAAK,EAAE,MAAM,CAAG;YAC1B,oBAAC,WAAW,KAAE,IAAE,CAAC,EAAM;SACpB;SACN,yBAAI,IAAC,OAAK,CAAE,CAAC,KAAK,EAAE,MAAM,CAAG;WAC3B,oBAAC,SAAS,KAAE,IAAE,CAAC,EAAO;SAClB;OACF;OACN;AACN,IAAG;;AAEH,EAAC,CAAC,CAAC;;AAEH,OAAM,CAAC,OAAO,GAAG,KAAK,CAAC;;;;;;;ACnCvB;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACnJA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;ACzFtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,eAAe;AAC1B,aAAY,KAAK;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,oCAAmC,8BAA8B;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;;AAEA;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA6B,sBAAsB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd,eAAc;AACd;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,2CAA0C,yBAAyB,EAAE;AACrE;AACA;;AAEA,2BAA0B;AAC1B;AACA;AACA;;AAEA;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,GAAG;AACd,YAAW,iBAAiB;AAC5B,YAAW,EAAE;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,GAAG;AACd,YAAW,UAAU;AACrB,YAAW,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,GAAG;AACd,YAAW,iBAAiB;AAC5B,YAAW,EAAE;AACb,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,GAAG;AACd,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,6DAA4D,aAAa;AACzE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAQ;AACR;AACA,QAAO;AACP;;AAEA;AACA,SAAQ;AACR;AACA,QAAO;AACP;;AAEA;AACA,IAAG,YAAY;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,YAAW,cAAc;AACzB,YAAW,EAAE;AACb,YAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sCAAsC;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,QAAQ;AACnB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,WAAW;AAC5D;AACA;AACA,sBAAqB,SAAS;AAC9B;AACA;AACA,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qCAAoC;AACpC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0BAAyB,8BAA8B;AACvD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2CAA0C,8CAA8C,UAAU;AAClG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb;;AAEA;AACA;AACA,sEAAqE,yBAAyB;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA4C,aAAa;AACzD,oDAAmD,YAAY;;AAE/D;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;;AAEA;;AAEA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,EAAE;AACb,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,EAAE;AACb,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAW,GAAG;AACd,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,UAAU;AACrB,YAAW,GAAG;AACd;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB;;AAEvB;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,GAAG;AACd,YAAW,UAAU;AACrB,YAAW,GAAG;AACd,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACxPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,yCAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,cAAa,EAAE;AACf,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;;;;;;AC3UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,gBAAgB;AAC3B;AACA,YAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACtSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,eAAe;AAC1B,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2DAA0D;AAC1D;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;;AAEA;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,aAAY;AACZ;AACA;AACA;AACA;;AAEA;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,0DAA0D;AACvE,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,aAAa;AAC1B,cAAa,0BAA0B;AACvC,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,iBAAiB;AAC1C;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa,QAAQ;AACrB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,aAAa;AACxB,YAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB,YAAW,EAAE;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,EAAE;AACb;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,sBAAsB;AACzC;AACA;;AAEA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;;AAGA;AACA,IAAG;;AAEH;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;AC5cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,aAAa;AACxB,aAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,aAAa;AACxB,aAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,UAAU;AACrB,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAW,eAAe;AAC1B,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,4BAA4B;AACvC;AACA,aAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA,eAAc,0BAA0B;AACxC;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,6BAA4B,gCAAgC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,2DAA0D;AAC1D;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,gCAAgC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,sDAAqD;AACrD;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;AC5OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yBAAwB,aAAa;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,KAAK;AAClC;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,eAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,cAAa,0BAA0B;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,cAAa,WAAW;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,0BAA0B;AACvC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,sBAAqB,mBAAmB;AACxC;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,aAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,aAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,aAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,8CAA8C,UAAU;AACnG,uDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;AC76BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,OAAO;AACpB,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;;;;;;;;AC9KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,EAAE;AACb,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,0DAA0D;AACvE,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,UAAU;AACvB,cAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA,EAAC;;AAED;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,EAAE;AACf,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;;;;;;;;AC3LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAY;AACZ;AACA,qBAAoB;;AAEpB;AACA;AACA;AACA,aAAY;AACZ;AACA,8BAA6B;;AAE7B;AACA;AACA;AACA,aAAY;AACZ;AACA,uBAAsB;;AAEtB;AACA;AACA;AACA,aAAY;AACZ;AACA,sBAAqB;;AAErB;AACA;AACA;AACA,aAAY;AACZ;AACA,wBAAuB;;AAEvB;AACA;AACA,aAAY;AACZ;AACA,uBAAsB;;AAEtB;AACA;AACA;AACA,aAAY;AACZ;AACA,sBAAqB;;AAErB;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA,qBAAoB;;AAEpB;AACA;AACA,aAAY;AACZ;AACA,sBAAqB;;AAErB;AACA;AACA;AACA,aAAY;AACZ;AACA,sBAAqB;;AAErB;AACA;AACA;AACA,aAAY;AACZ;AACA,8BAA6B;;AAE7B;AACA;AACA,mCAAkC;AAClC,cAAa;AACb,aAAY;AACZ;AACA,gCAA+B;;AAE/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,oDAAoD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;;;;;;;;ACtSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,EAAE;AACb,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,cAAa;AACb,aAAY;AACZ,aAAY;AACZ,eAAc;AACd,gBAAe;AACf;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,EAAE;AACb,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,cAAc;AAC3B,cAAa,cAAc;AAC3B;AACA;AACA;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;;ACnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6CAA4C;;AAE5C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAgC,0BAA0B;AAC1D,qBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAqE;AACrE;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;;AAEA;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,EAAE;AACb,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;;AAEA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;;AAEA;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,WAAW;AACtB,YAAW,WAAW;AACtB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa,cAAc;AAC3B,cAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,sBAAqB,4BAA4B;AACjD;AACA;AACA;;AAEA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,cAAc;AAC3B,eAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBAAqB,wBAAwB;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACtLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,UAAU;AACrB,aAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,aAAY;AACZ;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,yBAAyB;AACpC,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB,aAAa;AAC/B;AACA;AACA;AACA;;AAEA;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,WAAW;AACtB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,WAAW;AACtB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,WAAW;AACtB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,8CAA8C;AACzD,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,WAAW;AACtB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,EAAE;AACb,aAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,YAAY;AACvB,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,OAAO;AAClB,YAAW,WAAW;AACtB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,OAAO;AAClB,YAAW,WAAW;AACtB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,SAAS;AACtB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,aAAa;AAC1B,cAAa,WAAW;AACxB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,WAAW;AACxB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,cAAa,aAAa;AAC1B,cAAa,WAAW;AACxB,cAAa,QAAQ;AACrB,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,aAAa;AAC1B,cAAa,WAAW;AACxB,cAAa,UAAU;AACvB,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,QAAQ;AACrB,cAAa,WAAW;AACxB,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,QAAQ;AACrB,cAAa,OAAO;AACpB,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,WAAW;AACxB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,WAAW;AACxB;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,YAAY;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,EAAE;AACf,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,eAAc,OAAO;AACrB,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;;ACtyCAAwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,EAAC;;AAED;;;;;;;AC9VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,gBAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB;AACA;;AAEA,IAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6EAA4E;AAC5E;AACA,IAAG;;AAEH;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,UAAU;AACxB;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACjRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA8B;;AAE9B;AACA;AACA;AACA,8BAA6B;;AAE7B;AACA;AACA;AACA,mCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACnRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA,aAAY,WAAW;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,YAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,cAAa,OAAO;AACpB,cAAa,WAAW;AACxB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,YAAW,EAAE;AACb,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,EAAE;AACb,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,YAAW,uBAAuB;AAClC;AACA,aAAY,GAAG;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,EAAE;AACb,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,cAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,0DAA0D;AACvE,eAAc,QAAQ;AACtcAAa,OAAO;AACpB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,cAAa,OAAO;AACpB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,uBAAsB;AACtB;AACA;AACA,IAAG;;AAEH;AACA;AACA,uEAAsE;AACtE;AACA;AACA,cAAa,OAAO;AACpB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,0BAA0B;AACvC,cAAa,aAAa;AAC1B,cAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8BAA6B;AAC7B,kCAAiC,kBAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,aAAa;AAC1B,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,cAAa,0BAA0B;AACvC,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,2DAA0D;AAC1D;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;;;;;;AC54BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAqB;;AAErB,oBAAmB,YAAY;;AAE/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,YAAY;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,+BAA+B;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qDAAoD;AACpD;AACA,wBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,0DAA0D;AACvE,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,eAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,4DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,0BAA0B;AACvC,cAAa,aAAa;AAC1B,cAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD;AACxD,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,0BAA0B;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,eAAe;AAC9B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,eAAe;AAC9B,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,gBAAe,eAAe;AAC9B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,gBAAe,eAAe;AAC9B,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;AC3aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,cAAa,0BAA0B;AACvC,cAAa,OAAO;AACpB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,YAAW,SAAS;AACpB,YAAW,gBAAgB;AAC3B,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;AC1JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oCAAmC;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,uBAAsB,oBAAoB;AAC1C,wBAAuB,2BAA2B;AAClD,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,uBAAsB,uBAAuB;AAC7C,wBAAuB,8BAA8B;AACrD,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,uBAAsB,yBAAyB;AAC/C,wBAAuB,gCAAgC;AACvD,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,uBAAsB,0BAA0B;AAChD,wBAAuB,iCAAiC;AACxD,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,eAAe;AAC1B,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,eAAe;AAC1B,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,cAAa,OAAO;AACpB,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,EAAE;AAChB,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5eA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,eAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA6B;AAC7B;;AAEA;AACA;;AAEA;;AAEA;;;;;;;ACnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAsB,eAAe;AACrC,wBAAuB,sBAAsB;AAC7C,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,cAAa,OAAO;AACpB,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,EAAE;AAChB,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC3XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,2BAA2B;AACpC,UAAS,wBAAwB;AACjC,UAAS,qBAAqB;AAC9B,UAAS,4BAA4B;AACrC,UAAS,wBAAwB;AACjC,UAAS,wBAAwB;AACjC,UAAS,6BAA6B;AACtC,UAAS,2BAA2B;AACpC,UAAS,mCAAmC;AAC5C;;AAEA;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA6B,mBAAmB;AAChD;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,8BAA6B,mBAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,EAAE;AAChB,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;ACzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,cAAa,OAAO;AACpB,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,EAAE;AAChB,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,0BAA0B;AACrC,aAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAC;;AAED;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,YAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,EAAC;;AAED;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,0BAAyB;;AAEzB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAC;;AAED;;;;;;;;AC5KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;;AAEH;AACA,cAAa,eAAe;AAC5B,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,cAAa,eAAe;AAC5B,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,cAAa,eAAe;AAC5B,eAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR,4BAA2B;AAC3B,OAAM;AACN;AACA;AACA;AACA;AACA,8BAA6B,KAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,2BAA0B;AAC1B,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,gCAAgC;AACneAAe;AAC1B,YAAW,EAAE;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAqC,OAAO;AAC5C;AACA;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,0BAAyB;;AAEzB;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;;;;;;;AC/KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,0BAAyB;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;;;;;;;;ACvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,EAAE;AACb,aAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;ACpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,qBAAqB;AAChC,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,UAAU;AACxB;AACA;AACA;AACA,cAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;;;;;;AC7KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA,0BAAyB;AACzB,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;ACpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,WAAW;AACtB,aAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,WAAW;AACtB,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,uBAAuB;AAClC,YAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,uBAAuB;AAClC,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,WAAW;AACxB;AACA;;AAEA;AACA,cAAa,uBAAuB;AACpC,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;;;;;;;AClNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,uBAAuB;AAClC,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,uBAAuB;AAClC,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,uBAAuB;AAClC,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA,oBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,EAAC;;AAED;;AAEA;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAsB,eAAe;AACrC,wBAAuB,sBAAsB;AAC7C,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,WAAW;AACtB,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,cAAa,OAAO;AACpB,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,EAAE;AAChB,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAsB,aAAa;AACnC,wBAAuB,oBAAoB;AAC3C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,cAAc;AACpC,wBAAuB,qBAAqB;AAC5C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,oBAAoB;AAC1C,wBAAuB,2BAA2B;AAClD;AACA,IAAG;AACH;AACA;AACA,uBAAsB,aAAa;AACnC,wBAAuB,oBAAoB;AAC3C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,YAAY;AAClC,wBAAuB,mBAAmB;AAC1C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,oBAAoB;AAC1C,wBAAuB,2BAA2B;AAClD;AACA,IAAG;AACH;AACA;AACA,uBAAsB,aAAa;AACnC,wBAAuB,oBAAoB;AAC3C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,gBAAgB;AACtC,wBAAuB,uBAAuB;AAC9C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,kBAAkB;AACxC,wBAAuB,yBAAyB;AAChD;AACA,IAAG;AACH;AACA;AACA,uBAAsB,iBAAiB;AACvC,wBAAuB,wBAAwB;AAC/C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,kBAAkB;AACxC,wBAAuB,yBAAyB;AAChD;AACA,IAAG;AACH;AACA;AACA,uBAAsB,iBAAiB;AACvC,wBAAuB,wBAAwB;AAC/C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,kBAAkB;AACxC,wBAAuB,yBAAyB;AAChD;AACA,IAAG;AACH;AACA;AACA,uBAAsB,aAAa;AACnC,wBAAuB,oBAAoB;AAC3C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,cAAc;AACpC,wBAAuB,qBAAqB;AAC5C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,cAAc;AACpC,wBAAuB,qBAAqB;AAC5C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,gBAAgB;AACtC,wBAAuB,uBAAuB;AAC9C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,iBAAiB;AACvC,wBAAuB,wBAAwB;AAC/C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,cAAc;AACpC,wBAAuB,qBAAqB;AAC5C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,aAAa;AACnC,wBAAuB,oBAAoB;AAC3C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,cAAc;AACpC,wBAAuB,qBAAqB;AAC5C;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,uBAAsB,kBAAkB;AACxC,wBAAuB,yBAAyB;AAChD;AACA,IAAG;AACH;AACA;AACA,uBAAsB,kBAAkB;AACxC,wBAAuB,yBAAyB;AAChD;AACA,IAAG;AACH;AACA;AACA,uBAAsB,iBAAiB;AACvC,wBAAuB,wBAAwB;AAC/C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,kBAAkB;AACxC,wBAAuB,yBAAyB;AAChD;AACA,IAAG;AACH;AACA;AACA,uBAAsB,gBAAgB;AACtC,wBAAuB,uBAAuB;AAC9C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,cAAc;AACpC,wBAAuB,qBAAqB;AAC5C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,cAAc;AACpC,wBAAuB,qBAAqB;AAC5C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,eAAe;AACrC,wBAAuB,sBAAsB;AAC7C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,eAAe;AACrC,wBAAuB,sBAAsB;AAC7C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,oBAAoB;AAC1C,wBAAuB,2BAA2B;AAClD;AACA,IAAG;AACH;AACA;AACA,uBAAsB,iBAAiB;AACvC,wBAAuB,wBAAwB;AAC/C;AACA,IAAG;AACH;AACA;AACA,uBAAsB,kBAAkB;AACxC,wBAAuB,yBAAyB;AAChD;AACA,IAAG;AACH;AACA;AACA,uBAAsB,mBAAmB;AACzC,wBAAuB,0BAA0B;AACjD;AACA,IAAG;AACH;AACA;AACA,uBAAsB,cAAc;AACpC,wBAAuB,qBAAqB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,cAAa,OAAO;AACpB,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,EAAE;AAChB,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACvaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA,wBAAuB,8CAA8C,UAAU;AAC/E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,wBAAuB;AACvB,qBAAoB;AACpB,qBAAoB;AACpB,qBAAoB;AACpB,2BAA0B;AAC1B;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,yBAAyB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAiB,yBAAyB;AAC1C;AACA;AACA,SAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA,kBAAiB,yBAAyB;AAC1C;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;;AAExB;AACA;AACA;AACA;AACA,oBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAW,aAAa;AACxB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;;AAEA;AACA,YAAW,aAAa;AACxB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAc,MAAM;AACpB;AACA;AACA;AACA,IAAG;;AAEH;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,aAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnCA,sBAAqB,IAAI,KAAK,GAAG,oBAAQ,CAAO,CAAC,CAAC;AAClD,KAAI,GAAG,GAAG,oBAAQ,GAAa,CAAC,CAAC;AACjC,KAAI,aAAa,GAAG,oBAAQ,GAAyB,CAAC,CAAC;AACvD,KAAI,EAAE,GAAG,oBAAQ,GAAI,CAAC,CAAC;AACvB,KAAI,KAAK,GAAG,oBAAQ,GAAsB,CAAC,CAAC;AAC5C,KAAI,OAAO,GAAG,oBAAQ,GAAkB,CAAC,CAAC;AAC1C,KAAI,KAAK,GAAG,oBAAQ,GAAe,CAAC,CAAC;AACrC,KAAI,KAAK,GAAG,oBAAQ,GAAe,CAAC,CAAC;AACrC,KAAI,cAAc,GAAG,oBAAQ,GAA2B,CAAC,CAAC;;AAE1D,KAAI,8BAA8B;GAChC,eAAe,EAAE,UAAU,CAAC;KAC1B,MAAM;OACJ,IAAI,EAAE,EAAE;OACR,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;OACvB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;OACzB,UAAU,EAAE,kBAAkB;OAC9B,QAAQ,EAAE,kBAAkB;MAC7B,CAAC;IACH;GACD,eAAe,EAAE,UAAU,CAAC;KAC1B,OAAO;OACL,KAAK,EAAE,KAAK;OACZ,MAAM,EAAE,KAAK;MACd,CAAC;AACN,IAAG;AACH;AACA;;GAEE,gBAAgB,EAAE,UAAU,CAAC;KAC3B,IAAI,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACjC,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;KAC3B,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;AACjE,IAAG;;GAED,UAAU,EAAE,UAAU,CAAC;KACrB,IAAI,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACjC,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;KAC3B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;KACxD,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;QACf,IAAI,CAAC,WAAW,EAAE,YAAY,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;IAC1D;GACD,kBAAkB,EAAE,UAAU,CAAC;KAC7B,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC1F;GACD,iBAAiB,EAAE,UAAU,CAAC;AAChC,KAAI,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAI,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;;KAEzD,IAAI,CAAC,UAAU,EAAE,CAAC;KAClB,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB;AACH,GAAE,YAAY,EAAE,SAAS,OAAO,CAAC,CAAC;;KAE9B,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE;SACrB,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;AACzC,SAAQ,MAAM,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAErC,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE;SACvB,eAAe,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;AACxD,SAAQ,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;;KAE7B,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB;GACD,kBAAkB,EAAE,UAAU,CAAC;KAC7B,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;OACjB,IAAI,CAAC,UAAU,EAAE,CAAC;MACnB;IACF;GACD,MAAM,EAAE,YAAY,CAAC;KACnB,IAAI,QAAQ,GAAG;OACb,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;OACvB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;MAC1B,CAAC;AACN,KAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;;SAEf,IAAI,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC1H,SAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AAChD;;SAEQ,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,EAAE,CAAC;WAC5C,QAAQ,oBAAC,GAAG,IAAC,KAAG,CAAE,GAAG,CAAC,GAAI,CAAC,MAAI,CAAE,GAAI,CAAC,SAAO,CAAE,MAAO,EAAK;AACrE,UAAS,EAAE,IAAI,CAAC,CAAC;;SAET;WACE,yBAAI,IAAC,OAAK,CAAE,QAAU;aACpB,uBAAE,IAAC,WAAS,CAAC,OAAQ;aACpB,CAAC,IAAI,MAAE;aACR,oBAAC,KAAK,IAAC,QAAM,CAAE,IAAI,CAAC,KAAK,CAAC,MAAO,CAAC,GAAC,CAAE,MAAM,CAAC,CAAE,CAAE;aAChD,oBAAC,KAAK,IAAC,OAAK,CAAE,IAAI,CAAC,KAAK,CAAC,KAAM,CAAC,GAAC,CAAE,MAAM,CAAC,CAAK;aAC3C;WACA;WACN;MACL,MAAM;OACL,QAAQ,yBAAI,MAAO,GAAE;MACtB;IACF;GACD,SAAS,EAAE,UAAU,CAAC;KACpB,IAAI,CAAC,QAAQ,CAAC;QACX,IAAI,EAAE,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;OAC1C,CAAC,CAAC;IACL;AACH,EAAC,CAAC,CAAC;;AAEH,OAAM,CAAC,OAAO,GAAG,QAAQ,C;;;;;;ACjHzB,sBAAqB,IAAI,KAAK,GAAG,oBAAQ,CAAO,CAAC,CAAC;AAClD,KAAI,gBAAgB,GAAG,oBAAQ,GAAoC,CAAC,CAAC;AACrE,qEAAoE;AACpE,KAAI,EAAE,GAAG,oBAAQ,GAAI,CAAC,CAAC;;AAEvB,KAAI,yBAAyB;GAC3B,iBAAiB,EAAE,WAAW,CAAC;KAC7B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;KAC3C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrD;GACD,qBAAqB,EAAE,SAAS,SAAS,EAAE,CAAC;KAC1C,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;KAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;KAClE,OAAO,IAAI,CAAC;IACb;IACA,iBAAiB,EAAE,WAAW,CAAC;AAClC,KAAI;;GAEF,MAAM,EAAE,WAAW,CAAC;KAClB;OACE,uBAAE,IAAC,WAAS,CAAC,KAAQ;OACrB;IACH;AACH,EAAC,CAAC,CAAC;;AAEH,OAAM,CAAC,OAAO,GAAG,GAAG,C;;;;;;AC1BpB;;AAEA;AACA;AACA,eAAc;AACd,gBAAe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mD;AACA,WAAU;;;AAGV;AACA,qCAAoC,uBAAuB,EAAE;AAC7D;;AAEA;AACA;AACA,iCAAgC,uBAAuB,EAAE;AACzD;AACA;AACA;AACA;AACA,4BAA2B,4BAA4B,EAAE;AACzD;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+C;AACA,OAAM;;AAEN;AACA,qCAAoC,uBAAuB,EAAE;AAC7D;;AAEA;AACA;AACA,iCAAgC,uBAAuB,EAAE;AACzD;AACA;AACA;AACA;AACA,4BAA2B,4BAA4B,EAAE;AACzD;;AAEA;AACA;;AAEA;;AAEA,mC;;;;;;ACjuEAAsE;AACtE,MAAK;AACL,yFAAwF;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA8E,SAAS;AACvF,wDAAuD,SAAS;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA,yEAAwE;AACxE,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,EAAE;AACpD,uBAAsB;AACtB;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,SAAS;AAC9C;AACA;AACA,yCAAwC,SAAS;AACjD;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,SAAS;AAC9C,0DAAyD,SAAS;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD;AAChD;AACA;AACA;AACA,qEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,SAAS;AAC7B;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,qBAAoB,SAAS;AAC7B;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,qBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,QAAO;AACP,qBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,eAAc,MAAM;AACpB;AACA;AACA,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,OAAO;AAC3C;AACA;AACA,wCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,SAAS;AAC9C,6EAA4E,UAAU;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,uCAAsC,OAAO;AAC7C,iEAAgE,OAAO;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,OAAO;AAC3C,yDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,SAAS;AAC9C;AACA;AACA;AACA,yCAAwC,SAAS;AACjmEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,OAAO;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,YAAW;AACX;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,wCAAwiBAAgB,iFAAiF;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA,UAAS,gBAAgB;AACzB;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA,mBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD;AAChqDAAoD;AACpD;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,uEAAsE,6BAA6B;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,iEAAgE,QAAQ;AACxwBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,8DAA6D,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,OAAO;AACrD,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,4CAA2C,QAAQ;AACnD,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B,qEAAoE,OAAO;AAC3E;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,6CAA4C;AAC5C;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACbgCAA+B,iCAAiC;AAChkBAAiB,OAAO;AACxB;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA,iCAAgC,QAAQ;AACxC,0BAAyB,8BAA8B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmmBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjmCAAkC;AAClC;AACA;AACA;AACA,QAAO;AACP,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,agDAA+C;AAC/C,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,gCAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,iBAAiB,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,QAAQ;AACtB;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA,8BAA6B;AAC7B,QAAO;AACP;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL,yBAAwB,OAAO;AAC/B;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,WAAU,OAAO;AACjB,WAAU,OAAO;AACjB;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,8BAA8B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,8BAA8B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,kBAAiB,OAAO;AACxkBAAiB,OAAO;AACxB;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,OAAO,2DAA2D,iBAAiB,OAAO;AACnJ;AACA,0DAAyD,OAAO,2DAA2D,iBAAiB,OAAO;AACnJ;AACA,oDAAmD,OAAO,mDAAmD,iBAAiB,OAAO;AACrI;AACA;AACA;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA,sBAAqkBAAiB,OAAO;AACxB;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA,kBAAiB,OAAO;AACxB,2BAA0B,OAAO;AACjC;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,kBAAiB,OAAO;AACxB,4BAA2B,OAAO;AAClC,wDAAuD,OAAO;AAC9D,2EAA0E,OAAO;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA,MAAK;AACL;AACA;AACA,kBAAiB,OAAO;AACxB,2BAA0B,OAAO;AACjC,2BAA0B,OAAO,yBAAyB,iBAAiB,OAAO;AAClF;AACA,kBAAiB,OAAO;AACxB;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,MAAM;AAChoBAAmB,OAAO;AAC1B;AACA;AACA,iCAAgC,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,oBAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,kFAAiF;AACjF;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,+EAA8E,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,+BAA8B,OAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,gCAAgC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,MAAM,qBAAqB,OAAO;AAClD;AACA,UAAS;AACT;AACA,iBAAgB,QAAQ,sBAAsB,OAAO;AACrD;AACA,oBAAmB,cAAc;AACjC,+BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,qBAAqqEAAoE;AACpsCAAqC,SAAS;AAC9C;AACA,0DAAyD,SAAS;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,SAAS;AAC9C;AACA,0DAAyD,SAAS;AAClE;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,SAAS;AAC9C,0DAAyD,SAAS;AAClE;AACA;AACA;AACA;AACA,gDAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,OAAO;AAC3C;AACA,yDAAwqCAAoC,OAAO;AAC3C;AACA,yDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACbuCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,0BAA0B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,uWAA6D;AAC7D;AACA,EAAC,G;;;;;;AC/xSD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA6C,kCAAkC,EAAE;AACjF;;AAEA,8BAA6B;;AAE7B;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA,EAAC;;;AAGD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,EAAC;;AAED,gC;;;;;;ACnDA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;;AAEA;AACA;AACA;AACA;;AAEA,iBAAgB,sBAAsB;AACtC;AACA;;AAEA,kBAAiB,iBAAiB;AAClC;AACA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,gBAAe,SAAS;AACxB;;AAEA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH,qBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC5SA;;AAEA,mC;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,uBAAsB;AACtB;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;ACzPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,2CAA0C,yBAAyB,EAAE;AACrE;AACA;;AAEA,2BAA0B;AAC1B;AACA;AACA;;AAEA;;;;;;;ACpDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;AAID,4B;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA6B,sBAAsB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd,eAAc;AACd;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpDA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA4B,2CAA2C;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK,E;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,WAAW;AACpB,iBAAgB,2BAA2B;AAC3C;AACA;AACA;AACA;AACA,MAAK,E;;AAEL,I;AACA;AACA;AACA,uD;AACA;;;AAGA,wB;;;;;;AC3FA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ,E;AACR,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,G;;;;;;AC9DA;;AAEA;AACA;;AAEA,2CAA0C,iBAAiB,EAAE;AAC7D,2CAA0C,iBAAiB,EAAE;;AAE7D,2CAA0C,iBAAiB,EAAE;AAC7D,2CAA0C,iBAAiB,EAAE;;AAE7D;;AAEA,0CAAyC,iBAAiB,EAAE;AAC5D,0CAAyC,iBAAiB,EAAE;;AAE5D;AACA;AACA;AACA;AACA,aAAY;AACZ,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,qB;AACA,MAAK;AACL;AACA;AACA;;;AAGA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChDA,sBAAqB,IAAI,KAAK,GAAG,oBAAQ,CAAO,CAAC,CAAC;AAClD,qEAAoE;AACpE,KAAI,EAAE,GAAG,oBAAQ,GAAI,CAAC,CAAC;;AAEvB,KAAI,2BAA2B;AAC/B,GAAE,iBAAiB,EAAE,WAAW,CAAC;AACjC;AACA;;KAEI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;AACpH,KAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;;KAE3C,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;iBACZ,QAAQ,CAAC,IAAI,CAAC;AAC9B,iBAAgB,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;;KAEhD,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,QAAQ,CAAC;OAChC,IAAI,CAAC,MAAM;UACR,UAAU,EAAE;UACZ,QAAQ,CAAC,IAAI,CAAC;UACd,IAAI,CAAC,WAAW,EAAE,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC;AACxE,MAAK;;KAED,IAAI,CAAC,MAAM;AACf,SAAQ,IAAI,CAAC,IAAI,CAAC,CAAC;;IAEhB;AACH,GAAE,qBAAqB,EAAE,SAAS,SAAS,EAAE,CAAC;AAC9C;AACA;;KAEI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AAClH,KAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;;KAE3C,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;iBACZ,QAAQ,CAAC,IAAI,CAAC;AAC9B,iBAAgB,KAAK,CAAC,SAAS,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;;KAE/C,IAAI,CAAC,MAAM;AACf,SAAQ,IAAI,CAAC,IAAI,CAAC,CAAC;;KAEf,GAAG,SAAS,CAAC,MAAM,KAAK,QAAQ,CAAC;OAC/B,IAAI,CAAC,MAAM;UACR,UAAU,EAAE;UACZ,QAAQ,CAAC,IAAI,CAAC;UACd,IAAI,CAAC,WAAW,EAAE,cAAc,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC;AACvE,MAAK;;KAED,OAAO,IAAI,CAAC;AAChB,IAAG;AACH;AACA;AACA;AACA;AACA;;GAEE,MAAM,EAAE,WAAW,CAAC;KAClB;OACE,uBAAE,IAAC,WAAS,CAAC,QAAW;OACxB;IACH;AACH,EAAC,CAAC,CAAC;;AAEH,OAAM,CAAC,OAAO,GAAG,KAAK,C;;;;;;AC/DtB,sBAAqB,IAAI,KAAK,GAAG,oBAAQ,CAAO,CAAC,CAAC;AAClD,qEAAoE;AACpE,KAAI,EAAE,GAAG,oBAAQ,GAAI,CAAC,CAAC;;AAEvB,KAAI,2BAA2B;AAC/B,GAAE,iBAAiB,EAAE,WAAW,CAAC;AACjC;;KAEI,IAAI,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC7E,KAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;;KAE3C,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;iBACZ,QAAQ,CAAC,IAAI,CAAC;AAC9B,iBAAgB,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACpD;;KAEI,IAAI,CAAC,MAAM;AACf,SAAQ,IAAI,CAAC,KAAK,CAAC,CAAC;;IAEjB;GACD,qBAAqB,EAAE,SAAS,SAAS,EAAE,CAAC;KAC1C,IAAI,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC5E,KAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;;KAE3C,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;iBACZ,QAAQ,CAAC,IAAI,CAAC;AAC9B,iBAAgB,KAAK,CAAC,SAAS,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;;KAE/C,IAAI,CAAC,MAAM;AACf,SAAQ,IAAI,CAAC,KAAK,CAAC,CAAC;;KAEhB,OAAO,IAAI,CAAC;AAChB,IAAG;AACH;AACA;AACA;AACA;AACA;;GAEE,MAAM,EAAE,WAAW,CAAC;KAClB;OACE,uBAAE,IAAC,WAAS,CAAC,QAAW;OACxB;IACH;AACH,EAAC,CAAC,CAAC;;AAEH,OAAM,CAAC,OAAO,GAAG,KAAK,C;;;;;;AC9CtB,sBAAqB,IAAI,KAAK,GAAG,oBAAQ,CAAO,CAAC,CAAC;AAClD,KAAI,MAAM,GAAG,oBAAQ,GAAgB,CAAC,CAAC;AACvC,KAAI,gBAAgB,GAAG,oBAAQ,GAA4B,CAAC,CAAC;AAC7D,KAAI,EAAE,GAAG,oBAAQ,GAAI,CAAC,CAAC;AACvB,KAAI,KAAK,GAAG,oBAAQ,GAAsB,CAAC,CAAC;AAC5C,KAAI,OAAO,GAAG,oBAAQ,GAAkB,CAAC,CAAC;AAC1C,KAAI,KAAK,GAAG,oBAAQ,GAAe,CAAC,CAAC;AACrC,KAAI,KAAK,GAAG,oBAAQ,GAAe,CAAC,CAAC;AACrC,KAAI,MAAM,GAAG,oBAAQ,GAAgB,CAAC,CAAC;AACvC,KAAI,cAAc,GAAG,oBAAQ,GAA2B,CAAC,CAAC;AAC1D;;AAEA,KAAI,YAAY,CAAC,QAAQ,CAAC;;AAE1B,KAAI,iCAAiC;AACrC,GAAE,eAAe,EAAE,UAAU,CAAC;AAC9B;AACA;AACA;;KAEI,MAAM;OACJ,IAAI,EAAE,EAAE;OACR,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;OACvB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;OACzB,MAAM,EAAE,CAAC;OACT,UAAU,EAAE,kBAAkB;OAC9B,QAAQ,EAAE,kBAAkB;MAC7B,CAAC;IACH;GACD,eAAe,EAAE,UAAU,CAAC;KAC1B,OAAO;OACL,KAAK,EAAE,KAAK;OACZ,MAAM,EAAE,KAAK;MACd,CAAC;AACN,IAAG;AACH;AACA;;GAEE,gBAAgB,EAAE,UAAU,CAAC;KAC3B,WAAW,UAAU,CAAC;OACpB,IAAI,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACvC,OAAM,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;;OAE3B,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;MAC9D,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACnB;GACD,UAAU,EAAE,UAAU,CAAC;KACrB,IAAI,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACjC,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAC/B,KAAI,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC;;KAE1C,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;KACtD,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,WAAW,CAAC;KAC1C,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;QACf,IAAI,CAAC,WAAW,EAAE,YAAY,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;IAC1D;GACD,kBAAkB,EAAE,UAAU,CAAC;KAC7B,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;AACvC,KAAI,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;;IAEhG;GACD,iBAAiB,EAAE,UAAU,CAAC;AAChC,KAAI,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAI,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;;KAEzD,IAAI,CAAC,UAAU,EAAE,CAAC;KAClB,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB;AACH,GAAE,YAAY,EAAE,SAAS,OAAO,CAAC,CAAC;;KAE9B,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE;SACrB,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;AACzC,SAAQ,MAAM,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C;;KAEI,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE;QACtB,KAAK,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;AAC1C,QAAO,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;KAE7B,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB;GACD,kBAAkB,EAAE,UAAU,CAAC;KAC7B,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;OACjB,IAAI,CAAC,UAAU,EAAE,CAAC;MACnB;IACF;AACH,GAAE,QAAQ,EAAE,UAAU,CAAC;;KAEnB,IAAI,CAAC,QAAQ,CAAC;OACZ,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC;MACzC,CAAC;IACH;GACD,MAAM,EAAE,YAAY,CAAC;KACnB,IAAI,QAAQ,GAAG;OACb,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;OACvB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;MAC1B,CAAC;AACN,KAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;;SAE7C,IAAI,KAAK,GAAG,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AACxH,SAAQ,IAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;;SAEhF,IAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAC/E,SAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;;SAEtC,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC;aAChD,QAAQ,oBAAC,MAAM,IAAC,KAAG,CAAE,GAAG,CAAC,GAAI,CAAC,MAAI,CAAE,GAAI,CAAC,SAAO,CAAE,KAAM,CAAC,QAAM,CAAE,MAAO,CAAC,QAAM,CAAE,MAAO,CAAC,OAAK,CAAE,MAAO,CAAC,SAAO,CAAE,IAAI,CAAC,KAAK,CAAC,OAAQ,CAAC,QAAM,CAAE,IAAI,CAAC,KAAK,CAAC,MAAO,CAAE,CAAE;AAC/K,UAAS,EAAE,IAAI,CAAC,CAAC;;SAET,IAAI,WAAW,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,SAAS,KAAK,EAAE,KAAK,CAAC,CAAC;WAC3D,SAAS,oBAAC,MAAM,IAAC,MAAI,CAAE,KAAM,CAAC,QAAM,CAAE,MAAO,CAAC,OAAK,CAAE,IAAI,CAAC,KAAK,CAAC,KAAM,CAAC,OAAK,CAAE,KAAM,CAAG;AACjG,UAAS,EAAE,IAAI,CAAC,CAAC;;SAET;WACE,yBAAI,IAAC,OAAK,CAAE,CAAC,KAAK,CAAC,MAAM,CAAG;aAC1B,4BAAO,IAAC,SAAO,CAAE,IAAI,CAAC,QAAU,SAAa;aAC7C,yBAAI,IAAC,OAAK,CAAE,QAAU;eACpB,uBAAE,IAAC,WAAS,CAAC,OAAQ;iBAClB,CAAC,OAAO,SAAE;iBACX,oBAAC,KAAK,IAAC,QAAM,CAAE,IAAI,CAAC,KAAK,CAAC,MAAO,CAAC,GAAC,CAAE,MAAM,CAAC,CAAE,CAAC,QAAM,CAAE,IAAI,CAAC,KAAK,CAAC,MAAO,CAAE;iBAC3E,oBAAC,KAAK,IAAC,OAAK,CAAE,IAAI,CAAC,KAAK,CAAC,KAAM,CAAC,GAAC,CAAE,MAAM,CAAC,CAAE,CAAC,QAAM,CAAE,IAAI,CAAC,KAAK,CAAC,MAAO,CAAE;iBACzE,uBAAE,IAAC,OAAK,CAAC,QAAS;mBACf,CAAC,WAAW,aAAE;iBACb;eACF;aACA;WACF;WACN;MACL,MAAM;OACL,QAAQ,yBAAI,MAAO,GAAE;MACtB;IACF;GACD,SAAS,EAAE,UAAU,CAAC;KACpB,IAAI,CAAC,QAAQ,CAAC;QACX,IAAI,EAAE,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;OAC7C,CAAC,CAAC;IACL;AACH,EAAC,CAAC,CAAC;;AAEH,OAAM,CAAC,OAAO,GAAG,WAAW,C;;;;;;ACpJ5B,sBAAqB,IAAI,KAAK,GAAG,oBAAQ,CAAO,CAAC,CAAC;AAClD,KAAI,mBAAmB,GAAG,oBAAQ,GAAuC,CAAC,CAAC;AAC3E,qEAAoE;AACpE,KAAI,EAAE,GAAG,oBAAQ,GAAI,CAAC,CAAC;;AAEvB,KAAI,4BAA4B;AAChC,GAAE,iBAAiB,EAAE,WAAW,CAAC;;KAE7B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;KAC3C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACnI;AACH,GAAE,qBAAqB,EAAE,SAAS,SAAS,EAAE,CAAC;;KAE1C,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;KAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KAClK,OAAO,IAAI,CAAC;IACb;AACH,IAAG,iBAAiB,EAAE,WAAW,CAAC;;AAElC,KAAI;AACJ;AACA;;GAEE,MAAM,EAAE,WAAW,CAAC;KAClB;OACE,4BAAO,IAAC,WAAS,CAAC,QAAW;OAC7B;IACH;AACH,EAAC,CAAC,CAAC;;AAEH,OAAM,CAAC,OAAO,GAAG,MAAM,C;;;;;;AC/BvB;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,mC;AACA,OAAM;AACN,gCAA+B,8CAA8C,EAAE;AAC/E,gCAA+B,8CAA8C,EAAE;AAC/E,mCAAkC,2BAA2B,EAAE;AAC/D;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAO;;;AAGP;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sB;AACA;AACA,sC;AACA,QAAO;AACP,gC;AACA;AACA;AACA;AACA,wD;AACA,QAAO;AACP,gC;AACA;AACA;AACA;AACA,wD;AACA,QAAO;AACP,mCAAkC,2BAA2B,EAAE;;AAE/D;;;AAGA,sC;;;;;;ACrEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4CAA2C,kCAAkC,EAAE;AAC/E;;AAEA,iCAAgC;;AAEhC;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA,EAAC;;;AAGD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,EAAC;;AAED,mC;;;;;;ACrDA,sBAAqB,IAAI,KAAK,GAAG,oBAAQ,CAAO,CAAC,CAAC;AAClD,KAAI,mBAAmB,GAAG,oBAAQ,GAAuC,CAAC,CAAC;AAC3E,qEAAoE;AACpE,KAAI,EAAE,GAAG,oBAAQ,GAAI,CAAC,CAAC;;AAEvB,KAAI,4BAA4B;AAChC,GAAE,iBAAiB,EAAE,WAAW,CAAC;;KAE7B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;KAC3C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC1F;GACD,qBAAqB,EAAE,SAAS,SAAS,EAAE,CAAC;KAC1C,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;KAC3C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;KAC/F,OAAO,IAAI,CAAC;AAChB,IAAG;AACH;AACA;AACA;AACA;AACA;;GAEE,MAAM,EAAE,WAAW,CAAC;KAClB;OACE,uBAAE,IAAC,WAAS,CAAC,QAAW;OACxB;IACH;AACH,EAAC,CAAC,CAAC;AACH;AACA;;AAEA,OAAM,CAAC,OAAO,GAAG,MAAM,C;;;;;;ACjCvB;;AAEA;;;AAGA;AACA;AACA,0C;AACA,kD;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAAyB,gBAAgB,EAAE;;AAE3C;;;AAGA;;AAEA;AACA;AACA,0C;AACA,kD;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAAyB,gBAAgB,EAAE;;AAE3C;;;AAGA,sC;;;;;;ACnDA,sBAAqB,IAAI,KAAK,GAAG,oBAAQ,CAAO,CAAC,CAAC;AAClD,KAAI,IAAI,GAAG,oBAAQ,GAAc,CAAC,CAAC;AACnC,KAAI,cAAc,GAAG,oBAAQ,GAA0B,CAAC,CAAC;AACzD,KAAI,EAAE,GAAG,oBAAQ,GAAI,CAAC,CAAC;AACvB,KAAI,KAAK,GAAG,oBAAQ,GAAsB,CAAC,CAAC;AAC5C,KAAI,OAAO,GAAG,oBAAQ,GAAkB,CAAC,CAAC;AAC1C,KAAI,KAAK,GAAG,oBAAQ,GAAe,CAAC,CAAC;AACrC,KAAI,SAAS,GAAG,oBAAQ,GAAmB,CAAC,CAAC;AAC7C,KAAI,MAAM,GAAG,oBAAQ,GAAgB,CAAC,CAAC;AACvC,KAAI,cAAc,GAAG,oBAAQ,GAA2B,CAAC,CAAC;;AAE1D,KAAI,YAAY,CAAC,QAAQ,CAAC;AAC1B,KAAI,SAAS,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;;AAEvD,KAAI,iBAAiB,GAAG,SAAS,EAAE,CAAC,CAAC;;GAEnC,IAAI,IAAI,GAAG,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;GACrC,OAAO,IAAI,CAAC;AACd,EAAC;AACD;AACA;AACA;;AAEA,KAAI,+BAA+B;AACnC,GAAE,eAAe,EAAE,UAAU,CAAC;AAC9B;AACA;AACA;AACA;;KAEI,MAAM;OACJ,IAAI,EAAE,EAAE;OACR,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;OACvB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;OACzB,QAAQ,EAAE,EAAE;OACZ,UAAU,EAAE,kBAAkB;OAC9B,QAAQ,EAAE,kBAAkB;MAC7B,CAAC;IACH;GACD,eAAe,EAAE,UAAU,CAAC;KAC1B,OAAO;OACL,KAAK,EAAE,KAAK;OACZ,MAAM,EAAE,KAAK;MACd,CAAC;AACN,IAAG;AACH;AACA;;GAEE,gBAAgB,EAAE,UAAU,CAAC;KAC3B,WAAW,UAAU,CAAC;OACpB,IAAI,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACvC,OAAM,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;;OAE3B,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;MAC9D,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACnB;GACD,UAAU,EAAE,UAAU,CAAC;KACrB,IAAI,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACjC,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAC/B,KAAI,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC;;KAE1C,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;KACtD,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,WAAW,CAAC;KAC1C,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;QACf,IAAI,CAAC,WAAW,EAAE,YAAY,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;IAC1D;AACH,GAAE,kBAAkB,EAAE,UAAU,CAAC;AACjC;AACA;AACA;;IAEG;GACD,iBAAiB,EAAE,UAAU,CAAC;KAC5B,IAAI,CAAC,UAAU,EAAE,CAAC;AACtB,KAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;KAErD,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACjG,KAAI,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAI,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAC7D;AACA;;IAEG;GACD,YAAY,EAAE,SAAS,OAAO,CAAC,CAAC;KAC9B,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE;SACnB,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;AACzC,SAAQ,MAAM,CAAC,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,UAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;KAE/E,IAAI,OAAO,GAAG;aACN,CAAC;aACD,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,CAAC;eACvC,GAAG,CAAC,CAAC,OAAO;AAC1B,iBAAgB,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;;iBAE5D,OAAO,CAAC,CAAC;cACZ,CAAC;YACH;KACP,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE;QACtB,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACrC,QAAO,MAAM,CAAC,OAAO,CAAC,CAAC;AACvB;AACA;;AAEA,KAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;KAEhC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB;GACD,kBAAkB,EAAE,UAAU,CAAC;KAC7B,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;OACjB,IAAI,CAAC,UAAU,EAAE,CAAC;OAClB,IAAI,OAAO,GAAG,IAAI,CAAC;AACzB,OAAM,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC;;SAErD,IAAI,UAAU,GAAG,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;YACvC,OAAO,CAAC,CAAC,IAAI,CAAC;AACzB,WAAU,CAAC,CAAC,IAAI,CAAC;;SAET,IAAI,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SACpC,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;SAC3B,IAAI,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC/B,IAAI,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC7D,SAAQ,IAAI,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC7C;;SAEQ,MAAM;AACd,UAAS,SAAS,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;;YAEtC,CAAC,GAAG,WAAW,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;YACrC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACrB,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACjB,GAAG,EAAE,IAAI,EAAE;cACT,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,OAAO,GAAG,EAAE,GAAG,EAAE,CAAC;iBACjD,GAAG,EAAE;AACrB,cAAa,CAAC,GAAG,EAAE,CAAC;;AAEpB,cAAa,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;;YAErB,QAAQ,CAAC,CAAC,QAAQ,EAAE;UACtB,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ;IACF;GACD,MAAM,EAAE,YAAY,CAAC;KACnB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;KAC3B,IAAI,QAAQ,GAAG;OACb,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;OACvB,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE;MACvC,CAAC;AACN,KAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACrD;AACA;;SAEQ,IAAI,EAAE,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACzC,SAAQ,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;;SAE3B,IAAI,KAAK,GAAG,EAAE;AACtB,SAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAC9C;;SAEQ,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;AACjD,SAAQ,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;;SAErC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC;aAClD,QAAQ,oBAAC,IAAI,IAAC,KAAG,CAAE,GAAG,CAAC,GAAI,CAAC,MAAI,CAAE,GAAI,CAAC,SAAO,CAAE,KAAM,CAAC,QAAM,CAAE,IAAI,CAAC,KAAK,CAAC,MAAO,CAAC,OAAK,CAAE,IAAI,CAAC,KAAK,CAAC,MAAO,CAAC,SAAO,CAAE,IAAI,CAAC,KAAK,CAAC,OAAQ,CAAC,UAAQ,CAAE,IAAI,CAAC,KAAK,CAAC,QAAS,CAAC,OAAK,CAAE,IAAI,CAAC,KAAK,CAAC,KAAM,CAAC,OAAK,CAAE,CAAE,CAAC,QAAM,CAAE,MAAO,CAAC,MAAI,CAAE,IAAK,CAAE,CAAE;AACtP,UAAS,EAAE,IAAI,CAAC,CAAC;AACjB;;SAEQ;aACI,yBAAI,IAAC,OAAK,CAAE,QAAU;eACpB,uBAAE,IAAC,WAAS,CAAC,OAAQ;iBACnB,0BAAK,IAAC,IAAE,CAAC,iBAAe,CAAC,OAAK,CAAE,IAAI,CAAC,KAAK,CAAC,KAAM,CAAC,QAAM,CAAE,IAAI,CAAC,KAAK,CAAC,MAAO,CAAC,GAAC,CAAC,KAAG,CAAC,GAAC,CAAC,KAAG,CAAC,WAAS,CAAC,iBAAe,CAAC,OAAK,CAAE,CAAC,IAAI,CAAC,EAAiB;iBAChJ,CAAC,KAAK,OAAE;iBACT,oBAAC,KAAK,IAAC,QAAM,CAAE,IAAI,CAAC,KAAK,CAAC,MAAO,CAAC,GAAC,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAE,CAAC,QAAM,CAAC,QAAQ,CAAE;iBAC3E,oBAAC,SAAS,IAAC,OAAK,CAAE,IAAI,CAAC,KAAK,CAAC,KAAM,CAAC,GAAC,CAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAI;eAC3D;aACA;WACR;MACL,MAAM;OACL,QAAQ,yBAAI,MAAO,GAAE;MACtB;IACF;AACH,GAAE,SAAS,EAAE,UAAU,CAAC;;AAExB,KAAI,IAAI,IAAI,GAAG,kBAAkB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;;KAE5C,IAAI,CAAC,QAAQ,CAAC;QACX,IAAI,EAAE,IAAI,CAAC,QAAQ;QACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;OACxB,CAAC,CAAC;AACR,IAAG;;AAEH,EAAC,CAAC,CAAC;;AAEH,OAAM,CAAC,OAAO,GAAG,SAAS,C;;;;;;AC3M1B,sBAAqB,IAAI,KAAK,GAAG,oBAAQ,CAAO,CAAC,CAAC;AAClD,KAAI,iBAAiB,GAAG,oBAAQ,GAAqC,CAAC,CAAC;AACvE,qEAAoE;AACpE,KAAI,EAAE,GAAG,oBAAQ,GAAI,CAAC,CAAC;;AAEvB,KAAI,0BAA0B;AAC9B,GAAE,iBAAiB,EAAE,WAAW,CAAC;;KAE7B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;KAC3C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AACtC,QAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AAChO;;IAEG;AACH,GAAE,qBAAqB,EAAE,SAAS,SAAS,EAAE,CAAC;;MAEzC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;MAC1C,IAAI,CAAC,MAAM;AAChB,OAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC;;MAE7N,OAAO,IAAI,CAAC;IACd;AACH,IAAG,iBAAiB,EAAE,WAAW,CAAC;;AAElC,KAAI;AACJ;AACA;;GAEE,MAAM,EAAE,WAAW,CAAC;KAClB;OACE,uBAAE,IAAC,WAAS,CAAC,MAAS;OACtB;IACH;AACH,EAAC,CAAC,CAAC;;AAEH,OAAM,CAAC,OAAO,GAAG,IAAI,C;;;;;;ACnCrB;;AAEA,yBAAwB;AACxB,8C;AACA;AACA,oDAAmD;AACnD,mCAAkC,EAAE;AACpC;AACA,QAAO;AACP;AACA;;;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAwB,kBAAkB,EAAE;AAC5C,yB;AACA;AACA;AACA,gC;AACA,UAAS;;AAET,4C;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAA+B,8CAA8C,EAAE;AAC/E;AACA,mDAAkD;AAClD,KAAI;AACJ;;AAEA,6BAA4B;AAC5B,6BAA4B;;AAE5B,oCAAmC,2DAA2D;AAC9F,yBAAwB,qFAAqF;;AAE7G;AACA,iBAAgB;AAChB,QAAO;;AAEP;AACA;AACA;AACA;AACA,mDAAkD;AAClD,SAAQ;;AAER;AACA;AACA;AACA;AACA;AACA,OAAM;AACN,KAAI;;AAEJ;;AAEA;AACA;AACA,mCAAkC,sBAAsB,EAAE;;AAE1D;AACA;AACA,oC;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA;AACA,sDAAqD;;AAErD;AACA;AACA;AACA,KAAI;;;AAGJ;AACA;AACA,oCAAmC,0CAA0C,EAAE;AAC/E,2BAA0B,eAAe,EAAE,E;;AAE3C;AACA;AACA;AACA;AACA,mD;AACA,WAAU;;AAEV;AACA;AACA,sCAAqC,8BAA8B,EAAE;AACrE;AACA,kCAAiC;AACjC,SAAQ;AACR,gC;AACA,mDAAkD;AAClD,SAAQ;AACR;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA,SAAQ,E;;AAER;;AAEA;;AAEA;AACA;;AAEA,8C;;AAEA;AACA;AACA,2BAA0B,kBAAkB,EAAE;AAC9C,2B;AACA,kC;AACA,YAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,kCAAiC,8CAA8C,EAAE;AACjF;AACA,qDAAoD;AACpD,OAAM;AACN;;AAEA,+BAA8B;AAC9B,+BAA8B;;AAE9B,sCAAqC,2DAA2D;;AAEhG,2BAA0B,qFAAqF;AAC/G;AACA,mBAAkB;AAClB,UAAS;;AAET;AACA;AACA;AACA;AACA,qDAAoD;AACpD,WAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR,OAAM;;AAEN;AACA;AACA;;AAEA,qD;AACA,YAAW;AACX,6BAA4B,eAAe,EAAE,E;;AAE7C;AACA;AACA;AACA,qD;AACA,aAAY;;AAEZ;AACA;AACA;AACA,kC;AACA,qDAAoD;AACpD,WAAU;;AAEV;;;AAGA;;;;;;;ACjNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,QAAO;AACP;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA,8CAA6C,kCAAkC,EAAE;AACjF;;AAEA,+BAA8B;;AAE9B;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA,EAAC;;;AAGD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,EAAC;;AAED,iC;;;;;;ACpEA,sBAAqB,IAAI,KAAK,GAAG,oBAAQ,CAAO,CAAC,CAAC;AAClD,qEAAoE;AACpE,KAAI,EAAE,GAAG,oBAAQ,GAAI,CAAC,CAAC;;AAEvB,KAAI,2BAA2B;AAC/B,GAAE,iBAAiB,EAAE,WAAW,CAAC;AACjC;;KAEI,IAAI,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC7E,KAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;AAC/C;AACA;AACA;AACA;;KAEI,IAAI,CAAC,MAAM;UACN,UAAU,EAAE;UACZ,QAAQ,CAAC,IAAI,CAAC;AACvB,UAAS,IAAI,CAAC,KAAK,CAAC;;KAEhB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;UACrB,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC;UAChC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;UACZ,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC;UACtB,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;UACnB,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC;AACpC,UAAS,IAAI,CAAC,mCAAmC,CAAC,CAAC;;IAEhD;AACH,GAAE,qBAAqB,EAAE,SAAS,SAAS,EAAE,CAAC;;KAE1C,IAAI,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC5E,KAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;AAC/C;AACA;;KAEI,IAAI,CAAC,MAAM;MACV,UAAU,EAAE;MACZ,QAAQ,CAAC,GAAG,CAAC;MACb,IAAI,CAAC,KAAK,CAAC;UACP,MAAM,CAAC,QAAQ,CAAC;WACf,UAAU,EAAE;WACZ,QAAQ,CAAC,IAAI,CAAC;WACd,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC;WAChC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;WACZ,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;WACnB,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC;AACrC,WAAU,IAAI,CAAC,mCAAmC,CAAC,CAAC;AACpD;;KAEI,OAAO,IAAI,CAAC;AAChB,IAAG;AACH;AACA;AACA;AACA;AACA;;GAEE,MAAM,EAAE,WAAW,CAAC;KAClB;OACE,uBAAE,IAAC,WAAS,CAAC,QAAW;OACxB;IACH;AACH,EAAC,CAAC,CAAC;;AAEH,OAAM,CAAC,OAAO,GAAG,KAAK,C;;;;;;ACjEtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wC;;;;;;AC9BA;;AAEA,yDAAwD,0CAA0C,0DAA0D,EAAE;;AAE9J,kDAAiD,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,iDAAiD;;AAE7a;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+B;;;;;;AC9CA;;AAEA;AACA;AACA;;AAEA,0BAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED,4B;;;;;;AC9BA;;AAEA,yDAAwD,0CAA0C,0DAA0D,EAAE;;AAE9J,kCAAiC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEljB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAiF,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAkD;;AAElD;;AAEA;AACA,6KAA4K;AAC5K,QAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gIAA+H;AAC/H;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;;AAEA,gEAA+D;;AAE/D;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAwC,YAAY,kBAAkB;AACtE;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAwC,YAAY,mBAAmB;AACvE;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;;AAEH;AACA,EAAC;;AAED,wB;;;;;;ACvMA;;AAEA;AACA;AACA;;AAEA,uEAAsE;AACtE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAO;AACP;AACA;;AAEA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,4CAA2C,0BAA0B;;AAErE;AACA;AACA,MAAK;AACL;;AAEA;;AAEA,4B;;;;;;ACxJA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAgB,sBAAsB;AACtC;AACA;;AAEA,kBAAiB,iBAAiB;AAClC;AACA;AACA;;AAEA;AACA;;;;;;;ACzBA;;;;;;;ACAA;;AAEA;AACA;;;AAGA;;AAEA;;;AAGA;AACA;AACA;AACA;;;;;;;ACdA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yCAAwC,QAAQ;AAChD;AACA;AACA;;AAEA;AACA;;;;;;;AChGA;;;AAGA;;AAEA;;;AAGA;;AAEA;AACA,wCAAuC,QAAQ;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sCAAqC,QAAQ;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,yCAAwC,QAAQ;AAChD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAiC,QAAQ;AACzC;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACnIA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA,uCAAsC,QAAQ;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,sCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AChKA;;AAEA,yDAAwD,0CAA0C,0DAA0D,EAAE;;AAE9J,kCAAiC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEljB,kDAAiD,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,iDAAiD;;AAE7a;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,QAAO,0BAA0B;AACjC;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+B;;;;;;AC3GA;;AAEA,yDAAwD,0CAA0C,0DAA0D,EAAE;;AAE9J,kCAAiC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEljB,kDAAiD,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,iDAAiD;;AAE7a;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED,iC;;;;;;ACrCA;;AAEA,yDAAwD,0CAA0C,0DAA0D,EAAE;;AAE9J,kCAAiC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEljB,kDAAiD,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,iDAAiD;;AAE7a;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,IAAI;AAC3B,uCAAsC,MAAM;AAC5C,wCAAuC,OAAO;AAC9C,uCAAsC,MAAM;AAC5C;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wB;;;;;;AC1FA;;AAEA,yDAAwD,0CAA0C,0DAA0D,EAAE;;AAE9J,kCAAiC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEljB,kDAAiD,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,iDAAiD;;AAE7a;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,KAAK;AAChE;AACA;AACA;AACA,mCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA,mCAAkC,iBAAiB,SAAS,aAAa;AACzE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAO;;AAEP;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA,QAAO;;AAEP;;AAEA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uB;;;;;;ACtIA;;AAEA,yDAAwD,0CAA0C,0DAA0D,EAAE;;AAE9J,kDAAiD,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,iDAAiD;;AAE7a;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gC;;;;;;AC/CA;;AAEA,yDAAwD,0CAA0C,0DAA0D,EAAE;;AAE9J,kDAAiD,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,iDAAiD;;AAE7a;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2B;;;;;;AC1CA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA,+B;;;;;;AC9GA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,kC;;;;;;ACxBA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,0B;;;;;;AC7BA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA,+BAA8B,aAAa;AAC3C;AACA;AACA,IAAG;;AAEH;AACA,kCAAiC,aAAa;AAC9C;AACA,IAAG;;AAEH;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA,kC;;;;;;ACrFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,kC;;;;;;AC9BA;;AAEA,yDAAwD,0CAA0C,0DAA0D,EAAE;;AAE9J,kCAAiC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEljB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iC;;;;;;AChDA;;AAEA,yDAAwD,0CAA0C,0DAA0D,EAAE;;AAE9J,kCAAiC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEljB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAkD,SAAS;AAC3D;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED,+B;;;;;;AC7FA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA,yC;;;;;;AC5BA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,sC;;;;;;ACdA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,gBAAgB,GAAG,eAAe;AACxE,SAAQ;AACR;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA,OAAM;AACN;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,6B;;;;;;ACrEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,uBAAuB;AACpD;AACA,OAAM;AACN;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wB;;;;;;ACzEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAAyB;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH,wBAAuB;;AAEvB;;AAEA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAU,iDAAiD;AAC3D;AACA;AACA,iCAAgC,IAAI;AACpC,2DAA0D,KAAK;AAC/D,6DAA4D,KAAK;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA,gD;;;;;;AChFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA4C,SAAS;AACrD;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,uCAAsC,SAAS;AAC/C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,oBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;;AAEA;AACA;;AAEA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,QAAO;;AAEP;AACA;AACA,qBAAoB;AACpB,QAAO;;AAEP;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;;AAEX;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,uGAAsG;;AAEtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,YAAW;AACX,UAAS;AACT,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;;AAEA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA,MAAK;;AAEL;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA,IAAG;;AAEH;;AAEA;;AAEA;AACA;;AAEA,+B;;;;;;;ACjgBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA,gC;;;;;;AC1EA;;AAEA;AACA;;AAEA;AACA,0DAAyD,OAAO;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0C;;;;;;ACjBA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kC;;;;;;ACZA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;AACH;;AAEA,6B;;;;;;AC1EA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,+B;;;;;;ACRA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,2B;;;;;;ACXA;;AAEA,yDAAwD,0CAA0C,0DAA0D,EAAE;;AAE9J,kCAAiC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEljB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA6C,SAAS;AACtD;;AAEA,mEAAkE;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA6B;AAC7B;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA0C,0BAA0B;;AAEpE;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;AAED,wB;;;;;;AC1EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kC;;;;;;ACfA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA,sCAAqC,OAAO;AAC5C,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;;AAEA,4B;;;;;;ACjDA,sBAAqB,IAAI,KAAK,GAAG,oBAAQ,CAAO,CAAC,CAAC;AAClD,KAAI,QAAQ,GAAG,oBAAQ,GAAW,CAAC,CAAC;AACpC,kDAAiD;;AAEjD,KAAI,6BAA6B;GAC/B,iBAAiB,EAAE,UAAU,CAAC;AAChC,KAAI,QAAQ,EAAE,CAAC;;IAEZ;AACH,GAAE,MAAM,EAAE,YAAY,CAAC;;KAEnB;KACA,yBAAI,MAAC;QACF,yBAAI,IAAC,IAAE,CAAC,YAAU,CAAC,WAAS,CAAC,UAAY;YACrC,4BAAO,IAAC,IAAE,CAAC,cAAY,CAAC,WAAS,CAAC,WAAY,WAAgB;YAC9D,0BAAK,IAAC,IAAE,CAAC,OAAQ,CAAO;YACxB,0BAAK,IAAC,WAAS,CAAC,SAAU,6BAAK,IAAC,IAAE,CAAC,MAAO,CAAO,SAAE,0BAAK,IAAC,IAAE,CAAC,GAAqB;UAC7E;UACN,yBAAI,IAAC,IAAE,CAAC,YAAU,CAAC,WAAS,CAAC,WAAkB;AACxD,UAAS,yBAAI,IAAC,IAAE,CAAC,YAAU,CAAC,WAAS,CAAC,WAAkB;;UAE/C,yBAAI,IAAC,IAAE,CAAC,OAAK,CAAC,WAAS,CAAC,UAAY;YAClC,0BAAK,IAAC,WAAS,CAAC,kBAAmB,YAAc;YACjD,yBAAI,IAAC,IAAE,CAAC,aAAoB;UACxB;MACJ;OACL;AACN,IAAG;;AAEH,EAAC,CAAC,CAAC;;AAEH,OAAM,CAAC,OAAO,GAAG,OAAO,CAAC;;AAEzB,yBAAwB;;AAExB,wBAAuB;AACvB,sBAAqB;AACrB,UAAS;;AAET,gBAAe;AACf,iCAAgC;AAChC,8IAA6I;AAC7I,kCAAiC;AACjC,6DAA4D;AAC5D,gBAAe;AACf,+CAA8C;AAC9C,gBAAe;AACf,+CAA8C;AAC9C,sEAAqE;AACrE,oDAAmD;AACnD,gBAAe;AACf,0CAAyC;AACzC,yDAAwD;AACxD,gBAAe;AACf,UAAS;AACT,Q;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gE;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,oCAAoC;AAC1D;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,MAAK;AACL,mCAAkC,wBAAwB,EAAE;AAC5D,gCAA+B,kBAAkB,EAAE;AACnD,oCAAmC,yFAAyF;;AAE5H;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,+C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,+BAA+B;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAqC,kBAAkB;AACvD,SAAQ;AACR;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,kBAAkB;AACnC,iD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,cAAa,uBAAuB;;;AAGpC;AACA;AACA;AACA;AACA,8BAA6B,8CAA8C,EAAE;AAC7E,8BAA6B,8CAA8C,EAAE;AAC7E,WAAU;;AAEV;AACA,oCAAmC,WAAW;AAC9C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,8C;AACA,MAAK;AACL,4C;AACA;AACA,0B;AACA,MAAK;AACL;AACA,4BAA2B,kBAAkB,EAAE;AAC/C,+B;AACA;AACA;AACA,0CAAyC,EAAE;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,mCAAmC;AAC3D;AACA,MAAK;;AAEL;AACA;AACA,yBAAwB,8CAA8C,EAAE;AACxE,yBAAwB,8CAA8C,EAAE;AACxE;AACA,MAAK;AACL;AACA;AACA,SAAQ;;AAER;AACA;AACA;AACA,wBAAuB,8CAA8C,EAAE;AACvE,wBAAuB,8CAA8C,EAAE;AACvE;AACA,gCAA+B,mEAAmE,EAAE;AACpG,6BAA4B,iCAAiC;AAC7D,MAAK;;AAEL;AACA;AACA;AACA,wBAAuB,8CAA8C,EAAE;AACvE,wBAAuB,8CAA8C,EAAE;AACvE;AACA,gCAA+B,mEAAmE,EAAE;AACpG,6BAA4B,4BAA4B,EAAE;AAC1D;AACA,MAAK;;AAEL;AACA,YAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA,yBAAwB,mCAAmC;AAC3D;AACA;AACA;AACA;AACA,yBAAwB,+CAA+C;AACvE,yBAAwB;AACxB,MAAK;;AAEL;AACA;;AAEA;AACA,0CAAyC,0CAA0C,EAAE;AACrF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mB;AACA;;AAEA,kBAAiB,qBAAqB;AACtC;AACA,wCAAuC,0BAA0B,EAAE;AACnE;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gC;AACA,wBAAuB,kCAAkC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,6BAA4B,mBAAmB;AAC/C,MAAK;;;AAGL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,I;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;;AAEL;;AAEA;AACA,yCAAwC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,wCAAuC,0BAA0B,EAAE;AACnE;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA,yBAAwB,8CAA8C,EAAE;AACxE,yBAAwB,8CAA8C;AACtE,MAAK;;AAEL;AACA;AACA,wBAAuB,8CAA8C,EAAE;AACvE,wBAAuB,8CAA8C;AACrE,MAAK;;AAEL;AACA;AACA,wBAAuB,8CAA8C,EAAE;AACvE,wBAAuB,8CAA8C;AACrE,MAAK;;AAEL;AACA;;AAEA;AACA;AACA,yBAAwB,8CAA8C,EAAE;AACxE,yBAAwB,8CAA8C;AACtE,MAAK;;AAEL;AACA;AACA,iCAAgC,0BAA0B;AAC1D,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,I;AACA,EAAC;;AAED;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,sB;;;;;;ACnvBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,G;;;;;;ACtDA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA,yBAAwB;AACxB;;AAEA;AACA,EAAC;;;;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;;AAEA,kBAAiB,UAAU;AAC3B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,qCAAqC;AACtD;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA,sBAAqB,yCAAyC;AAC9D,wBAAuB,qCAAqC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,sBAAqB,uCAAuC;AAC5D,wBAAuB,qCAAqC;AAC5D;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,UAAU;AAC3B,6C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA,E;;;;;;AC5KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6B;;;;;;ACr/7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA,wB;;;;;;AC3aA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAQ;AACR,OAAM;AACN;;AAEA;;;;;;;ACjCA,sB","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6597f69d87091b006e2f\n **/","/** @jsx React.DOM */var WebAPIUtils = require('./utils/WebAPIUtils.js');\nvar React = require('react');\n\nvar Router = require('react-router');\nvar Link = Router.Link;\n//var History = require('react-router/lib/BrowserHistory');\nvar Route = Router.Route;\n//var History = Router.BrowserHistory;\nvar RouteHandler = Router.RouteHandler;\n\nvar Statistics = require('./components/Chart.react');\nvar MapPage = require('./components/MapPage.react');\nvar Predictions = require('./components/Predictions.react');\n\n\nvar App = React.createClass({\n  render () {\n    return (\n      <div>\n        <div className=\"container\">\n            <nav className=\"menu right\">\n              <Link to=\"map\" params={{userId: 1}}>Map</Link>\n              <Link to=\"statistics\" params={{userId: 1}}>Statistics</Link>\n              <Link to=\"predictions\" params={{userId: 1}}>Predications</Link>\n            </nav>\n            <h1>Data Cycles</h1>\n            <h3>Bay Area Bike Share data visualization</h3>\n         </div>\n        <RouteHandler/>\n      </div>\n    )\n  }\n});\n\n\n// declare our routes and their hierarchy\nvar routes = (\n  <Route handler={App} location=\"history\">\n    <Route name=\"statistics\" path=\"statistics\" handler={Statistics}/>\n    <Route name=\"map\" path=\"map\" handler={MapPage}/>\n    <Route name=\"predictions\" path=\"predictions\" handler={Predictions}/>\n  </Route>\n);\n\n\nRouter.run(routes, Router.HashLocation, function(Root) {\n  React.render(<Root/>,  document.getElementById('react'));\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/js/app.jsx\n **/","/** @jsx React.DOM */var React = require('react');\nvar BarChart = require('./BarChart.react');\nvar BubbleChart = require('./BubbleChart.react');\nvar LineChart = require('./LineChart.react');\n\nvar Chart = React.createClass({\n  render: function () {\n\n    var divStyle = {\n      width: '100%'\n    };\n\n    return (\n      <div>\n        <div style={divStyle}>\n          <BarChart  id='1' />\n        </div> \n        <div style={divStyle}>\n          <BarChart  id='2' />\n        </div>\n        <div style={divStyle}>\n          <BarChart  id='3' />\n        </div>\n        <div style={{width: '100%'}}>\n           <BubbleChart  id='4' />\n        </div>\n        <div style={{width: '100%'}}>\n          <LineChart  id='5'  />\n        </div>\n      </div>\n    );\n  },\n\n});\n\nmodule.exports = Chart;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/js/components/Chart.react.jsx\n **/","module.exports = require('./lib/React');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/react.js\n ** module id = 2\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule React\n */\n\n/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\n'use strict';\n\nvar EventPluginUtils = require(\"./EventPluginUtils\");\nvar ReactChildren = require(\"./ReactChildren\");\nvar ReactComponent = require(\"./ReactComponent\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactContext = require(\"./ReactContext\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\nvar ReactDOM = require(\"./ReactDOM\");\nvar ReactDOMTextComponent = require(\"./ReactDOMTextComponent\");\nvar ReactDefaultInjection = require(\"./ReactDefaultInjection\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactPropTypes = require(\"./ReactPropTypes\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactServerRendering = require(\"./ReactServerRendering\");\n\nvar assign = require(\"./Object.assign\");\nvar findDOMNode = require(\"./findDOMNode\");\nvar onlyChild = require(\"./onlyChild\");\n\nReactDefaultInjection.inject();\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar render = ReactPerf.measure('React', 'render', ReactMount.render);\n\nvar React = {\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    only: onlyChild\n  },\n  Component: ReactComponent,\n  DOM: ReactDOM,\n  PropTypes: ReactPropTypes,\n  initializeTouchEvents: function(shouldUseTouch) {\n    EventPluginUtils.useTouchEvents = shouldUseTouch;\n  },\n  createClass: ReactClass.createClass,\n  createElement: createElement,\n  cloneElement: cloneElement,\n  createFactory: createFactory,\n  createMixin: function(mixin) {\n    // Currently a noop. Will be used to validate and trace mixins.\n    return mixin;\n  },\n  constructAndRenderComponent: ReactMount.constructAndRenderComponent,\n  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,\n  findDOMNode: findDOMNode,\n  render: render,\n  renderToString: ReactServerRendering.renderToString,\n  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,\n  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n  isValidElement: ReactElement.isValidElement,\n  withContext: ReactContext.withContext,\n\n  // Hook for JSX spread, don't use this for anything else.\n  __spread: assign\n};\n\n// Inject the runtime into a devtools global hook regardless of browser.\n// Allows for debugging when the hook is injected on the page.\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n    CurrentOwner: ReactCurrentOwner,\n    InstanceHandles: ReactInstanceHandles,\n    Mount: ReactMount,\n    Reconciler: ReactReconciler,\n    TextComponent: ReactDOMTextComponent\n  });\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\n    // If we're in Chrome, look for the devtools marker and provide a download\n    // link if not installed.\n    if (navigator.userAgent.indexOf('Chrome') > -1) {\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n        console.debug(\n          'Download the React DevTools for a better development experience: ' +\n          'https://fb.me/react-devtools'\n        );\n      }\n    }\n\n    var expectedFeatures = [\n      // shims\n      Array.isArray,\n      Array.prototype.every,\n      Array.prototype.forEach,\n      Array.prototype.indexOf,\n      Array.prototype.map,\n      Date.now,\n      Function.prototype.bind,\n      Object.keys,\n      String.prototype.split,\n      String.prototype.trim,\n\n      // shams\n      Object.create,\n      Object.freeze\n    ];\n\n    for (var i = 0; i < expectedFeatures.length; i++) {\n      if (!expectedFeatures[i]) {\n        console.error(\n          'One or more ES5 shim/shams expected by React are not available: ' +\n          'https://fb.me/react-warning-polyfills'\n        );\n        break;\n      }\n    }\n  }\n}\n\nReact.version = '0.13.3';\n\nmodule.exports = React;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/React.js\n ** module id = 3\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-libs-browser/~/process/browser.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginUtils\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `Mount`: [required] Module that can convert between React dom IDs and\n *   actual node references.\n */\nvar injection = {\n  Mount: null,\n  injectMount: function(InjectedMount) {\n    injection.Mount = InjectedMount;\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        InjectedMount && InjectedMount.getNode,\n        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +\n        'is missing getNode.'\n      ) : invariant(InjectedMount && InjectedMount.getNode));\n    }\n  }\n};\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp ||\n         topLevelType === topLevelTypes.topTouchEnd ||\n         topLevelType === topLevelTypes.topTouchCancel;\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove ||\n         topLevelType === topLevelTypes.topTouchMove;\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown ||\n         topLevelType === topLevelTypes.topTouchStart;\n}\n\n\nvar validateEventDispatches;\nif (\"production\" !== process.env.NODE_ENV) {\n  validateEventDispatches = function(event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchIDs = event._dispatchIDs;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var idsIsArr = Array.isArray(dispatchIDs);\n    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\n    var listenersLen = listenersIsArr ?\n      dispatchListeners.length :\n      dispatchListeners ? 1 : 0;\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      idsIsArr === listenersIsArr && IDsLen === listenersLen,\n      'EventPluginUtils: Invalid `event`.'\n    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));\n  };\n}\n\n/**\n * Invokes `cb(event, listener, id)`. Avoids using call if no scope is\n * provided. The `(listener,id)` pair effectively forms the \"dispatch\" but are\n * kept separate to conserve memory.\n */\nfunction forEachEventDispatch(event, cb) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      cb(event, dispatchListeners[i], dispatchIDs[i]);\n    }\n  } else if (dispatchListeners) {\n    cb(event, dispatchListeners, dispatchIDs);\n  }\n}\n\n/**\n * Default implementation of PluginModule.executeDispatch().\n * @param {SyntheticEvent} SyntheticEvent to handle\n * @param {function} Application-level callback\n * @param {string} domID DOM id to pass to the callback.\n */\nfunction executeDispatch(event, listener, domID) {\n  event.currentTarget = injection.Mount.getNode(domID);\n  var returnValue = listener(event, domID);\n  event.currentTarget = null;\n  return returnValue;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, cb) {\n  forEachEventDispatch(event, cb);\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return id of the first dispatch execution who's listener returns true, or\n * null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchIDs[i])) {\n        return dispatchIDs[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchIDs)) {\n      return dispatchIDs;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchIDs = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchID = event._dispatchIDs;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !Array.isArray(dispatchListener),\n    'executeDirectDispatch(...): Invalid `event`.'\n  ) : invariant(!Array.isArray(dispatchListener)));\n  var res = dispatchListener ?\n    dispatchListener(event, dispatchID) :\n    null;\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {bool} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatch: executeDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n  injection: injection,\n  useTouchEvents: false\n};\n\nmodule.exports = EventPluginUtils;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPluginUtils.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventConstants\n */\n\n'use strict';\n\nvar keyMirror = require(\"./keyMirror\");\n\nvar PropagationPhases = keyMirror({bubbled: null, captured: null});\n\n/**\n * Types of raw signals from the browser caught at the top level.\n */\nvar topLevelTypes = keyMirror({\n  topBlur: null,\n  topChange: null,\n  topClick: null,\n  topCompositionEnd: null,\n  topCompositionStart: null,\n  topCompositionUpdate: null,\n  topContextMenu: null,\n  topCopy: null,\n  topCut: null,\n  topDoubleClick: null,\n  topDrag: null,\n  topDragEnd: null,\n  topDragEnter: null,\n  topDragExit: null,\n  topDragLeave: null,\n  topDragOver: null,\n  topDragStart: null,\n  topDrop: null,\n  topError: null,\n  topFocus: null,\n  topInput: null,\n  topKeyDown: null,\n  topKeyPress: null,\n  topKeyUp: null,\n  topLoad: null,\n  topMouseDown: null,\n  topMouseMove: null,\n  topMouseOut: null,\n  topMouseOver: null,\n  topMouseUp: null,\n  topPaste: null,\n  topReset: null,\n  topScroll: null,\n  topSelectionChange: null,\n  topSubmit: null,\n  topTextInput: null,\n  topTouchCancel: null,\n  topTouchEnd: null,\n  topTouchMove: null,\n  topTouchStart: null,\n  topWheel: null\n});\n\nvar EventConstants = {\n  topLevelTypes: topLevelTypes,\n  PropagationPhases: PropagationPhases\n};\n\nmodule.exports = EventConstants;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventConstants.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyMirror\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Constructs an enumeration with keys equal to their value.\n *\n * For example:\n *\n *   var COLORS = keyMirror({blue: null, red: null});\n *   var myColor = COLORS.blue;\n *   var isColorValid = !!COLORS[myColor];\n *\n * The last line could not be performed if the values of the generated enum were\n * not equal to their keys.\n *\n *   Input:  {key1: val1, key2: val2}\n *   Output: {key1: key1, key2: key2}\n *\n * @param {object} obj\n * @return {object}\n */\nvar keyMirror = function(obj) {\n  var ret = {};\n  var key;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    obj instanceof Object && !Array.isArray(obj),\n    'keyMirror(...): Argument must be an object.'\n  ) : invariant(obj instanceof Object && !Array.isArray(obj)));\n  for (key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    ret[key] = key;\n  }\n  return ret;\n};\n\nmodule.exports = keyMirror;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/keyMirror.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/invariant.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildren\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar ReactFragment = require(\"./ReactFragment\");\n\nvar traverseAllChildren = require(\"./traverseAllChildren\");\nvar warning = require(\"./warning\");\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar threeArgumentPooler = PooledClass.threeArgumentPooler;\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.forEachFunction = forEachFunction;\n  this.forEachContext = forEachContext;\n}\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(traverseContext, child, name, i) {\n  var forEachBookKeeping = traverseContext;\n  forEachBookKeeping.forEachFunction.call(\n    forEachBookKeeping.forEachContext, child, i);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc.\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n\n  var traverseContext =\n    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, mapFunction, mapContext) {\n  this.mapResult = mapResult;\n  this.mapFunction = mapFunction;\n  this.mapContext = mapContext;\n}\nPooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);\n\nfunction mapSingleChildIntoContext(traverseContext, child, name, i) {\n  var mapBookKeeping = traverseContext;\n  var mapResult = mapBookKeeping.mapResult;\n\n  var keyUnique = !mapResult.hasOwnProperty(name);\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      keyUnique,\n      'ReactChildren.map(...): Encountered two children with the same key, ' +\n      '`%s`. Child keys must be unique; when two children share a key, only ' +\n      'the first child will be used.',\n      name\n    ) : null);\n  }\n\n  if (keyUnique) {\n    var mappedChild =\n      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);\n    mapResult[name] = mappedChild;\n  }\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * TODO: This may likely break any calls to `ReactChildren.map` that were\n * previously relying on the fact that we guarded against null children.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} mapFunction.\n * @param {*} mapContext Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var mapResult = {};\n  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n  return ReactFragment.create(mapResult);\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name, i) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  count: countChildren\n};\n\nmodule.exports = ReactChildren;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactChildren.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule PooledClass\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function(copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function(a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function(a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fiveArgumentPooler = function(a1, a2, a3, a4, a5) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4, a5);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4, a5);\n  }\n};\n\nvar standardReleaser = function(instance) {\n  var Klass = this;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    instance instanceof Klass,\n    'Trying to release an instance into a pool of a different type.'\n  ) : invariant(instance instanceof Klass));\n  if (instance.destructor) {\n    instance.destructor();\n  }\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances (optional).\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function(CopyConstructor, pooler) {\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fiveArgumentPooler: fiveArgumentPooler\n};\n\nmodule.exports = PooledClass;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/PooledClass.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n* @providesModule ReactFragment\n*/\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar warning = require(\"./warning\");\n\n/**\n * We used to allow keyed objects to serve as a collection of ReactElements,\n * or nested sets. This allowed us a way to explicitly key a set a fragment of\n * components. This is now being replaced with an opaque data structure.\n * The upgrade path is to call React.addons.createFragment({ key: value }) to\n * create a keyed fragment. The resulting data structure is opaque, for now.\n */\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var fragmentKey = '_reactFragment';\n  var didWarnKey = '_reactDidWarn';\n  var canWarnForReactFragment = false;\n\n  try {\n    // Feature test. Don't even try to issue this warning if we can't use\n    // enumerable: false.\n\n    var dummy = function() {\n      return 1;\n    };\n\n    Object.defineProperty(\n      {},\n      fragmentKey,\n      {enumerable: false, value: true}\n    );\n\n    Object.defineProperty(\n      {},\n      'key',\n      {enumerable: true, get: dummy}\n    );\n\n    canWarnForReactFragment = true;\n  } catch (x) { }\n\n  var proxyPropertyAccessWithWarning = function(obj, key) {\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      get: function() {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          this[didWarnKey],\n          'A ReactFragment is an opaque type. Accessing any of its ' +\n          'properties is deprecated. Pass it to one of the React.Children ' +\n          'helpers.'\n        ) : null);\n        this[didWarnKey] = true;\n        return this[fragmentKey][key];\n      },\n      set: function(value) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          this[didWarnKey],\n          'A ReactFragment is an immutable opaque type. Mutating its ' +\n          'properties is deprecated.'\n        ) : null);\n        this[didWarnKey] = true;\n        this[fragmentKey][key] = value;\n      }\n    });\n  };\n\n  var issuedWarnings = {};\n\n  var didWarnForFragment = function(fragment) {\n    // We use the keys and the type of the value as a heuristic to dedupe the\n    // warning to avoid spamming too much.\n    var fragmentCacheKey = '';\n    for (var key in fragment) {\n      fragmentCacheKey += key + ':' + (typeof fragment[key]) + ',';\n    }\n    var alreadyWarnedOnce = !!issuedWarnings[fragmentCacheKey];\n    issuedWarnings[fragmentCacheKey] = true;\n    return alreadyWarnedOnce;\n  };\n}\n\nvar ReactFragment = {\n  // Wrap a keyed object in an opaque proxy that warns you if you access any\n  // of its properties.\n  create: function(object) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (typeof object !== 'object' || !object || Array.isArray(object)) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'React.addons.createFragment only accepts a single object.',\n          object\n        ) : null);\n        return object;\n      }\n      if (ReactElement.isValidElement(object)) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'React.addons.createFragment does not accept a ReactElement ' +\n          'without a wrapper object.'\n        ) : null);\n        return object;\n      }\n      if (canWarnForReactFragment) {\n        var proxy = {};\n        Object.defineProperty(proxy, fragmentKey, {\n          enumerable: false,\n          value: object\n        });\n        Object.defineProperty(proxy, didWarnKey, {\n          writable: true,\n          enumerable: false,\n          value: false\n        });\n        for (var key in object) {\n          proxyPropertyAccessWithWarning(proxy, key);\n        }\n        Object.preventExtensions(proxy);\n        return proxy;\n      }\n    }\n    return object;\n  },\n  // Extract the original keyed object from the fragment opaque type. Warn if\n  // a plain object is passed here.\n  extract: function(fragment) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (canWarnForReactFragment) {\n        if (!fragment[fragmentKey]) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            didWarnForFragment(fragment),\n            'Any use of a keyed object should be wrapped in ' +\n            'React.addons.createFragment(object) before being passed as a ' +\n            'child.'\n          ) : null);\n          return fragment;\n        }\n        return fragment[fragmentKey];\n      }\n    }\n    return fragment;\n  },\n  // Check if this is a fragment and if so, extract the keyed object. If it\n  // is a fragment-like object, warn that it should be wrapped. Ignore if we\n  // can't determine what kind of object this is.\n  extractIfFragment: function(fragment) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (canWarnForReactFragment) {\n        // If it is the opaque type, return the keyed object.\n        if (fragment[fragmentKey]) {\n          return fragment[fragmentKey];\n        }\n        // Otherwise, check each property if it has an element, if it does\n        // it is probably meant as a fragment, so we can warn early. Defer,\n        // the warning to extract.\n        for (var key in fragment) {\n          if (fragment.hasOwnProperty(key) &&\n              ReactElement.isValidElement(fragment[key])) {\n            // This looks like a fragment object, we should provide an\n            // early warning.\n            return ReactFragment.extract(fragment);\n          }\n        }\n      }\n    }\n    return fragment;\n  }\n};\n\nmodule.exports = ReactFragment;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactFragment.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n\n'use strict';\n\nvar ReactContext = require(\"./ReactContext\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\n\nvar assign = require(\"./Object.assign\");\nvar warning = require(\"./warning\");\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true\n};\n\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} object\n * @param {string} key\n */\nfunction defineWarningProperty(object, key) {\n  Object.defineProperty(object, key, {\n\n    configurable: false,\n    enumerable: true,\n\n    get: function() {\n      if (!this._store) {\n        return null;\n      }\n      return this._store[key];\n    },\n\n    set: function(value) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        false,\n        'Don\\'t set the %s property of the React element. Instead, ' +\n        'specify the correct value when initially creating the element.',\n        key\n      ) : null);\n      this._store[key] = value;\n    }\n\n  });\n}\n\n/**\n * This is updated to true if the membrane is successfully created.\n */\nvar useMutationMembrane = false;\n\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} element\n */\nfunction defineMutationMembrane(prototype) {\n  try {\n    var pseudoFrozenProperties = {\n      props: true\n    };\n    for (var key in pseudoFrozenProperties) {\n      defineWarningProperty(prototype, key);\n    }\n    useMutationMembrane = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\n/**\n * Base constructor for all React elements. This is only used to make this\n * work with a dynamic instanceof check. Nothing should live on this prototype.\n *\n * @param {*} type\n * @param {string|object} ref\n * @param {*} key\n * @param {*} props\n * @internal\n */\nvar ReactElement = function(type, key, ref, owner, context, props) {\n  // Built-in properties that belong on the element\n  this.type = type;\n  this.key = key;\n  this.ref = ref;\n\n  // Record the component responsible for creating this element.\n  this._owner = owner;\n\n  // TODO: Deprecate withContext, and then the context becomes accessible\n  // through the owner.\n  this._context = context;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // The validation flag and props are currently mutative. We put them on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    this._store = {props: props, originalProps: assign({}, props)};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    try {\n      Object.defineProperty(this._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true\n      });\n    } catch (x) {\n    }\n    this._store.validated = false;\n\n    // We're not allowed to set props directly on the object so we early\n    // return and rely on the prototype membrane to forward to the backing\n    // store.\n    if (useMutationMembrane) {\n      Object.freeze(this);\n      return;\n    }\n  }\n\n  this.props = props;\n};\n\n// We intentionally don't expose the function on the constructor property.\n// ReactElement should be indistinguishable from a plain object.\nReactElement.prototype = {\n  _isReactElement: true\n};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  defineMutationMembrane(ReactElement.prototype);\n}\n\nReactElement.createElement = function(type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n\n  if (config != null) {\n    ref = config.ref === undefined ? null : config.ref;\n    key = config.key === undefined ? null : '' + config.key;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) &&\n          !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (typeof props[propName] === 'undefined') {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return new ReactElement(\n    type,\n    key,\n    ref,\n    ReactCurrentOwner.current,\n    ReactContext.current,\n    props\n  );\n};\n\nReactElement.createFactory = function(type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. <Foo />.type === Foo.type.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceProps = function(oldElement, newProps) {\n  var newElement = new ReactElement(\n    oldElement.type,\n    oldElement.key,\n    oldElement.ref,\n    oldElement._owner,\n    oldElement._context,\n    newProps\n  );\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // If the key on the original is valid, then the clone is valid\n    newElement._store.validated = oldElement._store.validated;\n  }\n  return newElement;\n};\n\nReactElement.cloneElement = function(element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (config.ref !== undefined) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (config.key !== undefined) {\n      key = '' + config.key;\n    }\n    // Remaining properties override existing props\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) &&\n          !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return new ReactElement(\n    element.type,\n    key,\n    ref,\n    owner,\n    element._context,\n    props\n  );\n};\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function(object) {\n  // ReactTestUtils is often used outside of beforeEach where as React is\n  // within it. This leads to two different instances of React on the same\n  // page. To identify a element from a different React instance we use\n  // a flag instead of an instanceof check.\n  var isElement = !!(object && object._isReactElement);\n  // if (isElement && !(object instanceof ReactElement)) {\n  // This is an indicator that you're using multiple versions of React at the\n  // same time. This will screw with ownership and stuff. Fix it, please.\n  // TODO: We could possibly warn here.\n  // }\n  return isElement;\n};\n\nmodule.exports = ReactElement;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactElement.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactContext\n */\n\n'use strict';\n\nvar assign = require(\"./Object.assign\");\nvar emptyObject = require(\"./emptyObject\");\nvar warning = require(\"./warning\");\n\nvar didWarn = false;\n\n/**\n * Keeps track of the current context.\n *\n * The context is automatically passed down the component ownership hierarchy\n * and is accessible via `this.context` on ReactCompositeComponents.\n */\nvar ReactContext = {\n\n  /**\n   * @internal\n   * @type {object}\n   */\n  current: emptyObject,\n\n  /**\n   * Temporarily extends the current context while executing scopedCallback.\n   *\n   * A typical use case might look like\n   *\n   *  render: function() {\n   *    var children = ReactContext.withContext({foo: 'foo'}, () => (\n   *\n   *    ));\n   *    return <div>{children}</div>;\n   *  }\n   *\n   * @param {object} newContext New context to merge into the existing context\n   * @param {function} scopedCallback Callback to run with the new context\n   * @return {ReactComponent|array<ReactComponent>}\n   */\n  withContext: function(newContext, scopedCallback) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        didWarn,\n        'withContext is deprecated and will be removed in a future version. ' +\n        'Use a wrapper component with getChildContext instead.'\n      ) : null);\n\n      didWarn = true;\n    }\n\n    var result;\n    var previousContext = ReactContext.current;\n    ReactContext.current = assign({}, previousContext, newContext);\n    try {\n      result = scopedCallback();\n    } finally {\n      ReactContext.current = previousContext;\n    }\n    return result;\n  }\n\n};\n\nmodule.exports = ReactContext;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactContext.js\n ** module id = 13\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Object.assign\n */\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\n\n'use strict';\n\nfunction assign(target, sources) {\n  if (target == null) {\n    throw new TypeError('Object.assign target cannot be null or undefined');\n  }\n\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource);\n\n    // We don't currently support accessors nor proxies. Therefore this\n    // copy cannot throw. If we ever supported this then we must handle\n    // exceptions and side-effects. We don't support symbols so they won't\n    // be transferred.\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n}\n\nmodule.exports = assign;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/Object.assign.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyObject\n */\n\n\"use strict\";\n\nvar emptyObject = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/emptyObject.js\n ** module id = 15\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule warning\n */\n\n\"use strict\";\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || /^[s\\W]*$/.test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];});\n      console.warn(message);\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/warning.js\n ** module id = 16\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyFunction\n */\n\nfunction makeEmptyFunction(arg) {\n  return function() {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nfunction emptyFunction() {}\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function() { return this; };\nemptyFunction.thatReturnsArgument = function(arg) { return arg; };\n\nmodule.exports = emptyFunction;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/emptyFunction.js\n ** module id = 17\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCurrentOwner\n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n *\n * The depth indicate how many composite components are above this render level.\n */\nvar ReactCurrentOwner = {\n\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n\n};\n\nmodule.exports = ReactCurrentOwner;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactCurrentOwner.js\n ** module id = 18\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\n\nvar getIteratorFn = require(\"./getIteratorFn\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\nvar SUBSEPARATOR = ':';\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar userProvidedKeyEscaperLookup = {\n  '=': '=0',\n  '.': '=1',\n  ':': '=2'\n};\n\nvar userProvidedKeyEscapeRegex = /[=.:]/g;\n\nvar didWarnAboutMaps = false;\n\nfunction userProvidedKeyEscaper(match) {\n  return userProvidedKeyEscaperLookup[match];\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  if (component && component.key != null) {\n    // Explicit key\n    return wrapUserProvidedKey(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * Escape a component key so that it is safe to use in a reactid.\n *\n * @param {*} key Component key to be escaped.\n * @return {string} An escaped string.\n */\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(\n    userProvidedKeyEscapeRegex,\n    userProvidedKeyEscaper\n  );\n}\n\n/**\n * Wrap a `key` value explicitly provided by the user to distinguish it from\n * implicitly-generated keys generated by a component's index in its parent.\n *\n * @param {string} key Value of a user-provided `key` attribute\n * @return {string}\n */\nfunction wrapUserProvidedKey(key) {\n  return '$' + escapeUserProvidedKey(key);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!number} indexSoFar Number of children encountered until this point.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(\n  children,\n  nameSoFar,\n  indexSoFar,\n  callback,\n  traverseContext\n) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null ||\n      type === 'string' ||\n      type === 'number' ||\n      ReactElement.isValidElement(children)) {\n    callback(\n      traverseContext,\n      children,\n      // If it's the only child, treat the name as if it was wrapped in an array\n      // so that it's consistent if the number of children grows.\n      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,\n      indexSoFar\n    );\n    return 1;\n  }\n\n  var child, nextName, nextIndex;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = (\n        (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n        getComponentKey(child, i)\n      );\n      nextIndex = indexSoFar + subtreeCount;\n      subtreeCount += traverseAllChildrenImpl(\n        child,\n        nextName,\n        nextIndex,\n        callback,\n        traverseContext\n      );\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = (\n            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n            getComponentKey(child, ii++)\n          );\n          nextIndex = indexSoFar + subtreeCount;\n          subtreeCount += traverseAllChildrenImpl(\n            child,\n            nextName,\n            nextIndex,\n            callback,\n            traverseContext\n          );\n        }\n      } else {\n        if (\"production\" !== process.env.NODE_ENV) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            didWarnAboutMaps,\n            'Using Maps as children is not yet fully supported. It is an ' +\n            'experimental feature that might be removed. Convert it to a ' +\n            'sequence / iterable of keyed ReactElements instead.'\n          ) : null);\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = (\n              (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n              wrapUserProvidedKey(entry[0]) + SUBSEPARATOR +\n              getComponentKey(child, 0)\n            );\n            nextIndex = indexSoFar + subtreeCount;\n            subtreeCount += traverseAllChildrenImpl(\n              child,\n              nextName,\n              nextIndex,\n              callback,\n              traverseContext\n            );\n          }\n        }\n      }\n    } else if (type === 'object') {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        children.nodeType !== 1,\n        'traverseAllChildren(...): Encountered an invalid child; DOM ' +\n        'elements are not valid children of React components.'\n      ) : invariant(children.nodeType !== 1));\n      var fragment = ReactFragment.extract(children);\n      for (var key in fragment) {\n        if (fragment.hasOwnProperty(key)) {\n          child = fragment[key];\n          nextName = (\n            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n            wrapUserProvidedKey(key) + SUBSEPARATOR +\n            getComponentKey(child, 0)\n          );\n          nextIndex = indexSoFar + subtreeCount;\n          subtreeCount += traverseAllChildrenImpl(\n            child,\n            nextName,\n            nextIndex,\n            callback,\n            traverseContext\n          );\n        }\n      }\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', 0, callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/traverseAllChildren.js\n ** module id = 19\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getIteratorFn\n * @typechecks static-only\n */\n\n'use strict';\n\n/* global Symbol */\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (\n    (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL])\n  );\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getIteratorFn.js\n ** module id = 20\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceHandles\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactRootIndex = require(\"./ReactRootIndex\");\n\nvar invariant = require(\"./invariant\");\n\nvar SEPARATOR = '.';\nvar SEPARATOR_LENGTH = SEPARATOR.length;\n\n/**\n * Maximum depth of traversals before we consider the possibility of a bad ID.\n */\nvar MAX_TREE_DEPTH = 100;\n\n/**\n * Creates a DOM ID prefix to use when mounting React components.\n *\n * @param {number} index A unique integer\n * @return {string} React root ID.\n * @internal\n */\nfunction getReactRootIDString(index) {\n  return SEPARATOR + index.toString(36);\n}\n\n/**\n * Checks if a character in the supplied ID is a separator or the end.\n *\n * @param {string} id A React DOM ID.\n * @param {number} index Index of the character to check.\n * @return {boolean} True if the character is a separator or end of the ID.\n * @private\n */\nfunction isBoundary(id, index) {\n  return id.charAt(index) === SEPARATOR || index === id.length;\n}\n\n/**\n * Checks if the supplied string is a valid React DOM ID.\n *\n * @param {string} id A React DOM ID, maybe.\n * @return {boolean} True if the string is a valid React DOM ID.\n * @private\n */\nfunction isValidID(id) {\n  return id === '' || (\n    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR\n  );\n}\n\n/**\n * Checks if the first ID is an ancestor of or equal to the second ID.\n *\n * @param {string} ancestorID\n * @param {string} descendantID\n * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.\n * @internal\n */\nfunction isAncestorIDOf(ancestorID, descendantID) {\n  return (\n    descendantID.indexOf(ancestorID) === 0 &&\n    isBoundary(descendantID, ancestorID.length)\n  );\n}\n\n/**\n * Gets the parent ID of the supplied React DOM ID, `id`.\n *\n * @param {string} id ID of a component.\n * @return {string} ID of the parent, or an empty string.\n * @private\n */\nfunction getParentID(id) {\n  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';\n}\n\n/**\n * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the\n * supplied `destinationID`. If they are equal, the ID is returned.\n *\n * @param {string} ancestorID ID of an ancestor node of `destinationID`.\n * @param {string} destinationID ID of the destination node.\n * @return {string} Next ID on the path from `ancestorID` to `destinationID`.\n * @private\n */\nfunction getNextDescendantID(ancestorID, destinationID) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    isValidID(ancestorID) && isValidID(destinationID),\n    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',\n    ancestorID,\n    destinationID\n  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    isAncestorIDOf(ancestorID, destinationID),\n    'getNextDescendantID(...): React has made an invalid assumption about ' +\n    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',\n    ancestorID,\n    destinationID\n  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));\n  if (ancestorID === destinationID) {\n    return ancestorID;\n  }\n  // Skip over the ancestor and the immediate separator. Traverse until we hit\n  // another separator or we reach the end of `destinationID`.\n  var start = ancestorID.length + SEPARATOR_LENGTH;\n  var i;\n  for (i = start; i < destinationID.length; i++) {\n    if (isBoundary(destinationID, i)) {\n      break;\n    }\n  }\n  return destinationID.substr(0, i);\n}\n\n/**\n * Gets the nearest common ancestor ID of two IDs.\n *\n * Using this ID scheme, the nearest common ancestor ID is the longest common\n * prefix of the two IDs that immediately preceded a \"marker\" in both strings.\n *\n * @param {string} oneID\n * @param {string} twoID\n * @return {string} Nearest common ancestor ID, or the empty string if none.\n * @private\n */\nfunction getFirstCommonAncestorID(oneID, twoID) {\n  var minLength = Math.min(oneID.length, twoID.length);\n  if (minLength === 0) {\n    return '';\n  }\n  var lastCommonMarkerIndex = 0;\n  // Use `<=` to traverse until the \"EOL\" of the shorter string.\n  for (var i = 0; i <= minLength; i++) {\n    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {\n      lastCommonMarkerIndex = i;\n    } else if (oneID.charAt(i) !== twoID.charAt(i)) {\n      break;\n    }\n  }\n  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    isValidID(longestCommonID),\n    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',\n    oneID,\n    twoID,\n    longestCommonID\n  ) : invariant(isValidID(longestCommonID)));\n  return longestCommonID;\n}\n\n/**\n * Traverses the parent path between two IDs (either up or down). The IDs must\n * not be the same, and there must exist a parent path between them. If the\n * callback returns `false`, traversal is stopped.\n *\n * @param {?string} start ID at which to start traversal.\n * @param {?string} stop ID at which to end traversal.\n * @param {function} cb Callback to invoke each ID with.\n * @param {?boolean} skipFirst Whether or not to skip the first node.\n * @param {?boolean} skipLast Whether or not to skip the last node.\n * @private\n */\nfunction traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {\n  start = start || '';\n  stop = stop || '';\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    start !== stop,\n    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',\n    start\n  ) : invariant(start !== stop));\n  var traverseUp = isAncestorIDOf(stop, start);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    traverseUp || isAncestorIDOf(start, stop),\n    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +\n    'not have a parent path.',\n    start,\n    stop\n  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));\n  // Traverse from `start` to `stop` one depth at a time.\n  var depth = 0;\n  var traverse = traverseUp ? getParentID : getNextDescendantID;\n  for (var id = start; /* until break */; id = traverse(id, stop)) {\n    var ret;\n    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {\n      ret = cb(id, traverseUp, arg);\n    }\n    if (ret === false || id === stop) {\n      // Only break //after// visiting `stop`.\n      break;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      depth++ < MAX_TREE_DEPTH,\n      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +\n      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',\n      start, stop\n    ) : invariant(depth++ < MAX_TREE_DEPTH));\n  }\n}\n\n/**\n * Manages the IDs assigned to DOM representations of React components. This\n * uses a specific scheme in order to traverse the DOM efficiently (e.g. in\n * order to simulate events).\n *\n * @internal\n */\nvar ReactInstanceHandles = {\n\n  /**\n   * Constructs a React root ID\n   * @return {string} A React root ID.\n   */\n  createReactRootID: function() {\n    return getReactRootIDString(ReactRootIndex.createReactRootIndex());\n  },\n\n  /**\n   * Constructs a React ID by joining a root ID with a name.\n   *\n   * @param {string} rootID Root ID of a parent component.\n   * @param {string} name A component's name (as flattened children).\n   * @return {string} A React ID.\n   * @internal\n   */\n  createReactID: function(rootID, name) {\n    return rootID + name;\n  },\n\n  /**\n   * Gets the DOM ID of the React component that is the root of the tree that\n   * contains the React component with the supplied DOM ID.\n   *\n   * @param {string} id DOM ID of a React component.\n   * @return {?string} DOM ID of the React component that is the root.\n   * @internal\n   */\n  getReactRootIDFromNodeID: function(id) {\n    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {\n      var index = id.indexOf(SEPARATOR, 1);\n      return index > -1 ? id.substr(0, index) : id;\n    }\n    return null;\n  },\n\n  /**\n   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n   * should would receive a `mouseEnter` or `mouseLeave` event.\n   *\n   * NOTE: Does not invoke the callback on the nearest common ancestor because\n   * nothing \"entered\" or \"left\" that element.\n   *\n   * @param {string} leaveID ID being left.\n   * @param {string} enterID ID being entered.\n   * @param {function} cb Callback to invoke on each entered/left ID.\n   * @param {*} upArg Argument to invoke the callback with on left IDs.\n   * @param {*} downArg Argument to invoke the callback with on entered IDs.\n   * @internal\n   */\n  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {\n    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);\n    if (ancestorID !== leaveID) {\n      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);\n    }\n    if (ancestorID !== enterID) {\n      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);\n    }\n  },\n\n  /**\n   * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n   *\n   * NOTE: This traversal happens on IDs without touching the DOM.\n   *\n   * @param {string} targetID ID of the target node.\n   * @param {function} cb Callback to invoke.\n   * @param {*} arg Argument to invoke the callback with.\n   * @internal\n   */\n  traverseTwoPhase: function(targetID, cb, arg) {\n    if (targetID) {\n      traverseParentPath('', targetID, cb, arg, true, false);\n      traverseParentPath(targetID, '', cb, arg, false, true);\n    }\n  },\n\n  /**\n   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For\n   * example, passing `.0.$row-0.1` would result in `cb` getting called\n   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.\n   *\n   * NOTE: This traversal happens on IDs without touching the DOM.\n   *\n   * @param {string} targetID ID of the target node.\n   * @param {function} cb Callback to invoke.\n   * @param {*} arg Argument to invoke the callback with.\n   * @internal\n   */\n  traverseAncestors: function(targetID, cb, arg) {\n    traverseParentPath('', targetID, cb, arg, true, false);\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _getFirstCommonAncestorID: getFirstCommonAncestorID,\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _getNextDescendantID: getNextDescendantID,\n\n  isAncestorIDOf: isAncestorIDOf,\n\n  SEPARATOR: SEPARATOR\n\n};\n\nmodule.exports = ReactInstanceHandles;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInstanceHandles.js\n ** module id = 21\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\nvar ReactRootIndexInjection = {\n  /**\n   * @param {function} _createReactRootIndex\n   */\n  injectCreateReactRootIndex: function(_createReactRootIndex) {\n    ReactRootIndex.createReactRootIndex = _createReactRootIndex;\n  }\n};\n\nvar ReactRootIndex = {\n  createReactRootIndex: null,\n  injection: ReactRootIndexInjection\n};\n\nmodule.exports = ReactRootIndex;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactRootIndex.js\n ** module id = 22\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponent\n */\n\n'use strict';\n\nvar ReactUpdateQueue = require(\"./ReactUpdateQueue\");\n\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context) {\n  this.props = props;\n  this.context = context;\n}\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function(partialState, callback) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof partialState === 'object' ||\n    typeof partialState === 'function' ||\n    partialState == null,\n    'setState(...): takes an object of state variables to update or a ' +\n    'function which returns an object of state variables.'\n  ) : invariant(typeof partialState === 'object' ||\n  typeof partialState === 'function' ||\n  partialState == null));\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      partialState != null,\n      'setState(...): You passed an undefined or null state object; ' +\n      'instead, use forceUpdate().'\n    ) : null);\n  }\n  ReactUpdateQueue.enqueueSetState(this, partialState);\n  if (callback) {\n    ReactUpdateQueue.enqueueCallback(this, callback);\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function(callback) {\n  ReactUpdateQueue.enqueueForceUpdate(this);\n  if (callback) {\n    ReactUpdateQueue.enqueueCallback(this, callback);\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (\"production\" !== process.env.NODE_ENV) {\n  var deprecatedAPIs = {\n    getDOMNode: [\n      'getDOMNode',\n      'Use React.findDOMNode(component) instead.'\n    ],\n    isMounted: [\n      'isMounted',\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\n      'componentWillUnmount to prevent memory leaks.'\n    ],\n    replaceProps: [\n      'replaceProps',\n      'Instead, call React.render again at the top level.'\n    ],\n    replaceState: [\n      'replaceState',\n      'Refactor your code to use setState instead (see ' +\n      'https://github.com/facebook/react/issues/3236).'\n    ],\n    setProps: [\n      'setProps',\n      'Instead, call React.render again at the top level.'\n    ]\n  };\n  var defineDeprecationWarning = function(methodName, info) {\n    try {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function() {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            '%s(...) is deprecated in plain JavaScript React classes. %s',\n            info[0],\n            info[1]\n          ) : null);\n          return undefined;\n        }\n      });\n    } catch (x) {\n      // IE will fail on defineProperty (es5-shim/sham too)\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nmodule.exports = ReactComponent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactComponent.js\n ** module id = 23\n ** module chunks = 0\n **/","/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdateQueue\n */\n\n'use strict';\n\nvar ReactLifeCycle = require(\"./ReactLifeCycle\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nfunction enqueueUpdate(internalInstance) {\n  if (internalInstance !== ReactLifeCycle.currentlyMountingInstance) {\n    // If we're in a componentWillMount handler, don't enqueue a rerender\n    // because ReactUpdates assumes we're in a browser context (which is\n    // wrong for server rendering) and we're about to do a render anyway.\n    // See bug in #1740.\n    ReactUpdates.enqueueUpdate(internalInstance);\n  }\n}\n\nfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactCurrentOwner.current == null,\n    '%s(...): Cannot update during an existing state transition ' +\n    '(such as within `render`). Render methods should be a pure function ' +\n    'of props and state.',\n    callerName\n  ) : invariant(ReactCurrentOwner.current == null));\n\n  var internalInstance = ReactInstanceMap.get(publicInstance);\n  if (!internalInstance) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Only warn when we have a callerName. Otherwise we should be silent.\n      // We're probably calling from enqueueCallback. We don't want to warn\n      // there because we already warned for the corresponding lifecycle method.\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !callerName,\n        '%s(...): Can only update a mounted or mounting component. ' +\n        'This usually means you called %s() on an unmounted ' +\n        'component. This is a no-op.',\n        callerName,\n        callerName\n      ) : null);\n    }\n    return null;\n  }\n\n  if (internalInstance === ReactLifeCycle.currentlyUnmountingInstance) {\n    return null;\n  }\n\n  return internalInstance;\n}\n\n/**\n * ReactUpdateQueue allows for state updates to be scheduled into a later\n * reconciliation step.\n */\nvar ReactUpdateQueue = {\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function(publicInstance, callback) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof callback === 'function',\n      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +\n      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +\n      'isn\\'t callable.'\n    ) : invariant(typeof callback === 'function'));\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\n    // Previously we would throw an error if we didn't have an internal\n    // instance. Since we want to make it a no-op instead, we mirror the same\n    // behavior we have in other enqueue* methods.\n    // We also need to ignore callbacks in componentWillMount. See\n    // enqueueUpdates.\n    if (!internalInstance ||\n        internalInstance === ReactLifeCycle.currentlyMountingInstance) {\n      return null;\n    }\n\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    // TODO: The callback here is ignored when setState is called from\n    // componentWillMount. Either fix it or disallow doing so completely in\n    // favor of getInitialState. Alternatively, we can disallow\n    // componentWillMount during server-side rendering.\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueCallbackInternal: function(internalInstance, callback) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof callback === 'function',\n      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +\n      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +\n      'isn\\'t callable.'\n    ) : invariant(typeof callback === 'function'));\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldUpdateComponent`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function(publicInstance) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'forceUpdate'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingForceUpdate = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function(publicInstance, completeState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'replaceState'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingStateQueue = [completeState];\n    internalInstance._pendingReplaceState = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function(publicInstance, partialState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'setState'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    var queue =\n      internalInstance._pendingStateQueue ||\n      (internalInstance._pendingStateQueue = []);\n    queue.push(partialState);\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialProps Subset of the next props.\n   * @internal\n   */\n  enqueueSetProps: function(publicInstance, partialProps) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'setProps'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      internalInstance._isTopLevel,\n      'setProps(...): You called `setProps` on a ' +\n      'component with a parent. This is an anti-pattern since props will ' +\n      'get reactively updated when rendered. Instead, change the owner\\'s ' +\n      '`render` method to pass the correct value as props to the component ' +\n      'where it is created.'\n    ) : invariant(internalInstance._isTopLevel));\n\n    // Merge with the pending element if it exists, otherwise with existing\n    // element props.\n    var element = internalInstance._pendingElement ||\n                  internalInstance._currentElement;\n    var props = assign({}, element.props, partialProps);\n    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(\n      element,\n      props\n    );\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} props New props.\n   * @internal\n   */\n  enqueueReplaceProps: function(publicInstance, props) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'replaceProps'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      internalInstance._isTopLevel,\n      'replaceProps(...): You called `replaceProps` on a ' +\n      'component with a parent. This is an anti-pattern since props will ' +\n      'get reactively updated when rendered. Instead, change the owner\\'s ' +\n      '`render` method to pass the correct value as props to the component ' +\n      'where it is created.'\n    ) : invariant(internalInstance._isTopLevel));\n\n    // Merge with the pending element if it exists, otherwise with existing\n    // element props.\n    var element = internalInstance._pendingElement ||\n                  internalInstance._currentElement;\n    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(\n      element,\n      props\n    );\n\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueElementInternal: function(internalInstance, newElement) {\n    internalInstance._pendingElement = newElement;\n    enqueueUpdate(internalInstance);\n  }\n\n};\n\nmodule.exports = ReactUpdateQueue;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactUpdateQueue.js\n ** module id = 24\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdates\n */\n\n'use strict';\n\nvar CallbackQueue = require(\"./CallbackQueue\");\nvar PooledClass = require(\"./PooledClass\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nvar dirtyComponents = [];\nvar asapCallbackQueue = CallbackQueue.getPooled();\nvar asapEnqueued = false;\n\nvar batchingStrategy = null;\n\nfunction ensureInjected() {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactUpdates.ReactReconcileTransaction && batchingStrategy,\n    'ReactUpdates: must inject a reconcile transaction class and batching ' +\n    'strategy'\n  ) : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy));\n}\n\nvar NESTED_UPDATES = {\n  initialize: function() {\n    this.dirtyComponentsLength = dirtyComponents.length;\n  },\n  close: function() {\n    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n      // Additional updates were enqueued by componentDidUpdate handlers or\n      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n      // these new updates so that if A's componentDidUpdate calls setState on\n      // B, B will update before the callback A's updater provided when calling\n      // setState.\n      dirtyComponents.splice(0, this.dirtyComponentsLength);\n      flushBatchedUpdates();\n    } else {\n      dirtyComponents.length = 0;\n    }\n  }\n};\n\nvar UPDATE_QUEUEING = {\n  initialize: function() {\n    this.callbackQueue.reset();\n  },\n  close: function() {\n    this.callbackQueue.notifyAll();\n  }\n};\n\nvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\nfunction ReactUpdatesFlushTransaction() {\n  this.reinitializeTransaction();\n  this.dirtyComponentsLength = null;\n  this.callbackQueue = CallbackQueue.getPooled();\n  this.reconcileTransaction =\n    ReactUpdates.ReactReconcileTransaction.getPooled();\n}\n\nassign(\n  ReactUpdatesFlushTransaction.prototype,\n  Transaction.Mixin, {\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  destructor: function() {\n    this.dirtyComponentsLength = null;\n    CallbackQueue.release(this.callbackQueue);\n    this.callbackQueue = null;\n    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n    this.reconcileTransaction = null;\n  },\n\n  perform: function(method, scope, a) {\n    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n    // with this transaction's wrappers around it.\n    return Transaction.Mixin.perform.call(\n      this,\n      this.reconcileTransaction.perform,\n      this.reconcileTransaction,\n      method,\n      scope,\n      a\n    );\n  }\n});\n\nPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\nfunction batchedUpdates(callback, a, b, c, d) {\n  ensureInjected();\n  batchingStrategy.batchedUpdates(callback, a, b, c, d);\n}\n\n/**\n * Array comparator for ReactComponents by mount ordering.\n *\n * @param {ReactComponent} c1 first component you're comparing\n * @param {ReactComponent} c2 second component you're comparing\n * @return {number} Return value usable by Array.prototype.sort().\n */\nfunction mountOrderComparator(c1, c2) {\n  return c1._mountOrder - c2._mountOrder;\n}\n\nfunction runBatchedUpdates(transaction) {\n  var len = transaction.dirtyComponentsLength;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    len === dirtyComponents.length,\n    'Expected flush transaction\\'s stored dirty-components length (%s) to ' +\n    'match dirty-components array length (%s).',\n    len,\n    dirtyComponents.length\n  ) : invariant(len === dirtyComponents.length));\n\n  // Since reconciling a component higher in the owner hierarchy usually (not\n  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n  // them before their children by sorting the array.\n  dirtyComponents.sort(mountOrderComparator);\n\n  for (var i = 0; i < len; i++) {\n    // If a component is unmounted before pending changes apply, it will still\n    // be here, but we assume that it has cleared its _pendingCallbacks and\n    // that performUpdateIfNecessary is a noop.\n    var component = dirtyComponents[i];\n\n    // If performUpdateIfNecessary happens to enqueue any new updates, we\n    // shouldn't execute the callbacks until the next render happens, so\n    // stash the callbacks first\n    var callbacks = component._pendingCallbacks;\n    component._pendingCallbacks = null;\n\n    ReactReconciler.performUpdateIfNecessary(\n      component,\n      transaction.reconcileTransaction\n    );\n\n    if (callbacks) {\n      for (var j = 0; j < callbacks.length; j++) {\n        transaction.callbackQueue.enqueue(\n          callbacks[j],\n          component.getPublicInstance()\n        );\n      }\n    }\n  }\n}\n\nvar flushBatchedUpdates = function() {\n  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n  // componentDidUpdate) but we need to check here too in order to catch\n  // updates enqueued by setState callbacks and asap calls.\n  while (dirtyComponents.length || asapEnqueued) {\n    if (dirtyComponents.length) {\n      var transaction = ReactUpdatesFlushTransaction.getPooled();\n      transaction.perform(runBatchedUpdates, null, transaction);\n      ReactUpdatesFlushTransaction.release(transaction);\n    }\n\n    if (asapEnqueued) {\n      asapEnqueued = false;\n      var queue = asapCallbackQueue;\n      asapCallbackQueue = CallbackQueue.getPooled();\n      queue.notifyAll();\n      CallbackQueue.release(queue);\n    }\n  }\n};\nflushBatchedUpdates = ReactPerf.measure(\n  'ReactUpdates',\n  'flushBatchedUpdates',\n  flushBatchedUpdates\n);\n\n/**\n * Mark a component as needing a rerender, adding an optional callback to a\n * list of functions which will be executed once the rerender occurs.\n */\nfunction enqueueUpdate(component) {\n  ensureInjected();\n\n  // Various parts of our code (such as ReactCompositeComponent's\n  // _renderValidatedComponent) assume that calls to render aren't nested;\n  // verify that that's the case. (This is called by each top-level update\n  // function, like setProps, setState, forceUpdate, etc.; creation and\n  // destruction of top-level components is guarded in ReactMount.)\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    ReactCurrentOwner.current == null,\n    'enqueueUpdate(): Render methods should be a pure function of props ' +\n    'and state; triggering nested component updates from render is not ' +\n    'allowed. If necessary, trigger nested updates in ' +\n    'componentDidUpdate.'\n  ) : null);\n\n  if (!batchingStrategy.isBatchingUpdates) {\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n    return;\n  }\n\n  dirtyComponents.push(component);\n}\n\n/**\n * Enqueue a callback to be run at the end of the current batching cycle. Throws\n * if no updates are currently being performed.\n */\nfunction asap(callback, context) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    batchingStrategy.isBatchingUpdates,\n    'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context where' +\n    'updates are not being batched.'\n  ) : invariant(batchingStrategy.isBatchingUpdates));\n  asapCallbackQueue.enqueue(callback, context);\n  asapEnqueued = true;\n}\n\nvar ReactUpdatesInjection = {\n  injectReconcileTransaction: function(ReconcileTransaction) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReconcileTransaction,\n      'ReactUpdates: must provide a reconcile transaction class'\n    ) : invariant(ReconcileTransaction));\n    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n  },\n\n  injectBatchingStrategy: function(_batchingStrategy) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      _batchingStrategy,\n      'ReactUpdates: must provide a batching strategy'\n    ) : invariant(_batchingStrategy));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof _batchingStrategy.batchedUpdates === 'function',\n      'ReactUpdates: must provide a batchedUpdates() function'\n    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof _batchingStrategy.isBatchingUpdates === 'boolean',\n      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'\n    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));\n    batchingStrategy = _batchingStrategy;\n  }\n};\n\nvar ReactUpdates = {\n  /**\n   * React references `ReactReconcileTransaction` using this property in order\n   * to allow dependency injection.\n   *\n   * @internal\n   */\n  ReactReconcileTransaction: null,\n\n  batchedUpdates: batchedUpdates,\n  enqueueUpdate: enqueueUpdate,\n  flushBatchedUpdates: flushBatchedUpdates,\n  injection: ReactUpdatesInjection,\n  asap: asap\n};\n\nmodule.exports = ReactUpdates;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactUpdates.js\n ** module id = 25\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CallbackQueue\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\nfunction CallbackQueue() {\n  this._callbacks = null;\n  this._contexts = null;\n}\n\nassign(CallbackQueue.prototype, {\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n  enqueue: function(callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._contexts = this._contexts || [];\n    this._callbacks.push(callback);\n    this._contexts.push(context);\n  },\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n  notifyAll: function() {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    if (callbacks) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        callbacks.length === contexts.length,\n        'Mismatched list of contexts in callback queue'\n      ) : invariant(callbacks.length === contexts.length));\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0, l = callbacks.length; i < l; i++) {\n        callbacks[i].call(contexts[i]);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  },\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n  reset: function() {\n    this._callbacks = null;\n    this._contexts = null;\n  },\n\n  /**\n   * `PooledClass` looks for this.\n   */\n  destructor: function() {\n    this.reset();\n  }\n\n});\n\nPooledClass.addPoolingTo(CallbackQueue);\n\nmodule.exports = CallbackQueue;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/CallbackQueue.js\n ** module id = 26\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPerf\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * ReactPerf is a general AOP system designed to measure performance. This\n * module only has the hooks: see ReactDefaultPerf for the analysis tool.\n */\nvar ReactPerf = {\n  /**\n   * Boolean to enable/disable measurement. Set to false by default to prevent\n   * accidental logging and perf loss.\n   */\n  enableMeasure: false,\n\n  /**\n   * Holds onto the measure function in use. By default, don't measure\n   * anything, but we'll override this if we inject a measure function.\n   */\n  storedMeasure: _noMeasure,\n\n  /**\n   * @param {object} object\n   * @param {string} objectName\n   * @param {object<string>} methodNames\n   */\n  measureMethods: function(object, objectName, methodNames) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      for (var key in methodNames) {\n        if (!methodNames.hasOwnProperty(key)) {\n          continue;\n        }\n        object[key] = ReactPerf.measure(\n          objectName,\n          methodNames[key],\n          object[key]\n        );\n      }\n    }\n  },\n\n  /**\n   * Use this to wrap methods you want to measure. Zero overhead in production.\n   *\n   * @param {string} objName\n   * @param {string} fnName\n   * @param {function} func\n   * @return {function}\n   */\n  measure: function(objName, fnName, func) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      var measuredFunc = null;\n      var wrapper = function() {\n        if (ReactPerf.enableMeasure) {\n          if (!measuredFunc) {\n            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);\n          }\n          return measuredFunc.apply(this, arguments);\n        }\n        return func.apply(this, arguments);\n      };\n      wrapper.displayName = objName + '_' + fnName;\n      return wrapper;\n    }\n    return func;\n  },\n\n  injection: {\n    /**\n     * @param {function} measure\n     */\n    injectMeasure: function(measure) {\n      ReactPerf.storedMeasure = measure;\n    }\n  }\n};\n\n/**\n * Simply passes through the measured function, without measuring it.\n *\n * @param {string} objName\n * @param {string} fnName\n * @param {function} func\n * @return {function}\n */\nfunction _noMeasure(objName, fnName, func) {\n  return func;\n}\n\nmodule.exports = ReactPerf;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPerf.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconciler\n */\n\n'use strict';\n\nvar ReactRef = require(\"./ReactRef\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function(internalInstance, rootID, transaction, context) {\n    var markup = internalInstance.mountComponent(rootID, transaction, context);\n    if (\"production\" !== process.env.NODE_ENV) {\n      ReactElementValidator.checkAndWarnForMutatedProps(\n        internalInstance._currentElement\n      );\n    }\n    transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    return markup;\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function(internalInstance) {\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent();\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function(\n    internalInstance, nextElement, transaction, context\n  ) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && nextElement._owner != null) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n      return;\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(\n      prevElement,\n      nextElement\n    );\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (refsChanged) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function(\n    internalInstance,\n    transaction\n  ) {\n    internalInstance.performUpdateIfNecessary(transaction);\n  }\n\n};\n\nmodule.exports = ReactReconciler;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactReconciler.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRef\n */\n\n'use strict';\n\nvar ReactOwner = require(\"./ReactOwner\");\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function(instance, element) {\n  var ref = element.ref;\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function(prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n\n  return (\n    nextElement._owner !== prevElement._owner ||\n    nextElement.ref !== prevElement.ref\n  );\n};\n\nReactRef.detachRefs = function(instance, element) {\n  var ref = element.ref;\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactRef.js\n ** module id = 29\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactOwner\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * ReactOwners are capable of storing references to owned components.\n *\n * All components are capable of //being// referenced by owner components, but\n * only ReactOwner components are capable of //referencing// owned components.\n * The named reference is known as a \"ref\".\n *\n * Refs are available when mounted and updated during reconciliation.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return (\n *         <div onClick={this.handleClick}>\n *           <CustomComponent ref=\"custom\" />\n *         </div>\n *       );\n *     },\n *     handleClick: function() {\n *       this.refs.custom.handleClick();\n *     },\n *     componentDidMount: function() {\n *       this.refs.custom.initialize();\n *     }\n *   });\n *\n * Refs should rarely be used. When refs are used, they should only be done to\n * control data that is not handled by React's data flow.\n *\n * @class ReactOwner\n */\nvar ReactOwner = {\n\n  /**\n   * @param {?object} object\n   * @return {boolean} True if `object` is a valid owner.\n   * @final\n   */\n  isValidOwner: function(object) {\n    return !!(\n      (object &&\n      typeof object.attachRef === 'function' && typeof object.detachRef === 'function')\n    );\n  },\n\n  /**\n   * Adds a component by ref to an owner component.\n   *\n   * @param {ReactComponent} component Component to reference.\n   * @param {string} ref Name by which to refer to the component.\n   * @param {ReactOwner} owner Component on which to record the ref.\n   * @final\n   * @internal\n   */\n  addComponentAsRefTo: function(component, ref, owner) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReactOwner.isValidOwner(owner),\n      'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' +\n      'usually means that you\\'re trying to add a ref to a component that ' +\n      'doesn\\'t have an owner (that is, was not created inside of another ' +\n      'component\\'s `render` method). Try rendering this component inside of ' +\n      'a new top-level component which will hold the ref.'\n    ) : invariant(ReactOwner.isValidOwner(owner)));\n    owner.attachRef(ref, component);\n  },\n\n  /**\n   * Removes a component by ref from an owner component.\n   *\n   * @param {ReactComponent} component Component to dereference.\n   * @param {string} ref Name of the ref to remove.\n   * @param {ReactOwner} owner Component on which the ref is recorded.\n   * @final\n   * @internal\n   */\n  removeComponentAsRefFrom: function(component, ref, owner) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReactOwner.isValidOwner(owner),\n      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +\n      'usually means that you\\'re trying to remove a ref to a component that ' +\n      'doesn\\'t have an owner (that is, was not created inside of another ' +\n      'component\\'s `render` method). Try rendering this component inside of ' +\n      'a new top-level component which will hold the ref.'\n    ) : invariant(ReactOwner.isValidOwner(owner)));\n    // Check that `component` is still the current ref because we do not want to\n    // detach the ref if another component stole it.\n    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {\n      owner.detachRef(ref);\n    }\n  }\n\n};\n\nmodule.exports = ReactOwner;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactOwner.js\n ** module id = 30\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElementValidator\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\n\nvar getIteratorFn = require(\"./getIteratorFn\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = ReactCurrentOwner.current.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nvar loggedTypeFailures = {};\n\nvar NUMERIC_PROPERTY_REGEX = /^\\d+$/;\n\n/**\n * Gets the instance's name for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getName(instance) {\n  var publicInstance = instance && instance.getPublicInstance();\n  if (!publicInstance) {\n    return undefined;\n  }\n  var constructor = publicInstance.constructor;\n  if (!constructor) {\n    return undefined;\n  }\n  return constructor.displayName || constructor.name || undefined;\n}\n\n/**\n * Gets the current owner's displayName for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getCurrentOwnerDisplayName() {\n  var current = ReactCurrentOwner.current;\n  return (\n    current && getName(current) || undefined\n  );\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  warnAndMonitorForKeyUse(\n    'Each child in an array or iterator should have a unique \"key\" prop.',\n    element,\n    parentType\n  );\n}\n\n/**\n * Warn if the key is being defined as an object property but has an incorrect\n * value.\n *\n * @internal\n * @param {string} name Property name of the key.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validatePropertyKey(name, element, parentType) {\n  if (!NUMERIC_PROPERTY_REGEX.test(name)) {\n    return;\n  }\n  warnAndMonitorForKeyUse(\n    'Child objects should have non-numeric keys so ordering is preserved.',\n    element,\n    parentType\n  );\n}\n\n/**\n * Shared warning and monitoring code for the key warnings.\n *\n * @internal\n * @param {string} message The base warning that gets output.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction warnAndMonitorForKeyUse(message, element, parentType) {\n  var ownerName = getCurrentOwnerDisplayName();\n  var parentName = typeof parentType === 'string' ?\n    parentType : parentType.displayName || parentType.name;\n\n  var useName = ownerName || parentName;\n  var memoizer = ownerHasKeyUseWarning[message] || (\n    (ownerHasKeyUseWarning[message] = {})\n  );\n  if (memoizer.hasOwnProperty(useName)) {\n    return;\n  }\n  memoizer[useName] = true;\n\n  var parentOrOwnerAddendum =\n    ownerName ? (\" Check the render method of \" + ownerName + \".\") :\n    parentName ? (\" Check the React.render call using <\" + parentName + \">.\") :\n    '';\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwnerAddendum = '';\n  if (element &&\n      element._owner &&\n      element._owner !== ReactCurrentOwner.current) {\n    // Name of the component that originally created this child.\n    var childOwnerName = getName(element._owner);\n\n    childOwnerAddendum = (\" It was passed a child from \" + childOwnerName + \".\");\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    message + '%s%s See https://fb.me/react-warning-keys for more information.',\n    parentOrOwnerAddendum,\n    childOwnerAddendum\n  ) : null);\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(node)) {\n    // This element was passed in a valid location.\n    node._store.validated = true;\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    // Entry iterators provide implicit keys.\n    if (iteratorFn) {\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (ReactElement.isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    } else if (typeof node === 'object') {\n      var fragment = ReactFragment.extractIfFragment(node);\n      for (var key in fragment) {\n        if (fragment.hasOwnProperty(key)) {\n          validatePropertyKey(key, fragment[key], parentType);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Assert that the props are valid\n *\n * @param {string} componentName Name of the component for error messages.\n * @param {object} propTypes Map of prop name to a ReactPropType\n * @param {object} props\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @private\n */\nfunction checkPropTypes(componentName, propTypes, props, location) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          typeof propTypes[propName] === 'function',\n          '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n          'React.PropTypes.',\n          componentName || 'React class',\n          ReactPropTypeLocationNames[location],\n          propName\n        ) : invariant(typeof propTypes[propName] === 'function'));\n        error = propTypes[propName](props, propName, componentName, location);\n      } catch (ex) {\n        error = ex;\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(this);\n        (\"production\" !== process.env.NODE_ENV ? warning(false, 'Failed propType: %s%s', error.message, addendum) : null);\n      }\n    }\n  }\n}\n\nvar warnedPropsMutations = {};\n\n/**\n * Warn about mutating props when setting `propName` on `element`.\n *\n * @param {string} propName The string key within props that was set\n * @param {ReactElement} element\n */\nfunction warnForPropsMutation(propName, element) {\n  var type = element.type;\n  var elementName = typeof type === 'string' ? type : type.displayName;\n  var ownerName = element._owner ?\n    element._owner.getPublicInstance().constructor.displayName : null;\n\n  var warningKey = propName + '|' + elementName + '|' + ownerName;\n  if (warnedPropsMutations.hasOwnProperty(warningKey)) {\n    return;\n  }\n  warnedPropsMutations[warningKey] = true;\n\n  var elementInfo = '';\n  if (elementName) {\n    elementInfo = ' <' + elementName + ' />';\n  }\n  var ownerInfo = '';\n  if (ownerName) {\n    ownerInfo = ' The element was created by ' + ownerName + '.';\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    'Don\\'t set .props.%s of the React component%s. Instead, specify the ' +\n    'correct value when initially creating the element or use ' +\n    'React.cloneElement to make a new element with updated props.%s',\n    propName,\n    elementInfo,\n    ownerInfo\n  ) : null);\n}\n\n// Inline Object.is polyfill\nfunction is(a, b) {\n  if (a !== a) {\n    // NaN\n    return b !== b;\n  }\n  if (a === 0 && b === 0) {\n    // +-0\n    return 1 / a === 1 / b;\n  }\n  return a === b;\n}\n\n/**\n * Given an element, check if its props have been mutated since element\n * creation (or the last call to this function). In particular, check if any\n * new props have been added, which we can't directly catch by defining warning\n * properties on the props object.\n *\n * @param {ReactElement} element\n */\nfunction checkAndWarnForMutatedProps(element) {\n  if (!element._store) {\n    // Element was created using `new ReactElement` directly or with\n    // `ReactElement.createElement`; skip mutation checking\n    return;\n  }\n\n  var originalProps = element._store.originalProps;\n  var props = element.props;\n\n  for (var propName in props) {\n    if (props.hasOwnProperty(propName)) {\n      if (!originalProps.hasOwnProperty(propName) ||\n          !is(originalProps[propName], props[propName])) {\n        warnForPropsMutation(propName, element);\n\n        // Copy over the new value so that the two props objects match again\n        originalProps[propName] = props[propName];\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  if (element.type == null) {\n    // This has already warned. Don't throw.\n    return;\n  }\n  // Extract the component class from the element. Converts string types\n  // to a composite class which may have propTypes.\n  // TODO: Validating a string's propTypes is not decoupled from the\n  // rendering target which is problematic.\n  var componentClass = ReactNativeComponent.getComponentClassForElement(\n    element\n  );\n  var name = componentClass.displayName || componentClass.name;\n  if (componentClass.propTypes) {\n    checkPropTypes(\n      name,\n      componentClass.propTypes,\n      element.props,\n      ReactPropTypeLocations.prop\n    );\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      componentClass.getDefaultProps.isReactClassApproved,\n      'getDefaultProps is only used on classic React.createClass ' +\n      'definitions. Use a static property named `defaultProps` instead.'\n    ) : null);\n  }\n}\n\nvar ReactElementValidator = {\n\n  checkAndWarnForMutatedProps: checkAndWarnForMutatedProps,\n\n  createElement: function(type, props, children) {\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      type != null,\n      'React.createElement: type should not be null or undefined. It should ' +\n        'be a string (for DOM elements) or a ReactClass (for composite ' +\n        'components).'\n    ) : null);\n\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n\n    validatePropTypes(element);\n\n    return element;\n  },\n\n  createFactory: function(type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(\n      null,\n      type\n    );\n    // Legacy hook TODO: Warn if this is accessed\n    validatedFactory.type = type;\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      try {\n        Object.defineProperty(\n          validatedFactory,\n          'type',\n          {\n            enumerable: false,\n            get: function() {\n              (\"production\" !== process.env.NODE_ENV ? warning(\n                false,\n                'Factory.type is deprecated. Access the class directly ' +\n                'before passing it to createFactory.'\n              ) : null);\n              Object.defineProperty(this, 'type', {\n                value: type\n              });\n              return type;\n            }\n          }\n        );\n      } catch (x) {\n        // IE will fail on defineProperty (es5-shim/sham too)\n      }\n    }\n\n\n    return validatedFactory;\n  },\n\n  cloneElement: function(element, props, children) {\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], newElement.type);\n    }\n    validatePropTypes(newElement);\n    return newElement;\n  }\n\n};\n\nmodule.exports = ReactElementValidator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactElementValidator.js\n ** module id = 31\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocations\n */\n\n'use strict';\n\nvar keyMirror = require(\"./keyMirror\");\n\nvar ReactPropTypeLocations = keyMirror({\n  prop: null,\n  context: null,\n  childContext: null\n});\n\nmodule.exports = ReactPropTypeLocations;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPropTypeLocations.js\n ** module id = 32\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocationNames\n */\n\n'use strict';\n\nvar ReactPropTypeLocationNames = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n}\n\nmodule.exports = ReactPropTypeLocationNames;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPropTypeLocationNames.js\n ** module id = 33\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNativeComponent\n */\n\n'use strict';\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\nvar autoGenerateWrapperClass = null;\nvar genericComponentClass = null;\n// This registry keeps track of wrapper classes around native tags\nvar tagToComponentClass = {};\nvar textComponentClass = null;\n\nvar ReactNativeComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function(componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function(componentClass) {\n    textComponentClass = componentClass;\n  },\n  // This accepts a keyed object with classes as values. Each key represents a\n  // tag. That particular tag will use this class instead of the generic one.\n  injectComponentClasses: function(componentClasses) {\n    assign(tagToComponentClass, componentClasses);\n  },\n  // Temporary hack since we expect DOM refs to behave like composites,\n  // for this release.\n  injectAutoWrapper: function(wrapperFactory) {\n    autoGenerateWrapperClass = wrapperFactory;\n  }\n};\n\n/**\n * Get a composite component wrapper class for a specific tag.\n *\n * @param {ReactElement} element The tag for which to get the class.\n * @return {function} The React class constructor function.\n */\nfunction getComponentClassForElement(element) {\n  if (typeof element.type === 'function') {\n    return element.type;\n  }\n  var tag = element.type;\n  var componentClass = tagToComponentClass[tag];\n  if (componentClass == null) {\n    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);\n  }\n  return componentClass;\n}\n\n/**\n * Get a native internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    genericComponentClass,\n    'There is no registered component for the tag %s',\n    element.type\n  ) : invariant(genericComponentClass));\n  return new genericComponentClass(element.type, element.props);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactNativeComponent = {\n  getComponentClassForElement: getComponentClassForElement,\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactNativeComponentInjection\n};\n\nmodule.exports = ReactNativeComponent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactNativeComponent.js\n ** module id = 34\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Transaction\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * `Transaction` creates a black box that is able to wrap any method such that\n * certain invariants are maintained before and after the method is invoked\n * (Even if an exception is thrown while invoking the wrapped method). Whoever\n * instantiates a transaction can provide enforcers of the invariants at\n * creation time. The `Transaction` class itself will supply one additional\n * automatic invariant for you - the invariant that any transaction instance\n * should not be run while it is already being run. You would typically create a\n * single instance of a `Transaction` for reuse multiple times, that potentially\n * is used to wrap several different methods. Wrappers are extremely simple -\n * they only require implementing two methods.\n *\n * <pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n *\n * Use cases:\n * - Preserving the input selection ranges before/after reconciliation.\n *   Restoring selection even in the event of an unexpected error.\n * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n *   while guaranteeing that afterwards, the event system is reactivated.\n * - Flushing a queue of collected DOM mutations to the main UI thread after a\n *   reconciliation takes place in a worker thread.\n * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n *   content.\n * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n * - (Future use case): Layout calculations before and after DOM updates.\n *\n * Transactional plugin API:\n * - A module that has an `initialize` method that returns any precomputation.\n * - and a `close` method that accepts the precomputation. `close` is invoked\n *   when the wrapped process is completed, or has failed.\n *\n * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n * that implement `initialize` and `close`.\n * @return {Transaction} Single transaction for reuse in thread.\n *\n * @class Transaction\n */\nvar Mixin = {\n  /**\n   * Sets up this instance so that it is prepared for collecting metrics. Does\n   * so such that this setup method may be used on an instance that is already\n   * initialized, in a way that does not consume additional memory upon reuse.\n   * That can be useful if you decide to make your subclass of this mixin a\n   * \"PooledClass\".\n   */\n  reinitializeTransaction: function() {\n    this.transactionWrappers = this.getTransactionWrappers();\n    if (!this.wrapperInitData) {\n      this.wrapperInitData = [];\n    } else {\n      this.wrapperInitData.length = 0;\n    }\n    this._isInTransaction = false;\n  },\n\n  _isInTransaction: false,\n\n  /**\n   * @abstract\n   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n   */\n  getTransactionWrappers: null,\n\n  isInTransaction: function() {\n    return !!this._isInTransaction;\n  },\n\n  /**\n   * Executes the function within a safety window. Use this for the top level\n   * methods that result in large amounts of computation/mutations that would\n   * need to be safety checked.\n   *\n   * @param {function} method Member of scope to call.\n   * @param {Object} scope Scope to invoke from.\n   * @param {Object?=} args... Arguments to pass to the method (optional).\n   *                           Helps prevent need to bind in many cases.\n   * @return Return value from `method`.\n   */\n  perform: function(method, scope, a, b, c, d, e, f) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !this.isInTransaction(),\n      'Transaction.perform(...): Cannot initialize a transaction when there ' +\n      'is already an outstanding transaction.'\n    ) : invariant(!this.isInTransaction()));\n    var errorThrown;\n    var ret;\n    try {\n      this._isInTransaction = true;\n      // Catching errors makes debugging more difficult, so we start with\n      // errorThrown set to true before setting it to false after calling\n      // close -- if it's still set to true in the finally block, it means\n      // one of these calls threw.\n      errorThrown = true;\n      this.initializeAll(0);\n      ret = method.call(scope, a, b, c, d, e, f);\n      errorThrown = false;\n    } finally {\n      try {\n        if (errorThrown) {\n          // If `method` throws, prefer to show that stack trace over any thrown\n          // by invoking `closeAll`.\n          try {\n            this.closeAll(0);\n          } catch (err) {\n          }\n        } else {\n          // Since `method` didn't throw, we don't want to silence the exception\n          // here.\n          this.closeAll(0);\n        }\n      } finally {\n        this._isInTransaction = false;\n      }\n    }\n    return ret;\n  },\n\n  initializeAll: function(startIndex) {\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      try {\n        // Catching errors makes debugging more difficult, so we start with the\n        // OBSERVED_ERROR state before overwriting it with the real return value\n        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n        // block, it means wrapper.initialize threw.\n        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;\n        this.wrapperInitData[i] = wrapper.initialize ?\n          wrapper.initialize.call(this) :\n          null;\n      } finally {\n        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {\n          // The initializer for wrapper i threw an error; initialize the\n          // remaining wrappers but silence any exceptions from them to ensure\n          // that the first error is the one to bubble up.\n          try {\n            this.initializeAll(i + 1);\n          } catch (err) {\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n   * them the respective return values of `this.transactionWrappers.init[i]`\n   * (`close`rs that correspond to initializers that failed will not be\n   * invoked).\n   */\n  closeAll: function(startIndex) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      this.isInTransaction(),\n      'Transaction.closeAll(): Cannot close transaction when none are open.'\n    ) : invariant(this.isInTransaction()));\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      var initData = this.wrapperInitData[i];\n      var errorThrown;\n      try {\n        // Catching errors makes debugging more difficult, so we start with\n        // errorThrown set to true before setting it to false after calling\n        // close -- if it's still set to true in the finally block, it means\n        // wrapper.close threw.\n        errorThrown = true;\n        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {\n          wrapper.close.call(this, initData);\n        }\n        errorThrown = false;\n      } finally {\n        if (errorThrown) {\n          // The closer for wrapper i threw an error; close the remaining\n          // wrappers but silence any exceptions from them to ensure that the\n          // first error is the one to bubble up.\n          try {\n            this.closeAll(i + 1);\n          } catch (e) {\n          }\n        }\n      }\n    }\n    this.wrapperInitData.length = 0;\n  }\n};\n\nvar Transaction = {\n\n  Mixin: Mixin,\n\n  /**\n   * Token to look for to determine if an error occured.\n   */\n  OBSERVED_ERROR: {}\n\n};\n\nmodule.exports = Transaction;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/Transaction.js\n ** module id = 35\n ** module chunks = 0\n **/","/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactLifeCycle\n */\n\n'use strict';\n\n/**\n * This module manages the bookkeeping when a component is in the process\n * of being mounted or being unmounted. This is used as a way to enforce\n * invariants (or warnings) when it is not recommended to call\n * setState/forceUpdate.\n *\n * currentlyMountingInstance: During the construction phase, it is not possible\n * to trigger an update since the instance is not fully mounted yet. However, we\n * currently allow this as a convenience for mutating the initial state.\n *\n * currentlyUnmountingInstance: During the unmounting phase, the instance is\n * still mounted and can therefore schedule an update. However, this is not\n * recommended and probably an error since it's about to be unmounted.\n * Therefore we still want to trigger in an error for that case.\n */\n\nvar ReactLifeCycle = {\n  currentlyMountingInstance: null,\n  currentlyUnmountingInstance: null\n};\n\nmodule.exports = ReactLifeCycle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactLifeCycle.js\n ** module id = 36\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceMap\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\nvar ReactInstanceMap = {\n\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function(key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function(key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function(key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function(key, value) {\n    key._reactInternalInstance = value;\n  }\n\n};\n\nmodule.exports = ReactInstanceMap;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInstanceMap.js\n ** module id = 37\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactClass\n */\n\n'use strict';\n\nvar ReactComponent = require(\"./ReactComponent\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactErrorUtils = require(\"./ReactErrorUtils\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactLifeCycle = require(\"./ReactLifeCycle\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\nvar ReactUpdateQueue = require(\"./ReactUpdateQueue\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar keyMirror = require(\"./keyMirror\");\nvar keyOf = require(\"./keyOf\");\nvar warning = require(\"./warning\");\n\nvar MIXINS_KEY = keyOf({mixins: null});\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\nvar SpecPolicy = keyMirror({\n  /**\n   * These methods may be defined only once by the class specification or mixin.\n   */\n  DEFINE_ONCE: null,\n  /**\n   * These methods may be defined by both the class specification and mixins.\n   * Subsequent definitions will be chained. These methods must return void.\n   */\n  DEFINE_MANY: null,\n  /**\n   * These methods are overriding the base class.\n   */\n  OVERRIDE_BASE: null,\n  /**\n   * These methods are similar to DEFINE_MANY, except we assume they return\n   * objects. We try to merge the keys of the return values of all the mixed in\n   * functions. If there is a key conflict we throw.\n   */\n  DEFINE_MANY_MERGED: null\n});\n\n\nvar injectedMixins = [];\n\n/**\n * Composite components are higher-level components that compose other composite\n * or native components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: SpecPolicy.DEFINE_MANY,\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @nosideeffects\n   * @required\n   */\n  render: SpecPolicy.DEFINE_ONCE,\n\n\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: SpecPolicy.DEFINE_MANY,\n\n\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: SpecPolicy.OVERRIDE_BASE\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function(Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function(Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function(Constructor, childContextTypes) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      validateTypeDef(\n        Constructor,\n        childContextTypes,\n        ReactPropTypeLocations.childContext\n      );\n    }\n    Constructor.childContextTypes = assign(\n      {},\n      Constructor.childContextTypes,\n      childContextTypes\n    );\n  },\n  contextTypes: function(Constructor, contextTypes) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      validateTypeDef(\n        Constructor,\n        contextTypes,\n        ReactPropTypeLocations.context\n      );\n    }\n    Constructor.contextTypes = assign(\n      {},\n      Constructor.contextTypes,\n      contextTypes\n    );\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function(Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(\n        Constructor.getDefaultProps,\n        getDefaultProps\n      );\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function(Constructor, propTypes) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      validateTypeDef(\n        Constructor,\n        propTypes,\n        ReactPropTypeLocations.prop\n      );\n    }\n    Constructor.propTypes = assign(\n      {},\n      Constructor.propTypes,\n      propTypes\n    );\n  },\n  statics: function(Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  }\n};\n\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but not in __DEV__\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        typeof typeDef[propName] === 'function',\n        '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n        'React.PropTypes.',\n        Constructor.displayName || 'ReactClass',\n        ReactPropTypeLocationNames[location],\n        propName\n      ) : null);\n    }\n  }\n}\n\nfunction validateMethodOverride(proto, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ?\n    ReactClassInterface[name] :\n    null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      specPolicy === SpecPolicy.OVERRIDE_BASE,\n      'ReactClassInterface: You are attempting to override ' +\n      '`%s` from your class specification. Ensure that your method names ' +\n      'do not overlap with React methods.',\n      name\n    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (proto.hasOwnProperty(name)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      specPolicy === SpecPolicy.DEFINE_MANY ||\n      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,\n      'ReactClassInterface: You are attempting to define ' +\n      '`%s` on your component more than once. This conflict may be due ' +\n      'to a mixin.',\n      name\n    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||\n    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classses.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    return;\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof spec !== 'function',\n    'ReactClass: You\\'re attempting to ' +\n    'use a component class as a mixin. Instead, just use a regular object.'\n  ) : invariant(typeof spec !== 'function'));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !ReactElement.isValidElement(spec),\n    'ReactClass: You\\'re attempting to ' +\n    'use a component as a mixin. Instead, just use a regular object.'\n  ) : invariant(!ReactElement.isValidElement(spec)));\n\n  var proto = Constructor.prototype;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above\n      continue;\n    }\n\n    var property = spec[name];\n    validateMethodOverride(proto, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod =\n        ReactClassInterface.hasOwnProperty(name);\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      var markedDontBind = property && property.__reactDontBind;\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind =\n        isFunction &&\n        !isReactClassMethod &&\n        !isAlreadyDefined &&\n        !markedDontBind;\n\n      if (shouldAutoBind) {\n        if (!proto.__reactAutoBindMap) {\n          proto.__reactAutoBindMap = {};\n        }\n        proto.__reactAutoBindMap[name] = property;\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride\n          (\"production\" !== process.env.NODE_ENV ? invariant(\n            isReactClassMethod && (\n              (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)\n            ),\n            'ReactClass: Unexpected spec policy %s for key %s ' +\n            'when mixing in component specs.',\n            specPolicy,\n            name\n          ) : invariant(isReactClassMethod && (\n            (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)\n          )));\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (\"production\" !== process.env.NODE_ENV) {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = name in RESERVED_SPEC_KEYS;\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !isReserved,\n      'ReactClass: You are attempting to define a reserved ' +\n      'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n      'as an instance property instead; it will still be accessible on the ' +\n      'constructor.',\n      name\n    ) : invariant(!isReserved));\n\n    var isInherited = name in Constructor;\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !isInherited,\n      'ReactClass: You are attempting to define ' +\n      '`%s` on your component more than once. This conflict may be ' +\n      'due to a mixin.',\n      name\n    ) : invariant(!isInherited));\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    one && two && typeof one === 'object' && typeof two === 'object',\n    'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        one[key] === undefined,\n        'mergeIntoWithNoDuplicateKeys(): ' +\n        'Tried to merge two objects with the same key: `%s`. This conflict ' +\n        'may be due to a mixin; in particular, this may be caused by two ' +\n        'getInitialState() or getDefaultProps() methods returning objects ' +\n        'with clashing keys.',\n        key\n      ) : invariant(one[key] === undefined));\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (\"production\" !== process.env.NODE_ENV) {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    /* eslint-disable block-scoped-var, no-undef */\n    boundMethod.bind = function(newThis ) {for (var args=[],$__0=1,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'bind(): React component methods may only be bound to the ' +\n          'component instance. See %s',\n          componentName\n        ) : null);\n      } else if (!args.length) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'bind(): You are binding a component method to the component. ' +\n          'React does this for you automatically in a high-performance ' +\n          'way, so you can safely remove this call. See %s',\n          componentName\n        ) : null);\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n      /* eslint-enable */\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  for (var autoBindKey in component.__reactAutoBindMap) {\n    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {\n      var method = component.__reactAutoBindMap[autoBindKey];\n      component[autoBindKey] = bindAutoBindMethod(\n        component,\n        ReactErrorUtils.guard(\n          method,\n          component.constructor.displayName + '.' + autoBindKey\n        )\n      );\n    }\n  }\n}\n\nvar typeDeprecationDescriptor = {\n  enumerable: false,\n  get: function() {\n    var displayName = this.displayName || this.name || 'Component';\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      '%s.type is deprecated. Use %s directly to access the class.',\n      displayName,\n      displayName\n    ) : null);\n    Object.defineProperty(this, 'type', {\n      value: this\n    });\n    return this;\n  }\n};\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function(newState, callback) {\n    ReactUpdateQueue.enqueueReplaceState(this, newState);\n    if (callback) {\n      ReactUpdateQueue.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function() {\n    if (\"production\" !== process.env.NODE_ENV) {\n      var owner = ReactCurrentOwner.current;\n      if (owner !== null) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          owner._warnedAboutRefsInRender,\n          '%s is accessing isMounted inside its render() function. ' +\n          'render() should be a pure function of props and state. It should ' +\n          'never access something that requires stale data from the previous ' +\n          'render, such as refs. Move this logic to componentDidMount and ' +\n          'componentDidUpdate instead.',\n          owner.getName() || 'A component'\n        ) : null);\n        owner._warnedAboutRefsInRender = true;\n      }\n    }\n    var internalInstance = ReactInstanceMap.get(this);\n    return (\n      internalInstance &&\n      internalInstance !== ReactLifeCycle.currentlyMountingInstance\n    );\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {object} partialProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  setProps: function(partialProps, callback) {\n    ReactUpdateQueue.enqueueSetProps(this, partialProps);\n    if (callback) {\n      ReactUpdateQueue.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Replace all the props.\n   *\n   * @param {object} newProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  replaceProps: function(newProps, callback) {\n    ReactUpdateQueue.enqueueReplaceProps(this, newProps);\n    if (callback) {\n      ReactUpdateQueue.enqueueCallback(this, callback);\n    }\n  }\n};\n\nvar ReactClassComponent = function() {};\nassign(\n  ReactClassComponent.prototype,\n  ReactComponent.prototype,\n  ReactClassMixin\n);\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function(spec) {\n    var Constructor = function(props, context) {\n      // This constructor is overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (\"production\" !== process.env.NODE_ENV) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          this instanceof Constructor,\n          'Something is calling a React component directly. Use a factory or ' +\n          'JSX instead. See: https://fb.me/react-legacyfactory'\n        ) : null);\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindMap) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (\"production\" !== process.env.NODE_ENV) {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (typeof initialState === 'undefined' &&\n            this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        typeof initialState === 'object' && !Array.isArray(initialState),\n        '%s.getInitialState(): must return an object or null',\n        Constructor.displayName || 'ReactCompositeComponent'\n      ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));\n\n      this.state = initialState;\n    };\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n\n    injectedMixins.forEach(\n      mixSpecIntoComponent.bind(null, Constructor)\n    );\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      Constructor.prototype.render,\n      'createClass(...): Class specification must implement a `render` method.'\n    ) : invariant(Constructor.prototype.render));\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !Constructor.prototype.componentShouldUpdate,\n        '%s has a method called ' +\n        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n        'The name is phrased as a question because the function is ' +\n        'expected to return a value.',\n        spec.displayName || 'A component'\n      ) : null);\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    // Legacy hook\n    Constructor.type = Constructor;\n    if (\"production\" !== process.env.NODE_ENV) {\n      try {\n        Object.defineProperty(Constructor, 'type', typeDeprecationDescriptor);\n      } catch (x) {\n        // IE will fail on defineProperty (es5-shim/sham too)\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function(mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactClass.js\n ** module id = 38\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactErrorUtils\n * @typechecks\n */\n\n\"use strict\";\n\nvar ReactErrorUtils = {\n  /**\n   * Creates a guarded version of a function. This is supposed to make debugging\n   * of event handlers easier. To aid debugging with the browser's debugger,\n   * this currently simply returns the original function.\n   *\n   * @param {function} func Function to be executed\n   * @param {string} name The name of the guard\n   * @return {function}\n   */\n  guard: function(func, name) {\n    return func;\n  }\n};\n\nmodule.exports = ReactErrorUtils;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactErrorUtils.js\n ** module id = 39\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyOf\n */\n\n/**\n * Allows extraction of a minified key. Let's the build system minify keys\n * without loosing the ability to dynamically use key strings as values\n * themselves. Pass in an object with a single key/val pair and it will return\n * you the string key of that single record. Suppose you want to grab the\n * value for a key 'className' inside of an object. Key/val minification may\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n * reuse those resolutions.\n */\nvar keyOf = function(oneKeyObj) {\n  var key;\n  for (key in oneKeyObj) {\n    if (!oneKeyObj.hasOwnProperty(key)) {\n      continue;\n    }\n    return key;\n  }\n  return null;\n};\n\n\nmodule.exports = keyOf;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/keyOf.js\n ** module id = 40\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOM\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\n\nvar mapObject = require(\"./mapObject\");\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @param {string} tag Tag name (e.g. `div`).\n * @private\n */\nfunction createDOMFactory(tag) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    return ReactElementValidator.createFactory(tag);\n  }\n  return ReactElement.createFactory(tag);\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n * This is also accessible via `React.DOM`.\n *\n * @public\n */\nvar ReactDOM = mapObject({\n  a: 'a',\n  abbr: 'abbr',\n  address: 'address',\n  area: 'area',\n  article: 'article',\n  aside: 'aside',\n  audio: 'audio',\n  b: 'b',\n  base: 'base',\n  bdi: 'bdi',\n  bdo: 'bdo',\n  big: 'big',\n  blockquote: 'blockquote',\n  body: 'body',\n  br: 'br',\n  button: 'button',\n  canvas: 'canvas',\n  caption: 'caption',\n  cite: 'cite',\n  code: 'code',\n  col: 'col',\n  colgroup: 'colgroup',\n  data: 'data',\n  datalist: 'datalist',\n  dd: 'dd',\n  del: 'del',\n  details: 'details',\n  dfn: 'dfn',\n  dialog: 'dialog',\n  div: 'div',\n  dl: 'dl',\n  dt: 'dt',\n  em: 'em',\n  embed: 'embed',\n  fieldset: 'fieldset',\n  figcaption: 'figcaption',\n  figure: 'figure',\n  footer: 'footer',\n  form: 'form',\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  head: 'head',\n  header: 'header',\n  hr: 'hr',\n  html: 'html',\n  i: 'i',\n  iframe: 'iframe',\n  img: 'img',\n  input: 'input',\n  ins: 'ins',\n  kbd: 'kbd',\n  keygen: 'keygen',\n  label: 'label',\n  legend: 'legend',\n  li: 'li',\n  link: 'link',\n  main: 'main',\n  map: 'map',\n  mark: 'mark',\n  menu: 'menu',\n  menuitem: 'menuitem',\n  meta: 'meta',\n  meter: 'meter',\n  nav: 'nav',\n  noscript: 'noscript',\n  object: 'object',\n  ol: 'ol',\n  optgroup: 'optgroup',\n  option: 'option',\n  output: 'output',\n  p: 'p',\n  param: 'param',\n  picture: 'picture',\n  pre: 'pre',\n  progress: 'progress',\n  q: 'q',\n  rp: 'rp',\n  rt: 'rt',\n  ruby: 'ruby',\n  s: 's',\n  samp: 'samp',\n  script: 'script',\n  section: 'section',\n  select: 'select',\n  small: 'small',\n  source: 'source',\n  span: 'span',\n  strong: 'strong',\n  style: 'style',\n  sub: 'sub',\n  summary: 'summary',\n  sup: 'sup',\n  table: 'table',\n  tbody: 'tbody',\n  td: 'td',\n  textarea: 'textarea',\n  tfoot: 'tfoot',\n  th: 'th',\n  thead: 'thead',\n  time: 'time',\n  title: 'title',\n  tr: 'tr',\n  track: 'track',\n  u: 'u',\n  ul: 'ul',\n  'var': 'var',\n  video: 'video',\n  wbr: 'wbr',\n\n  // SVG\n  circle: 'circle',\n  clipPath: 'clipPath',\n  defs: 'defs',\n  ellipse: 'ellipse',\n  g: 'g',\n  line: 'line',\n  linearGradient: 'linearGradient',\n  mask: 'mask',\n  path: 'path',\n  pattern: 'pattern',\n  polygon: 'polygon',\n  polyline: 'polyline',\n  radialGradient: 'radialGradient',\n  rect: 'rect',\n  stop: 'stop',\n  svg: 'svg',\n  text: 'text',\n  tspan: 'tspan'\n\n}, createDOMFactory);\n\nmodule.exports = ReactDOM;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOM.js\n ** module id = 41\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule mapObject\n */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Executes the provided `callback` once for each enumerable own property in the\n * object and constructs a new object from the results. The `callback` is\n * invoked with three arguments:\n *\n *  - the property value\n *  - the property name\n *  - the object being traversed\n *\n * Properties that are added after the call to `mapObject` will not be visited\n * by `callback`. If the values of existing properties are changed, the value\n * passed to `callback` will be the value at the time `mapObject` visits them.\n * Properties that are deleted before being visited are not visited.\n *\n * @grep function objectMap()\n * @grep function objMap()\n *\n * @param {?object} object\n * @param {function} callback\n * @param {*} context\n * @return {?object}\n */\nfunction mapObject(object, callback, context) {\n  if (!object) {\n    return null;\n  }\n  var result = {};\n  for (var name in object) {\n    if (hasOwnProperty.call(object, name)) {\n      result[name] = callback.call(context, object[name], name, object);\n    }\n  }\n  return result;\n}\n\nmodule.exports = mapObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/mapObject.js\n ** module id = 42\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar ReactComponentBrowserEnvironment =\n  require(\"./ReactComponentBrowserEnvironment\");\nvar ReactDOMComponent = require(\"./ReactDOMComponent\");\n\nvar assign = require(\"./Object.assign\");\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\n\n/**\n * Text nodes violate a couple assumptions that React makes about components:\n *\n *  - When mounting text into the DOM, adjacent text nodes are merged.\n *  - Text nodes cannot be assigned a React root ID.\n *\n * This component is used to wrap strings in elements so that they can undergo\n * the same reconciliation that is applied to elements.\n *\n * TODO: Investigate representing React components in the DOM with text nodes.\n *\n * @class ReactDOMTextComponent\n * @extends ReactComponent\n * @internal\n */\nvar ReactDOMTextComponent = function(props) {\n  // This constructor and its argument is currently used by mocks.\n};\n\nassign(ReactDOMTextComponent.prototype, {\n\n  /**\n   * @param {ReactText} text\n   * @internal\n   */\n  construct: function(text) {\n    // TODO: This is really a ReactText (ReactNode), not a ReactElement\n    this._currentElement = text;\n    this._stringText = '' + text;\n\n    // Properties\n    this._rootNodeID = null;\n    this._mountIndex = 0;\n  },\n\n  /**\n   * Creates the markup for this text node. This node is not intended to have\n   * any features besides containing text content.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup for this text node.\n   * @internal\n   */\n  mountComponent: function(rootID, transaction, context) {\n    this._rootNodeID = rootID;\n    var escapedText = escapeTextContentForBrowser(this._stringText);\n\n    if (transaction.renderToStaticMarkup) {\n      // Normally we'd wrap this in a `span` for the reasons stated above, but\n      // since this is a situation where React won't take over (static pages),\n      // we can simply return the text as it is.\n      return escapedText;\n    }\n\n    return (\n      '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' +\n        escapedText +\n      '</span>'\n    );\n  },\n\n  /**\n   * Updates this component by updating the text content.\n   *\n   * @param {ReactText} nextText The next text content\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  receiveComponent: function(nextText, transaction) {\n    if (nextText !== this._currentElement) {\n      this._currentElement = nextText;\n      var nextStringText = '' + nextText;\n      if (nextStringText !== this._stringText) {\n        // TODO: Save this as pending props and use performUpdateIfNecessary\n        // and/or updateComponent to do the actual update for consistency with\n        // other component types?\n        this._stringText = nextStringText;\n        ReactDOMComponent.BackendIDOperations.updateTextContentByID(\n          this._rootNodeID,\n          nextStringText\n        );\n      }\n    }\n  },\n\n  unmountComponent: function() {\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n  }\n\n});\n\nmodule.exports = ReactDOMTextComponent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMTextComponent.js\n ** module id = 43\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\n\nvar quoteAttributeValueForBrowser = require(\"./quoteAttributeValueForBrowser\");\nvar warning = require(\"./warning\");\n\nfunction shouldIgnoreValue(name, value) {\n  return value == null ||\n    (DOMProperty.hasBooleanValue[name] && !value) ||\n    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||\n    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||\n    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var reactProps = {\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true\n  };\n  var warnedProperties = {};\n\n  var warnUnknownProperty = function(name) {\n    if (reactProps.hasOwnProperty(name) && reactProps[name] ||\n        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\n      return;\n    }\n\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase();\n\n    // data-* attributes should be lowercase; suggest the lowercase version\n    var standardName = (\n      DOMProperty.isCustomAttribute(lowerCasedName) ?\n        lowerCasedName :\n      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?\n        DOMProperty.getPossibleStandardName[lowerCasedName] :\n        null\n    );\n\n    // For now, only warn when we have a suggested correction. This prevents\n    // logging too much when using transferPropsTo.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      standardName == null,\n      'Unknown DOM property %s. Did you mean %s?',\n      name,\n      standardName\n    ) : null);\n\n  };\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function(id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' +\n      quoteAttributeValueForBrowser(id);\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function(name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      if (shouldIgnoreValue(name, value)) {\n        return '';\n      }\n      var attributeName = DOMProperty.getAttributeName[name];\n      if (DOMProperty.hasBooleanValue[name] ||\n          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {\n        return attributeName;\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n    return null;\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function(node, name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(name, value)) {\n        this.deleteValueForProperty(node, name);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the\n        // property type before comparing; only `value` does and is string.\n        if (!DOMProperty.hasSideEffects[name] ||\n            ('' + node[propName]) !== ('' + value)) {\n          // Contrary to `setAttribute`, object properties are properly\n          // `toString`ed by IE8/9.\n          node[propName] = value;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        node.removeAttribute(name);\n      } else {\n        node.setAttribute(name, '' + value);\n      }\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function(node, name) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        var defaultValue = DOMProperty.getDefaultValueForProperty(\n          node.nodeName,\n          propName\n        );\n        if (!DOMProperty.hasSideEffects[name] ||\n            ('' + node[propName]) !== defaultValue) {\n          node[propName] = defaultValue;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  }\n\n};\n\nmodule.exports = DOMPropertyOperations;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMPropertyOperations.js\n ** module id = 44\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMProperty\n * @typechecks static-only\n */\n\n/*jslint bitwise: true */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n\nvar DOMPropertyInjection = {\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  MUST_USE_ATTRIBUTE: 0x1,\n  MUST_USE_PROPERTY: 0x2,\n  HAS_SIDE_EFFECTS: 0x4,\n  HAS_BOOLEAN_VALUE: 0x8,\n  HAS_NUMERIC_VALUE: 0x10,\n  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,\n\n  /**\n   * Inject some specialized knowledge about the DOM. This takes a config object\n   * with the following properties:\n   *\n   * isCustomAttribute: function that given an attribute name will return true\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n   * attributes where it's impossible to enumerate all of the possible\n   * attribute names,\n   *\n   * Properties: object mapping DOM property name to one of the\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n   * it won't get written to the DOM.\n   *\n   * DOMAttributeNames: object mapping React attribute name to the DOM\n   * attribute name. Attribute names not specified use the **lowercase**\n   * normalized name.\n   *\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n   * Property names not specified use the normalized name.\n   *\n   * DOMMutationMethods: Properties that require special mutation methods. If\n   * `value` is undefined, the mutation method should unset the property.\n   *\n   * @param {object} domPropertyConfig the config as described above.\n   */\n  injectDOMPropertyConfig: function(domPropertyConfig) {\n    var Properties = domPropertyConfig.Properties || {};\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\n    if (domPropertyConfig.isCustomAttribute) {\n      DOMProperty._isCustomAttributeFunctions.push(\n        domPropertyConfig.isCustomAttribute\n      );\n    }\n\n    for (var propName in Properties) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !DOMProperty.isStandardName.hasOwnProperty(propName),\n        'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property ' +\n        '\\'%s\\' which has already been injected. You may be accidentally ' +\n        'injecting the same DOM property config twice, or you may be ' +\n        'injecting two configs that have conflicting property names.',\n        propName\n      ) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName)));\n\n      DOMProperty.isStandardName[propName] = true;\n\n      var lowerCased = propName.toLowerCase();\n      DOMProperty.getPossibleStandardName[lowerCased] = propName;\n\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\n        var attributeName = DOMAttributeNames[propName];\n        DOMProperty.getPossibleStandardName[attributeName] = propName;\n        DOMProperty.getAttributeName[propName] = attributeName;\n      } else {\n        DOMProperty.getAttributeName[propName] = lowerCased;\n      }\n\n      DOMProperty.getPropertyName[propName] =\n        DOMPropertyNames.hasOwnProperty(propName) ?\n          DOMPropertyNames[propName] :\n          propName;\n\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\n        DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];\n      } else {\n        DOMProperty.getMutationMethod[propName] = null;\n      }\n\n      var propConfig = Properties[propName];\n      DOMProperty.mustUseAttribute[propName] =\n        checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);\n      DOMProperty.mustUseProperty[propName] =\n        checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);\n      DOMProperty.hasSideEffects[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);\n      DOMProperty.hasBooleanValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);\n      DOMProperty.hasNumericValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);\n      DOMProperty.hasPositiveNumericValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);\n      DOMProperty.hasOverloadedBooleanValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);\n\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !DOMProperty.mustUseAttribute[propName] ||\n          !DOMProperty.mustUseProperty[propName],\n        'DOMProperty: Cannot require using both attribute and property: %s',\n        propName\n      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||\n        !DOMProperty.mustUseProperty[propName]));\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        DOMProperty.mustUseProperty[propName] ||\n          !DOMProperty.hasSideEffects[propName],\n        'DOMProperty: Properties that have side effects must use property: %s',\n        propName\n      ) : invariant(DOMProperty.mustUseProperty[propName] ||\n        !DOMProperty.hasSideEffects[propName]));\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !!DOMProperty.hasBooleanValue[propName] +\n          !!DOMProperty.hasNumericValue[propName] +\n          !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,\n        'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +\n        'numeric value, but not a combination: %s',\n        propName\n      ) : invariant(!!DOMProperty.hasBooleanValue[propName] +\n        !!DOMProperty.hasNumericValue[propName] +\n        !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1));\n    }\n  }\n};\nvar defaultValueCache = {};\n\n/**\n * DOMProperty exports lookup objects that can be used like functions:\n *\n *   > DOMProperty.isValid['id']\n *   true\n *   > DOMProperty.isValid['foobar']\n *   undefined\n *\n * Although this may be confusing, it performs better in general.\n *\n * @see http://jsperf.com/key-exists\n * @see http://jsperf.com/key-missing\n */\nvar DOMProperty = {\n\n  ID_ATTRIBUTE_NAME: 'data-reactid',\n\n  /**\n   * Checks whether a property name is a standard property.\n   * @type {Object}\n   */\n  isStandardName: {},\n\n  /**\n   * Mapping from lowercase property names to the properly cased version, used\n   * to warn in the case of missing properties.\n   * @type {Object}\n   */\n  getPossibleStandardName: {},\n\n  /**\n   * Mapping from normalized names to attribute names that differ. Attribute\n   * names are used when rendering markup or with `*Attribute()`.\n   * @type {Object}\n   */\n  getAttributeName: {},\n\n  /**\n   * Mapping from normalized names to properties on DOM node instances.\n   * (This includes properties that mutate due to external factors.)\n   * @type {Object}\n   */\n  getPropertyName: {},\n\n  /**\n   * Mapping from normalized names to mutation methods. This will only exist if\n   * mutation cannot be set simply by the property or `setAttribute()`.\n   * @type {Object}\n   */\n  getMutationMethod: {},\n\n  /**\n   * Whether the property must be accessed and mutated as an object property.\n   * @type {Object}\n   */\n  mustUseAttribute: {},\n\n  /**\n   * Whether the property must be accessed and mutated using `*Attribute()`.\n   * (This includes anything that fails `<propName> in <element>`.)\n   * @type {Object}\n   */\n  mustUseProperty: {},\n\n  /**\n   * Whether or not setting a value causes side effects such as triggering\n   * resources to be loaded or text selection changes. We must ensure that\n   * the value is only set if it has changed.\n   * @type {Object}\n   */\n  hasSideEffects: {},\n\n  /**\n   * Whether the property should be removed when set to a falsey value.\n   * @type {Object}\n   */\n  hasBooleanValue: {},\n\n  /**\n   * Whether the property must be numeric or parse as a\n   * numeric and should be removed when set to a falsey value.\n   * @type {Object}\n   */\n  hasNumericValue: {},\n\n  /**\n   * Whether the property must be positive numeric or parse as a positive\n   * numeric and should be removed when set to a falsey value.\n   * @type {Object}\n   */\n  hasPositiveNumericValue: {},\n\n  /**\n   * Whether the property can be used as a flag as well as with a value. Removed\n   * when strictly equal to false; present without a value when strictly equal\n   * to true; present with a value otherwise.\n   * @type {Object}\n   */\n  hasOverloadedBooleanValue: {},\n\n  /**\n   * All of the isCustomAttribute() functions that have been injected.\n   */\n  _isCustomAttributeFunctions: [],\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   * @method\n   */\n  isCustomAttribute: function(attributeName) {\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n      if (isCustomAttributeFn(attributeName)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  /**\n   * Returns the default property value for a DOM property (i.e., not an\n   * attribute). Most default values are '' or false, but not all. Worse yet,\n   * some (in particular, `type`) vary depending on the type of element.\n   *\n   * TODO: Is it better to grab all the possible properties when creating an\n   * element to avoid having to create the same element twice?\n   */\n  getDefaultValueForProperty: function(nodeName, prop) {\n    var nodeDefaults = defaultValueCache[nodeName];\n    var testElement;\n    if (!nodeDefaults) {\n      defaultValueCache[nodeName] = nodeDefaults = {};\n    }\n    if (!(prop in nodeDefaults)) {\n      testElement = document.createElement(nodeName);\n      nodeDefaults[prop] = testElement[prop];\n    }\n    return nodeDefaults[prop];\n  },\n\n  injection: DOMPropertyInjection\n};\n\nmodule.exports = DOMProperty;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMProperty.js\n ** module id = 45\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule quoteAttributeValueForBrowser\n */\n\n'use strict';\n\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\n\n/**\n * Escapes attribute value to prevent scripting attacks.\n *\n * @param {*} value Value to escape.\n * @return {string} An escaped string.\n */\nfunction quoteAttributeValueForBrowser(value) {\n  return '\"' + escapeTextContentForBrowser(value) + '\"';\n}\n\nmodule.exports = quoteAttributeValueForBrowser;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/quoteAttributeValueForBrowser.js\n ** module id = 46\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule escapeTextContentForBrowser\n */\n\n'use strict';\n\nvar ESCAPE_LOOKUP = {\n  '&': '&amp;',\n  '>': '&gt;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  '\\'': '&#x27;'\n};\n\nvar ESCAPE_REGEX = /[&><\"']/g;\n\nfunction escaper(match) {\n  return ESCAPE_LOOKUP[match];\n}\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextContentForBrowser(text) {\n  return ('' + text).replace(ESCAPE_REGEX, escaper);\n}\n\nmodule.exports = escapeTextContentForBrowser;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/escapeTextContentForBrowser.js\n ** module id = 47\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentBrowserEnvironment\n */\n\n/*jslint evil: true */\n\n'use strict';\n\nvar ReactDOMIDOperations = require(\"./ReactDOMIDOperations\");\nvar ReactMount = require(\"./ReactMount\");\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n\n  processChildrenUpdates:\n    ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkupByID:\n    ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,\n\n  /**\n   * If a particular environment requires that some resources be cleaned up,\n   * specify this in the injected Mixin. In the DOM, we would likely want to\n   * purge any cached node ID lookups.\n   *\n   * @private\n   */\n  unmountIDFromEnvironment: function(rootNodeID) {\n    ReactMount.purgeID(rootNodeID);\n  }\n\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactComponentBrowserEnvironment.js\n ** module id = 48\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIDOperations\n * @typechecks static-only\n */\n\n/*jslint evil: true */\n\n'use strict';\n\nvar CSSPropertyOperations = require(\"./CSSPropertyOperations\");\nvar DOMChildrenOperations = require(\"./DOMChildrenOperations\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactPerf = require(\"./ReactPerf\");\n\nvar invariant = require(\"./invariant\");\nvar setInnerHTML = require(\"./setInnerHTML\");\n\n/**\n * Errors for properties that should not be updated with `updatePropertyById()`.\n *\n * @type {object}\n * @private\n */\nvar INVALID_PROPERTY_ERRORS = {\n  dangerouslySetInnerHTML:\n    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',\n  style: '`style` must be set using `updateStylesByID()`.'\n};\n\n/**\n * Operations used to process updates to DOM nodes. This is made injectable via\n * `ReactDOMComponent.BackendIDOperations`.\n */\nvar ReactDOMIDOperations = {\n\n  /**\n   * Updates a DOM node with new property values. This should only be used to\n   * update DOM properties in `DOMProperty`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} name A valid property name, see `DOMProperty`.\n   * @param {*} value New value of the property.\n   * @internal\n   */\n  updatePropertyByID: function(id, name, value) {\n    var node = ReactMount.getNode(id);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),\n      'updatePropertyByID(...): %s',\n      INVALID_PROPERTY_ERRORS[name]\n    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));\n\n    // If we're updating to null or undefined, we should remove the property\n    // from the DOM node instead of inadvertantly setting to a string. This\n    // brings us in line with the same behavior we have on initial render.\n    if (value != null) {\n      DOMPropertyOperations.setValueForProperty(node, name, value);\n    } else {\n      DOMPropertyOperations.deleteValueForProperty(node, name);\n    }\n  },\n\n  /**\n   * Updates a DOM node to remove a property. This should only be used to remove\n   * DOM properties in `DOMProperty`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} name A property name to remove, see `DOMProperty`.\n   * @internal\n   */\n  deletePropertyByID: function(id, name, value) {\n    var node = ReactMount.getNode(id);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),\n      'updatePropertyByID(...): %s',\n      INVALID_PROPERTY_ERRORS[name]\n    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));\n    DOMPropertyOperations.deleteValueForProperty(node, name, value);\n  },\n\n  /**\n   * Updates a DOM node with new style values. If a value is specified as '',\n   * the corresponding style property will be unset.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {object} styles Mapping from styles to values.\n   * @internal\n   */\n  updateStylesByID: function(id, styles) {\n    var node = ReactMount.getNode(id);\n    CSSPropertyOperations.setValueForStyles(node, styles);\n  },\n\n  /**\n   * Updates a DOM node's innerHTML.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} html An HTML string.\n   * @internal\n   */\n  updateInnerHTMLByID: function(id, html) {\n    var node = ReactMount.getNode(id);\n    setInnerHTML(node, html);\n  },\n\n  /**\n   * Updates a DOM node's text content set by `props.content`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} content Text content.\n   * @internal\n   */\n  updateTextContentByID: function(id, content) {\n    var node = ReactMount.getNode(id);\n    DOMChildrenOperations.updateTextContent(node, content);\n  },\n\n  /**\n   * Replaces a DOM node that exists in the document with markup.\n   *\n   * @param {string} id ID of child to be replaced.\n   * @param {string} markup Dangerous markup to inject in place of child.\n   * @internal\n   * @see {Danger.dangerouslyReplaceNodeWithMarkup}\n   */\n  dangerouslyReplaceNodeWithMarkupByID: function(id, markup) {\n    var node = ReactMount.getNode(id);\n    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);\n  },\n\n  /**\n   * Updates a component's children by processing a series of updates.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markup List of markup strings.\n   * @internal\n   */\n  dangerouslyProcessChildrenUpdates: function(updates, markup) {\n    for (var i = 0; i < updates.length; i++) {\n      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);\n    }\n    DOMChildrenOperations.processUpdates(updates, markup);\n  }\n};\n\nReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {\n  updatePropertyByID: 'updatePropertyByID',\n  deletePropertyByID: 'deletePropertyByID',\n  updateStylesByID: 'updateStylesByID',\n  updateInnerHTMLByID: 'updateInnerHTMLByID',\n  updateTextContentByID: 'updateTextContentByID',\n  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',\n  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'\n});\n\nmodule.exports = ReactDOMIDOperations;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMIDOperations.js\n ** module id = 49\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = require(\"./CSSProperty\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar camelizeStyleName = require(\"./camelizeStyleName\");\nvar dangerousStyleValue = require(\"./dangerousStyleValue\");\nvar hyphenateStyleName = require(\"./hyphenateStyleName\");\nvar memoizeStringOnly = require(\"./memoizeStringOnly\");\nvar warning = require(\"./warning\");\n\nvar processStyleName = memoizeStringOnly(function(styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n\n  var warnHyphenatedStyleName = function(name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Unsupported style property %s. Did you mean %s?',\n      name,\n      camelizeStyleName(name)\n    ) : null);\n  };\n\n  var warnBadVendoredStyleName = function(name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Unsupported vendor-prefixed style property %s. Did you mean %s?',\n      name,\n      name.charAt(0).toUpperCase() + name.slice(1)\n    ) : null);\n  };\n\n  var warnStyleValueWithSemicolon = function(name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Style property values shouldn\\'t contain a semicolon. ' +\n      'Try \"%s: %s\" instead.',\n      name,\n      value.replace(badStyleValueWithSemicolonPattern, '')\n    ) : null);\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   */\n  var warnValidStyle = function(name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @return {?string}\n   */\n  createMarkupForStyles: function(styles) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnValidStyle(styleName, styleValue);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   */\n  setValueForStyles: function(node, styles) {\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnValidStyle(styleName, styles[styleName]);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName]);\n      if (styleName === 'float') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = CSSPropertyOperations;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/CSSPropertyOperations.js\n ** module id = 50\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSProperty\n */\n\n'use strict';\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nvar isUnitlessNumber = {\n  boxFlex: true,\n  boxFlexGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function(prop) {\n  prefixes.forEach(function(prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Most style properties can be unset by doing .style[prop] = '' but IE8\n * doesn't like doing that with shorthand properties so for the properties that\n * IE8 breaks on, which are listed here, we instead unset each of the\n * individual properties. See http://bugs.jquery.com/ticket/12385.\n * The 4-value 'clock' properties like margin, padding, border-width seem to\n * behave without any problems. Curiously, list-style works too without any\n * special prodding.\n */\nvar shorthandPropertyExpansions = {\n  background: {\n    backgroundImage: true,\n    backgroundPosition: true,\n    backgroundRepeat: true,\n    backgroundColor: true\n  },\n  border: {\n    borderWidth: true,\n    borderStyle: true,\n    borderColor: true\n  },\n  borderBottom: {\n    borderBottomWidth: true,\n    borderBottomStyle: true,\n    borderBottomColor: true\n  },\n  borderLeft: {\n    borderLeftWidth: true,\n    borderLeftStyle: true,\n    borderLeftColor: true\n  },\n  borderRight: {\n    borderRightWidth: true,\n    borderRightStyle: true,\n    borderRightColor: true\n  },\n  borderTop: {\n    borderTopWidth: true,\n    borderTopStyle: true,\n    borderTopColor: true\n  },\n  font: {\n    fontStyle: true,\n    fontVariant: true,\n    fontWeight: true,\n    fontSize: true,\n    lineHeight: true,\n    fontFamily: true\n  }\n};\n\nvar CSSProperty = {\n  isUnitlessNumber: isUnitlessNumber,\n  shorthandPropertyExpansions: shorthandPropertyExpansions\n};\n\nmodule.exports = CSSProperty;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/CSSProperty.js\n ** module id = 51\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ExecutionEnvironment\n */\n\n/*jslint evil: true */\n\n\"use strict\";\n\nvar canUseDOM = !!(\n  (typeof window !== 'undefined' &&\n  window.document && window.document.createElement)\n);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners:\n    canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ExecutionEnvironment.js\n ** module id = 52\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelizeStyleName\n * @typechecks\n */\n\n\"use strict\";\n\nvar camelize = require(\"./camelize\");\n\nvar msPattern = /^-ms-/;\n\n/**\n * Camelcases a hyphenated CSS property name, for example:\n *\n *   > camelizeStyleName('background-color')\n *   < \"backgroundColor\"\n *   > camelizeStyleName('-moz-transition')\n *   < \"MozTransition\"\n *   > camelizeStyleName('-ms-transition')\n *   < \"msTransition\"\n *\n * As Andi Smith suggests\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n * is converted to lowercase `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelizeStyleName(string) {\n  return camelize(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = camelizeStyleName;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/camelizeStyleName.js\n ** module id = 53\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelize\n * @typechecks\n */\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function(_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/camelize.js\n ** module id = 54\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule dangerousStyleValue\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = require(\"./CSSProperty\");\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isNonNumeric || value === 0 ||\n      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/dangerousStyleValue.js\n ** module id = 55\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenateStyleName\n * @typechecks\n */\n\n\"use strict\";\n\nvar hyphenate = require(\"./hyphenate\");\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/hyphenateStyleName.js\n ** module id = 56\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenate\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/hyphenate.js\n ** module id = 57\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule memoizeStringOnly\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n *\n * @param {function} callback\n * @return {function}\n */\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function(string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/memoizeStringOnly.js\n ** module id = 58\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMChildrenOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar Danger = require(\"./Danger\");\nvar ReactMultiChildUpdateTypes = require(\"./ReactMultiChildUpdateTypes\");\n\nvar setTextContent = require(\"./setTextContent\");\nvar invariant = require(\"./invariant\");\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nfunction insertChildAt(parentNode, childNode, index) {\n  // By exploiting arrays returning `undefined` for an undefined index, we can\n  // rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. However, using `undefined` is not allowed by all\n  // browsers so we must replace it with `null`.\n  parentNode.insertBefore(\n    childNode,\n    parentNode.childNodes[index] || null\n  );\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n\n  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,\n\n  updateTextContent: setTextContent,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markupList List of markup strings.\n   * @internal\n   */\n  processUpdates: function(updates, markupList) {\n    var update;\n    // Mapping from parent IDs to initial child orderings.\n    var initialChildren = null;\n    // List of children that will be moved or removed.\n    var updatedChildren = null;\n\n    for (var i = 0; i < updates.length; i++) {\n      update = updates[i];\n      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||\n          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {\n        var updatedIndex = update.fromIndex;\n        var updatedChild = update.parentNode.childNodes[updatedIndex];\n        var parentID = update.parentID;\n\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          updatedChild,\n          'processUpdates(): Unable to find child %s of element. This ' +\n          'probably means the DOM was unexpectedly mutated (e.g., by the ' +\n          'browser), usually due to forgetting a <tbody> when using tables, ' +\n          'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' +\n          'in an <svg> parent. Try inspecting the child nodes of the element ' +\n          'with React ID `%s`.',\n          updatedIndex,\n          parentID\n        ) : invariant(updatedChild));\n\n        initialChildren = initialChildren || {};\n        initialChildren[parentID] = initialChildren[parentID] || [];\n        initialChildren[parentID][updatedIndex] = updatedChild;\n\n        updatedChildren = updatedChildren || [];\n        updatedChildren.push(updatedChild);\n      }\n    }\n\n    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);\n\n    // Remove updated children first so that `toIndex` is consistent.\n    if (updatedChildren) {\n      for (var j = 0; j < updatedChildren.length; j++) {\n        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);\n      }\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      update = updates[k];\n      switch (update.type) {\n        case ReactMultiChildUpdateTypes.INSERT_MARKUP:\n          insertChildAt(\n            update.parentNode,\n            renderedMarkup[update.markupIndex],\n            update.toIndex\n          );\n          break;\n        case ReactMultiChildUpdateTypes.MOVE_EXISTING:\n          insertChildAt(\n            update.parentNode,\n            initialChildren[update.parentID][update.fromIndex],\n            update.toIndex\n          );\n          break;\n        case ReactMultiChildUpdateTypes.TEXT_CONTENT:\n          setTextContent(\n            update.parentNode,\n            update.textContent\n          );\n          break;\n        case ReactMultiChildUpdateTypes.REMOVE_NODE:\n          // Already removed by the for-loop above.\n          break;\n      }\n    }\n  }\n\n};\n\nmodule.exports = DOMChildrenOperations;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMChildrenOperations.js\n ** module id = 59\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Danger\n * @typechecks static-only\n */\n\n/*jslint evil: true, sub: true */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar createNodesFromMarkup = require(\"./createNodesFromMarkup\");\nvar emptyFunction = require(\"./emptyFunction\");\nvar getMarkupWrap = require(\"./getMarkupWrap\");\nvar invariant = require(\"./invariant\");\n\nvar OPEN_TAG_NAME_EXP = /^(<[^ \\/>]+)/;\nvar RESULT_INDEX_ATTR = 'data-danger-index';\n\n/**\n * Extracts the `nodeName` from a string of markup.\n *\n * NOTE: Extracting the `nodeName` does not require a regular expression match\n * because we make assumptions about React-generated markup (i.e. there are no\n * spaces surrounding the opening tag and there is at least one attribute).\n *\n * @param {string} markup String of markup.\n * @return {string} Node name of the supplied markup.\n * @see http://jsperf.com/extract-nodename\n */\nfunction getNodeName(markup) {\n  return markup.substring(1, markup.indexOf(' '));\n}\n\nvar Danger = {\n\n  /**\n   * Renders markup into an array of nodes. The markup is expected to render\n   * into a list of root nodes. Also, the length of `resultList` and\n   * `markupList` should be the same.\n   *\n   * @param {array<string>} markupList List of markup strings to render.\n   * @return {array<DOMElement>} List of rendered nodes.\n   * @internal\n   */\n  dangerouslyRenderMarkup: function(markupList) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ExecutionEnvironment.canUseDOM,\n      'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' +\n      'thread. Make sure `window` and `document` are available globally ' +\n      'before requiring React when unit testing or use ' +\n      'React.renderToString for server rendering.'\n    ) : invariant(ExecutionEnvironment.canUseDOM));\n    var nodeName;\n    var markupByNodeName = {};\n    // Group markup by `nodeName` if a wrap is necessary, else by '*'.\n    for (var i = 0; i < markupList.length; i++) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        markupList[i],\n        'dangerouslyRenderMarkup(...): Missing markup.'\n      ) : invariant(markupList[i]));\n      nodeName = getNodeName(markupList[i]);\n      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';\n      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];\n      markupByNodeName[nodeName][i] = markupList[i];\n    }\n    var resultList = [];\n    var resultListAssignmentCount = 0;\n    for (nodeName in markupByNodeName) {\n      if (!markupByNodeName.hasOwnProperty(nodeName)) {\n        continue;\n      }\n      var markupListByNodeName = markupByNodeName[nodeName];\n\n      // This for-in loop skips the holes of the sparse array. The order of\n      // iteration should follow the order of assignment, which happens to match\n      // numerical index order, but we don't rely on that.\n      var resultIndex;\n      for (resultIndex in markupListByNodeName) {\n        if (markupListByNodeName.hasOwnProperty(resultIndex)) {\n          var markup = markupListByNodeName[resultIndex];\n\n          // Push the requested markup with an additional RESULT_INDEX_ATTR\n          // attribute.  If the markup does not start with a < character, it\n          // will be discarded below (with an appropriate console.error).\n          markupListByNodeName[resultIndex] = markup.replace(\n            OPEN_TAG_NAME_EXP,\n            // This index will be parsed back out below.\n            '$1 ' + RESULT_INDEX_ATTR + '=\"' + resultIndex + '\" '\n          );\n        }\n      }\n\n      // Render each group of markup with similar wrapping `nodeName`.\n      var renderNodes = createNodesFromMarkup(\n        markupListByNodeName.join(''),\n        emptyFunction // Do nothing special with <script> tags.\n      );\n\n      for (var j = 0; j < renderNodes.length; ++j) {\n        var renderNode = renderNodes[j];\n        if (renderNode.hasAttribute &&\n            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {\n\n          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);\n          renderNode.removeAttribute(RESULT_INDEX_ATTR);\n\n          (\"production\" !== process.env.NODE_ENV ? invariant(\n            !resultList.hasOwnProperty(resultIndex),\n            'Danger: Assigning to an already-occupied result index.'\n          ) : invariant(!resultList.hasOwnProperty(resultIndex)));\n\n          resultList[resultIndex] = renderNode;\n\n          // This should match resultList.length and markupList.length when\n          // we're done.\n          resultListAssignmentCount += 1;\n\n        } else if (\"production\" !== process.env.NODE_ENV) {\n          console.error(\n            'Danger: Discarding unexpected node:',\n            renderNode\n          );\n        }\n      }\n    }\n\n    // Although resultList was populated out of order, it should now be a dense\n    // array.\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      resultListAssignmentCount === resultList.length,\n      'Danger: Did not assign to every index of resultList.'\n    ) : invariant(resultListAssignmentCount === resultList.length));\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      resultList.length === markupList.length,\n      'Danger: Expected markup to render %s nodes, but rendered %s.',\n      markupList.length,\n      resultList.length\n    ) : invariant(resultList.length === markupList.length));\n\n    return resultList;\n  },\n\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ExecutionEnvironment.canUseDOM,\n      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +\n      'worker thread. Make sure `window` and `document` are available ' +\n      'globally before requiring React when unit testing or use ' +\n      'React.renderToString for server rendering.'\n    ) : invariant(ExecutionEnvironment.canUseDOM));\n    (\"production\" !== process.env.NODE_ENV ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      oldChild.tagName.toLowerCase() !== 'html',\n      'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +\n      '<html> node. This is because browser quirks make this unreliable ' +\n      'and/or slow. If you want to render to the root you must use ' +\n      'server rendering. See React.renderToString().'\n    ) : invariant(oldChild.tagName.toLowerCase() !== 'html'));\n\n    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n  }\n\n};\n\nmodule.exports = Danger;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/Danger.js\n ** module id = 60\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createNodesFromMarkup\n * @typechecks\n */\n\n/*jslint evil: true, sub: true */\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar createArrayFromMixed = require(\"./createArrayFromMixed\");\nvar getMarkupWrap = require(\"./getMarkupWrap\");\nvar invariant = require(\"./invariant\");\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode =\n  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  (\"production\" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      handleScript,\n      'createNodesFromMarkup(...): Unexpected <script> element rendered.'\n    ) : invariant(handleScript));\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = createArrayFromMixed(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/createNodesFromMarkup.js\n ** module id = 61\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createArrayFromMixed\n * @typechecks\n */\n\nvar toArray = require(\"./toArray\");\n\n/**\n * Perform a heuristic test to determine if an object is \"array-like\".\n *\n *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n *   Joshu replied: \"Mu.\"\n *\n * This function determines if its argument has \"array nature\": it returns\n * true if the argument is an actual array, an `arguments' object, or an\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n *\n * It will return false for other array-like objects like Filelist.\n *\n * @param {*} obj\n * @return {boolean}\n */\nfunction hasArrayNature(obj) {\n  return (\n    // not null/false\n    !!obj &&\n    // arrays are objects, NodeLists are functions in Safari\n    (typeof obj == 'object' || typeof obj == 'function') &&\n    // quacks like an array\n    ('length' in obj) &&\n    // not window\n    !('setInterval' in obj) &&\n    // no DOM node should be considered an array-like\n    // a 'select' element has 'length' and 'item' properties on IE8\n    (typeof obj.nodeType != 'number') &&\n    (\n      // a real array\n      (// HTMLCollection/NodeList\n      (Array.isArray(obj) ||\n      // arguments\n      ('callee' in obj) || 'item' in obj))\n    )\n  );\n}\n\n/**\n * Ensure that the argument is an array by wrapping it in an array if it is not.\n * Creates a copy of the argument if it is already an array.\n *\n * This is mostly useful idiomatically:\n *\n *   var createArrayFromMixed = require('createArrayFromMixed');\n *\n *   function takesOneOrMoreThings(things) {\n *     things = createArrayFromMixed(things);\n *     ...\n *   }\n *\n * This allows you to treat `things' as an array, but accept scalars in the API.\n *\n * If you need to convert an array-like object, like `arguments`, into an array\n * use toArray instead.\n *\n * @param {*} obj\n * @return {array}\n */\nfunction createArrayFromMixed(obj) {\n  if (!hasArrayNature(obj)) {\n    return [obj];\n  } else if (Array.isArray(obj)) {\n    return obj.slice();\n  } else {\n    return toArray(obj);\n  }\n}\n\nmodule.exports = createArrayFromMixed;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/createArrayFromMixed.js\n ** module id = 62\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule toArray\n * @typechecks\n */\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in\n  // old versions of Safari).\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !Array.isArray(obj) &&\n    (typeof obj === 'object' || typeof obj === 'function'),\n    'toArray: Array-like object expected'\n  ) : invariant(!Array.isArray(obj) &&\n  (typeof obj === 'object' || typeof obj === 'function')));\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof length === 'number',\n    'toArray: Object needs a length property'\n  ) : invariant(typeof length === 'number'));\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    length === 0 ||\n    (length - 1) in obj,\n    'toArray: Object should have keys for indices'\n  ) : invariant(length === 0 ||\n  (length - 1) in obj));\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\nmodule.exports = toArray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/toArray.js\n ** module id = 63\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getMarkupWrap\n */\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode =\n  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\nvar shouldWrap = {\n  // Force wrapping for SVG elements because if they get created inside a <div>,\n  // they will be initialized in the wrong namespace (and will not display).\n  'circle': true,\n  'clipPath': true,\n  'defs': true,\n  'ellipse': true,\n  'g': true,\n  'line': true,\n  'linearGradient': true,\n  'path': true,\n  'polygon': true,\n  'polyline': true,\n  'radialGradient': true,\n  'rect': true,\n  'stop': true,\n  'text': true\n};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg>', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap,\n\n  'circle': svgWrap,\n  'clipPath': svgWrap,\n  'defs': svgWrap,\n  'ellipse': svgWrap,\n  'g': svgWrap,\n  'line': svgWrap,\n  'linearGradient': svgWrap,\n  'path': svgWrap,\n  'polygon': svgWrap,\n  'polyline': svgWrap,\n  'radialGradient': svgWrap,\n  'rect': svgWrap,\n  'stop': svgWrap,\n  'text': svgWrap\n};\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\n\nmodule.exports = getMarkupWrap;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getMarkupWrap.js\n ** module id = 64\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChildUpdateTypes\n */\n\n'use strict';\n\nvar keyMirror = require(\"./keyMirror\");\n\n/**\n * When a component's children are updated, a series of update configuration\n * objects are created in order to batch and serialize the required changes.\n *\n * Enumerates all the possible types of update configurations.\n *\n * @internal\n */\nvar ReactMultiChildUpdateTypes = keyMirror({\n  INSERT_MARKUP: null,\n  MOVE_EXISTING: null,\n  REMOVE_NODE: null,\n  TEXT_CONTENT: null\n});\n\nmodule.exports = ReactMultiChildUpdateTypes;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMultiChildUpdateTypes.js\n ** module id = 65\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setTextContent\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\nvar setInnerHTML = require(\"./setInnerHTML\");\n\n/**\n * Set the textContent property of a node, ensuring that whitespace is preserved\n * even in IE8. innerText is a poor substitute for textContent and, among many\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n * as it should.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function(node, text) {\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function(node, text) {\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/setTextContent.js\n ** module id = 66\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setInnerHTML\n */\n\n/* globals MSApp */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\nvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\n/**\n * Set the innerHTML property of a node, ensuring that whitespace is preserved\n * even in IE8.\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nvar setInnerHTML = function(node, html) {\n  node.innerHTML = html;\n};\n\n// Win8 apps: Allow all html to be inserted\nif (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n  setInnerHTML = function(node, html) {\n    MSApp.execUnsafeLocalFunction(function() {\n      node.innerHTML = html;\n    });\n  };\n}\n\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8: When updating a just created node with innerHTML only leading\n  // whitespace is removed. When updating an existing node with innerHTML\n  // whitespace in root TextNodes is also collapsed.\n  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\n  // Feature detection; only IE8 is known to behave improperly like this.\n  var testElement = document.createElement('div');\n  testElement.innerHTML = ' ';\n  if (testElement.innerHTML === '') {\n    setInnerHTML = function(node, html) {\n      // Magic theory: IE8 supposedly differentiates between added and updated\n      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n      // from worse whitespace behavior. Re-adding a node like this triggers\n      // the initial and more favorable whitespace behavior.\n      // TODO: What to do on a detached node?\n      if (node.parentNode) {\n        node.parentNode.replaceChild(node, node);\n      }\n\n      // We also implement a workaround for non-visible tags disappearing into\n      // thin air on IE8, this only happens if there is no visible text\n      // in-front of the non-visible tags. Piggyback on the whitespace fix\n      // and simply check if any non-visible tags appear in the source.\n      if (WHITESPACE_TEST.test(html) ||\n          html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n        // Recover leading whitespace by temporarily prepending any character.\n        // \\uFEFF has the potential advantage of being zero-width/invisible.\n        node.innerHTML = '\\uFEFF' + html;\n\n        // deleteData leaves an empty `TextNode` which offsets the index of all\n        // children. Definitely want to avoid this.\n        var textNode = node.firstChild;\n        if (textNode.data.length === 1) {\n          node.removeChild(textNode);\n        } else {\n          textNode.deleteData(0, 1);\n        }\n      } else {\n        node.innerHTML = html;\n      }\n    };\n  }\n}\n\nmodule.exports = setInnerHTML;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/setInnerHTML.js\n ** module id = 67\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMount\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactMarkupChecksum = require(\"./ReactMarkupChecksum\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactUpdateQueue = require(\"./ReactUpdateQueue\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar emptyObject = require(\"./emptyObject\");\nvar containsNode = require(\"./containsNode\");\nvar getReactRootElementInContainer = require(\"./getReactRootElementInContainer\");\nvar instantiateReactComponent = require(\"./instantiateReactComponent\");\nvar invariant = require(\"./invariant\");\nvar setInnerHTML = require(\"./setInnerHTML\");\nvar shouldUpdateReactComponent = require(\"./shouldUpdateReactComponent\");\nvar warning = require(\"./warning\");\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar nodeCache = {};\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\n\n/** Mapping from reactRootID to React component instance. */\nvar instancesByReactRootID = {};\n\n/** Mapping from reactRootID to `container` nodes. */\nvar containersByReactRootID = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  /** __DEV__-only mapping from reactRootID to root elements. */\n  var rootElementsByReactRootID = {};\n}\n\n// Used to store breadth-first search state in findComponentRoot.\nvar findComponentRootReusableArray = [];\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement} container DOM element that may contain a React component.\n * @return {?string} A \"reactRoot\" ID, if a React component is rendered.\n */\nfunction getReactRootID(container) {\n  var rootElement = getReactRootElementInContainer(container);\n  return rootElement && ReactMount.getID(rootElement);\n}\n\n/**\n * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form\n * element can return its control whose name or ID equals ATTR_NAME. All\n * DOM nodes support `getAttributeNode` but this can also get called on\n * other objects so just return '' if we're given something other than a\n * DOM node (such as window).\n *\n * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.\n * @return {string} ID of the supplied `domNode`.\n */\nfunction getID(node) {\n  var id = internalGetID(node);\n  if (id) {\n    if (nodeCache.hasOwnProperty(id)) {\n      var cached = nodeCache[id];\n      if (cached !== node) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          !isValid(cached, id),\n          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',\n          ATTR_NAME, id\n        ) : invariant(!isValid(cached, id)));\n\n        nodeCache[id] = node;\n      }\n    } else {\n      nodeCache[id] = node;\n    }\n  }\n\n  return id;\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Sets the React-specific ID of the given node.\n *\n * @param {DOMElement} node The DOM node whose ID will be set.\n * @param {string} id The value of the ID attribute.\n */\nfunction setID(node, id) {\n  var oldID = internalGetID(node);\n  if (oldID !== id) {\n    delete nodeCache[oldID];\n  }\n  node.setAttribute(ATTR_NAME, id);\n  nodeCache[id] = node;\n}\n\n/**\n * Finds the node with the supplied React-generated DOM ID.\n *\n * @param {string} id A React-generated DOM ID.\n * @return {DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNode(id) {\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * Finds the node with the supplied public React instance.\n *\n * @param {*} instance A public React instance.\n * @return {?DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNodeFromInstance(instance) {\n  var id = ReactInstanceMap.get(instance)._rootNodeID;\n  if (ReactEmptyComponent.isNullComponentID(id)) {\n    return null;\n  }\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * A node is \"valid\" if it is contained by a currently mounted container.\n *\n * This means that the node does not have to be contained by a document in\n * order to be considered valid.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @param {string} id The expected ID of the node.\n * @return {boolean} Whether the node is contained by a mounted container.\n */\nfunction isValid(node, id) {\n  if (node) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      internalGetID(node) === id,\n      'ReactMount: Unexpected modification of `%s`',\n      ATTR_NAME\n    ) : invariant(internalGetID(node) === id));\n\n    var container = ReactMount.findReactContainerForID(id);\n    if (container && containsNode(container, node)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Causes the cache to forget about one React-specific ID.\n *\n * @param {string} id The ID to forget.\n */\nfunction purgeID(id) {\n  delete nodeCache[id];\n}\n\nvar deepestNodeSoFar = null;\nfunction findDeepestCachedAncestorImpl(ancestorID) {\n  var ancestor = nodeCache[ancestorID];\n  if (ancestor && isValid(ancestor, ancestorID)) {\n    deepestNodeSoFar = ancestor;\n  } else {\n    // This node isn't populated in the cache, so presumably none of its\n    // descendants are. Break out of the loop.\n    return false;\n  }\n}\n\n/**\n * Return the deepest cached node whose ID is a prefix of `targetID`.\n */\nfunction findDeepestCachedAncestor(targetID) {\n  deepestNodeSoFar = null;\n  ReactInstanceHandles.traverseAncestors(\n    targetID,\n    findDeepestCachedAncestorImpl\n  );\n\n  var foundNode = deepestNodeSoFar;\n  deepestNodeSoFar = null;\n  return foundNode;\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(\n    componentInstance,\n    rootID,\n    container,\n    transaction,\n    shouldReuseMarkup) {\n  var markup = ReactReconciler.mountComponent(\n    componentInstance, rootID, transaction, emptyObject\n  );\n  componentInstance._isTopLevel = true;\n  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(\n    componentInstance,\n    rootID,\n    container,\n    shouldReuseMarkup) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n  transaction.perform(\n    mountComponentIntoNode,\n    null,\n    componentInstance,\n    rootID,\n    container,\n    transaction,\n    shouldReuseMarkup\n  );\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n  /** Exposed for debugging purposes **/\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function(container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function(\n      prevComponent,\n      nextElement,\n      container,\n      callback) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);\n    }\n\n    ReactMount.scrollMonitor(container, function() {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[getReactRootID(container)] =\n        getReactRootElementInContainer(container);\n    }\n\n    return prevComponent;\n  },\n\n  /**\n   * Register a component into the instance map and starts scroll value\n   * monitoring\n   * @param {ReactComponent} nextComponent component instance to render\n   * @param {DOMElement} container container to render into\n   * @return {string} reactRoot ID prefix\n   */\n  _registerComponent: function(nextComponent, container) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container && (\n        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n      ),\n      '_registerComponent(...): Target container is not a DOM element.'\n    ) : invariant(container && (\n      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n    )));\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n\n    var reactRootID = ReactMount.registerContainer(container);\n    instancesByReactRootID[reactRootID] = nextComponent;\n    return reactRootID;\n  },\n\n  /**\n   * Render a new component into the DOM.\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function(\n    nextElement,\n    container,\n    shouldReuseMarkup\n  ) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      ReactCurrentOwner.current == null,\n      '_renderNewRootComponent(): Render methods should be a pure function ' +\n      'of props and state; triggering nested component updates from ' +\n      'render is not allowed. If necessary, trigger nested updates in ' +\n      'componentDidUpdate.'\n    ) : null);\n\n    var componentInstance = instantiateReactComponent(nextElement, null);\n    var reactRootID = ReactMount._registerComponent(\n      componentInstance,\n      container\n    );\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(\n      batchedMountComponentIntoNode,\n      componentInstance,\n      reactRootID,\n      container,\n      shouldReuseMarkup\n    );\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[reactRootID] =\n        getReactRootElementInContainer(container);\n    }\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function(nextElement, container, callback) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReactElement.isValidElement(nextElement),\n      'React.render(): Invalid component element.%s',\n      (\n        typeof nextElement === 'string' ?\n          ' Instead of passing an element string, make sure to instantiate ' +\n          'it by passing it to React.createElement.' :\n        typeof nextElement === 'function' ?\n          ' Instead of passing a component class, make sure to instantiate ' +\n          'it by passing it to React.createElement.' :\n        // Check if it quacks like an element\n        nextElement != null && nextElement.props !== undefined ?\n          ' This may be caused by unintentionally loading two independent ' +\n          'copies of React.' :\n          ''\n      )\n    ) : invariant(ReactElement.isValidElement(nextElement)));\n\n    var prevComponent = instancesByReactRootID[getReactRootID(container)];\n\n    if (prevComponent) {\n      var prevElement = prevComponent._currentElement;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        return ReactMount._updateRootComponent(\n          prevComponent,\n          nextElement,\n          container,\n          callback\n        ).getPublicInstance();\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup =\n      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (ReactMount.isRenderedByReact(rootElementSibling)) {\n            (\"production\" !== process.env.NODE_ENV ? warning(\n              false,\n              'render(): Target node has markup rendered by React, but there ' +\n              'are unrelated nodes as well. This is most commonly caused by ' +\n              'white-space inserted around server-rendered markup.'\n            ) : null);\n            break;\n          }\n\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;\n\n    var component = ReactMount._renderNewRootComponent(\n      nextElement,\n      container,\n      shouldReuseMarkup\n    ).getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Constructs a component instance of `constructor` with `initialProps` and\n   * renders it into the supplied `container`.\n   *\n   * @param {function} constructor React component constructor.\n   * @param {?object} props Initial props of the component instance.\n   * @param {DOMElement} container DOM element to render into.\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  constructAndRenderComponent: function(constructor, props, container) {\n    var element = ReactElement.createElement(constructor, props);\n    return ReactMount.render(element, container);\n  },\n\n  /**\n   * Constructs a component instance of `constructor` with `initialProps` and\n   * renders it into a container node identified by supplied `id`.\n   *\n   * @param {function} componentConstructor React component constructor\n   * @param {?object} props Initial props of the component instance.\n   * @param {string} id ID of the DOM element to render into.\n   * @return {ReactComponent} Component instance rendered in the container node.\n   */\n  constructAndRenderComponentByID: function(constructor, props, id) {\n    var domNode = document.getElementById(id);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      domNode,\n      'Tried to get element with id of \"%s\" but it is not present on the page.',\n      id\n    ) : invariant(domNode));\n    return ReactMount.constructAndRenderComponent(constructor, props, domNode);\n  },\n\n  /**\n   * Registers a container node into which React components will be rendered.\n   * This also creates the \"reactRoot\" ID that will be assigned to the element\n   * rendered within.\n   *\n   * @param {DOMElement} container DOM element to register as a container.\n   * @return {string} The \"reactRoot\" ID of elements rendered within.\n   */\n  registerContainer: function(container) {\n    var reactRootID = getReactRootID(container);\n    if (reactRootID) {\n      // If one exists, make sure it is a valid \"reactRoot\" ID.\n      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);\n    }\n    if (!reactRootID) {\n      // No valid \"reactRoot\" ID found, create one.\n      reactRootID = ReactInstanceHandles.createReactRootID();\n    }\n    containersByReactRootID[reactRootID] = container;\n    return reactRootID;\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function(container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      ReactCurrentOwner.current == null,\n      'unmountComponentAtNode(): Render methods should be a pure function of ' +\n      'props and state; triggering nested component updates from render is ' +\n      'not allowed. If necessary, trigger nested updates in ' +\n      'componentDidUpdate.'\n    ) : null);\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container && (\n        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n      ),\n      'unmountComponentAtNode(...): Target container is not a DOM element.'\n    ) : invariant(container && (\n      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n    )));\n\n    var reactRootID = getReactRootID(container);\n    var component = instancesByReactRootID[reactRootID];\n    if (!component) {\n      return false;\n    }\n    ReactMount.unmountComponentFromNode(component, container);\n    delete instancesByReactRootID[reactRootID];\n    delete containersByReactRootID[reactRootID];\n    if (\"production\" !== process.env.NODE_ENV) {\n      delete rootElementsByReactRootID[reactRootID];\n    }\n    return true;\n  },\n\n  /**\n   * Unmounts a component and removes it from the DOM.\n   *\n   * @param {ReactComponent} instance React component instance.\n   * @param {DOMElement} container DOM element to unmount from.\n   * @final\n   * @internal\n   * @see {ReactMount.unmountComponentAtNode}\n   */\n  unmountComponentFromNode: function(instance, container) {\n    ReactReconciler.unmountComponent(instance);\n\n    if (container.nodeType === DOC_NODE_TYPE) {\n      container = container.documentElement;\n    }\n\n    // http://jsperf.com/emptying-a-node\n    while (container.lastChild) {\n      container.removeChild(container.lastChild);\n    }\n  },\n\n  /**\n   * Finds the container DOM element that contains React component to which the\n   * supplied DOM `id` belongs.\n   *\n   * @param {string} id The ID of an element rendered by a React component.\n   * @return {?DOMElement} DOM element that contains the `id`.\n   */\n  findReactContainerForID: function(id) {\n    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);\n    var container = containersByReactRootID[reactRootID];\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      var rootElement = rootElementsByReactRootID[reactRootID];\n      if (rootElement && rootElement.parentNode !== container) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          // Call internalGetID here because getID calls isValid which calls\n          // findReactContainerForID (this function).\n          internalGetID(rootElement) === reactRootID,\n          'ReactMount: Root element ID differed from reactRootID.'\n        ) : invariant(// Call internalGetID here because getID calls isValid which calls\n        // findReactContainerForID (this function).\n        internalGetID(rootElement) === reactRootID));\n\n        var containerChild = container.firstChild;\n        if (containerChild &&\n            reactRootID === internalGetID(containerChild)) {\n          // If the container has a new child with the same ID as the old\n          // root element, then rootElementsByReactRootID[reactRootID] is\n          // just stale and needs to be updated. The case that deserves a\n          // warning is when the container is empty.\n          rootElementsByReactRootID[reactRootID] = containerChild;\n        } else {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            'ReactMount: Root element has been removed from its original ' +\n            'container. New container:', rootElement.parentNode\n          ) : null);\n        }\n      }\n    }\n\n    return container;\n  },\n\n  /**\n   * Finds an element rendered by React with the supplied ID.\n   *\n   * @param {string} id ID of a DOM node in the React component.\n   * @return {DOMElement} Root DOM node of the React component.\n   */\n  findReactNodeByID: function(id) {\n    var reactRoot = ReactMount.findReactContainerForID(id);\n    return ReactMount.findComponentRoot(reactRoot, id);\n  },\n\n  /**\n   * True if the supplied `node` is rendered by React.\n   *\n   * @param {*} node DOM Element to check.\n   * @return {boolean} True if the DOM Element appears to be rendered by React.\n   * @internal\n   */\n  isRenderedByReact: function(node) {\n    if (node.nodeType !== 1) {\n      // Not a DOMElement, therefore not a React component\n      return false;\n    }\n    var id = ReactMount.getID(node);\n    return id ? id.charAt(0) === SEPARATOR : false;\n  },\n\n  /**\n   * Traverses up the ancestors of the supplied node to find a node that is a\n   * DOM representation of a React component.\n   *\n   * @param {*} node\n   * @return {?DOMEventTarget}\n   * @internal\n   */\n  getFirstReactDOM: function(node) {\n    var current = node;\n    while (current && current.parentNode !== current) {\n      if (ReactMount.isRenderedByReact(current)) {\n        return current;\n      }\n      current = current.parentNode;\n    }\n    return null;\n  },\n\n  /**\n   * Finds a node with the supplied `targetID` inside of the supplied\n   * `ancestorNode`.  Exploits the ID naming scheme to perform the search\n   * quickly.\n   *\n   * @param {DOMEventTarget} ancestorNode Search from this root.\n   * @pararm {string} targetID ID of the DOM representation of the component.\n   * @return {DOMEventTarget} DOM node with the supplied `targetID`.\n   * @internal\n   */\n  findComponentRoot: function(ancestorNode, targetID) {\n    var firstChildren = findComponentRootReusableArray;\n    var childIndex = 0;\n\n    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;\n\n    firstChildren[0] = deepestAncestor.firstChild;\n    firstChildren.length = 1;\n\n    while (childIndex < firstChildren.length) {\n      var child = firstChildren[childIndex++];\n      var targetChild;\n\n      while (child) {\n        var childID = ReactMount.getID(child);\n        if (childID) {\n          // Even if we find the node we're looking for, we finish looping\n          // through its siblings to ensure they're cached so that we don't have\n          // to revisit this node again. Otherwise, we make n^2 calls to getID\n          // when visiting the many children of a single node in order.\n\n          if (targetID === childID) {\n            targetChild = child;\n          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {\n            // If we find a child whose ID is an ancestor of the given ID,\n            // then we can be sure that we only want to search the subtree\n            // rooted at this child, so we can throw out the rest of the\n            // search state.\n            firstChildren.length = childIndex = 0;\n            firstChildren.push(child.firstChild);\n          }\n\n        } else {\n          // If this child had no ID, then there's a chance that it was\n          // injected automatically by the browser, as when a `<table>`\n          // element sprouts an extra `<tbody>` child as a side effect of\n          // `.innerHTML` parsing. Optimistically continue down this\n          // branch, but not before examining the other siblings.\n          firstChildren.push(child.firstChild);\n        }\n\n        child = child.nextSibling;\n      }\n\n      if (targetChild) {\n        // Emptying firstChildren/findComponentRootReusableArray is\n        // not necessary for correctness, but it helps the GC reclaim\n        // any nodes that were left at the end of the search.\n        firstChildren.length = 0;\n\n        return targetChild;\n      }\n    }\n\n    firstChildren.length = 0;\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      false,\n      'findComponentRoot(..., %s): Unable to find element. This probably ' +\n      'means the DOM was unexpectedly mutated (e.g., by the browser), ' +\n      'usually due to forgetting a <tbody> when using tables, nesting tags ' +\n      'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' +\n      'parent. ' +\n      'Try inspecting the child nodes of the element with React ID `%s`.',\n      targetID,\n      ReactMount.getID(ancestorNode)\n    ) : invariant(false));\n  },\n\n  _mountImageIntoNode: function(markup, container, shouldReuseMarkup) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container && (\n        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n      ),\n      'mountComponentIntoNode(...): Target container is not valid.'\n    ) : invariant(container && (\n      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n    )));\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(\n          ReactMarkupChecksum.CHECKSUM_ATTR_NAME\n        );\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(\n          ReactMarkupChecksum.CHECKSUM_ATTR_NAME,\n          checksum\n        );\n\n        var diffIndex = firstDifferenceIndex(markup, rootMarkup);\n        var difference = ' (client) ' +\n          markup.substring(diffIndex - 20, diffIndex + 20) +\n          '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          container.nodeType !== DOC_NODE_TYPE,\n          'You\\'re trying to render a component to the document using ' +\n          'server rendering but the checksum was invalid. This usually ' +\n          'means you rendered a different component type or props on ' +\n          'the client from the one on the server, or your render() ' +\n          'methods are impure. React cannot handle this case due to ' +\n          'cross-browser quirks by rendering at the document root. You ' +\n          'should look for environment dependent code in your components ' +\n          'and ensure the props are the same client and server side:\\n%s',\n          difference\n        ) : invariant(container.nodeType !== DOC_NODE_TYPE));\n\n        if (\"production\" !== process.env.NODE_ENV) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            'React attempted to reuse markup in a container but the ' +\n            'checksum was invalid. This generally means that you are ' +\n            'using server rendering and the markup generated on the ' +\n            'server was not what the client was expecting. React injected ' +\n            'new markup to compensate which works but you have lost many ' +\n            'of the benefits of server rendering. Instead, figure out ' +\n            'why the markup being generated is different on the client ' +\n            'or server:\\n%s',\n            difference\n          ) : null);\n        }\n      }\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container.nodeType !== DOC_NODE_TYPE,\n      'You\\'re trying to render a component to the document but ' +\n        'you didn\\'t use server rendering. We can\\'t do this ' +\n        'without using server rendering due to cross-browser quirks. ' +\n        'See React.renderToString() for server rendering.'\n    ) : invariant(container.nodeType !== DOC_NODE_TYPE));\n\n    setInnerHTML(container, markup);\n  },\n\n  /**\n   * React ID utilities.\n   */\n\n  getReactRootID: getReactRootID,\n\n  getID: getID,\n\n  setID: setID,\n\n  getNode: getNode,\n\n  getNodeFromInstance: getNodeFromInstance,\n\n  purgeID: purgeID\n};\n\nReactPerf.measureMethods(ReactMount, 'ReactMount', {\n  _renderNewRootComponent: '_renderNewRootComponent',\n  _mountImageIntoNode: '_mountImageIntoNode'\n});\n\nmodule.exports = ReactMount;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMount.js\n ** module id = 68\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserEventEmitter\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar EventPluginRegistry = require(\"./EventPluginRegistry\");\nvar ReactEventEmitterMixin = require(\"./ReactEventEmitterMixin\");\nvar ViewportMetrics = require(\"./ViewportMetrics\");\n\nvar assign = require(\"./Object.assign\");\nvar isEventSupported = require(\"./isEventSupported\");\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topBlur: 'blur',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topScroll: 'scroll',\n  topSelectionChange: 'selectionchange',\n  topTextInput: 'textInput',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function(ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(\n        ReactBrowserEventEmitter.handleTopLevel\n      );\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function(enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function() {\n    return !!(\n      (ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled())\n    );\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function(registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.\n      registrationNameDependencies[registrationName];\n\n    var topLevelTypes = EventConstants.topLevelTypes;\n    for (var i = 0, l = dependencies.length; i < l; i++) {\n      var dependency = dependencies[i];\n      if (!(\n            (isListening.hasOwnProperty(dependency) && isListening[dependency])\n          )) {\n        if (dependency === topLevelTypes.topWheel) {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'wheel',\n              mountAt\n            );\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'mousewheel',\n              mountAt\n            );\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'DOMMouseScroll',\n              mountAt\n            );\n          }\n        } else if (dependency === topLevelTypes.topScroll) {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topScroll,\n              'scroll',\n              mountAt\n            );\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topScroll,\n              'scroll',\n              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE\n            );\n          }\n        } else if (dependency === topLevelTypes.topFocus ||\n            dependency === topLevelTypes.topBlur) {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topFocus,\n              'focus',\n              mountAt\n            );\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topBlur,\n              'blur',\n              mountAt\n            );\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topFocus,\n              'focusin',\n              mountAt\n            );\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topBlur,\n              'focusout',\n              mountAt\n            );\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening[topLevelTypes.topBlur] = true;\n          isListening[topLevelTypes.topFocus] = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n            dependency,\n            topEventMapping[dependency],\n            mountAt\n          );\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n      topLevelType,\n      handlerBaseName,\n      handle\n    );\n  },\n\n  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n      topLevelType,\n      handlerBaseName,\n      handle\n    );\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function() {\n    if (!isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  },\n\n  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginHub.registrationNameModules,\n\n  putListener: EventPluginHub.putListener,\n\n  getListener: EventPluginHub.getListener,\n\n  deleteListener: EventPluginHub.deleteListener,\n\n  deleteAllListeners: EventPluginHub.deleteAllListeners\n\n});\n\nmodule.exports = ReactBrowserEventEmitter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactBrowserEventEmitter.js\n ** module id = 69\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginHub\n */\n\n'use strict';\n\nvar EventPluginRegistry = require(\"./EventPluginRegistry\");\nvar EventPluginUtils = require(\"./EventPluginUtils\");\n\nvar accumulateInto = require(\"./accumulateInto\");\nvar forEachAccumulated = require(\"./forEachAccumulated\");\nvar invariant = require(\"./invariant\");\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @private\n */\nvar executeDispatchesAndRelease = function(event) {\n  if (event) {\n    var executeDispatch = EventPluginUtils.executeDispatch;\n    // Plugins can provide custom behavior when dispatching events.\n    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);\n    if (PluginModule && PluginModule.executeDispatch) {\n      executeDispatch = PluginModule.executeDispatch;\n    }\n    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\n\n/**\n * - `InstanceHandle`: [required] Module that performs logical traversals of DOM\n *   hierarchy given ids of the logical DOM elements involved.\n */\nvar InstanceHandle = null;\n\nfunction validateInstanceHandle() {\n  var valid =\n    InstanceHandle &&\n    InstanceHandle.traverseTwoPhase &&\n    InstanceHandle.traverseEnterLeave;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    valid,\n    'InstanceHandle not injected before use!'\n  ) : invariant(valid));\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n\n    /**\n     * @param {object} InjectedMount\n     * @public\n     */\n    injectMount: EventPluginUtils.injection.injectMount,\n\n    /**\n     * @param {object} InjectedInstanceHandle\n     * @public\n     */\n    injectInstanceHandle: function(InjectedInstanceHandle) {\n      InstanceHandle = InjectedInstanceHandle;\n      if (\"production\" !== process.env.NODE_ENV) {\n        validateInstanceHandle();\n      }\n    },\n\n    getInstanceHandle: function() {\n      if (\"production\" !== process.env.NODE_ENV) {\n        validateInstanceHandle();\n      }\n      return InstanceHandle;\n    },\n\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\n  },\n\n  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginRegistry.registrationNameModules,\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.\n   *\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {?function} listener The callback to store.\n   */\n  putListener: function(id, registrationName, listener) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !listener || typeof listener === 'function',\n      'Expected %s listener to be a function, instead got type %s',\n      registrationName, typeof listener\n    ) : invariant(!listener || typeof listener === 'function'));\n\n    var bankForRegistrationName =\n      listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[id] = listener;\n  },\n\n  /**\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function(id, registrationName) {\n    var bankForRegistrationName = listenerBank[registrationName];\n    return bankForRegistrationName && bankForRegistrationName[id];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function(id, registrationName) {\n    var bankForRegistrationName = listenerBank[registrationName];\n    if (bankForRegistrationName) {\n      delete bankForRegistrationName[id];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {string} id ID of the DOM element.\n   */\n  deleteAllListeners: function(id) {\n    for (var registrationName in listenerBank) {\n      delete listenerBank[registrationName][id];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0, l = plugins.length; i < l; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(\n          topLevelType,\n          topLevelTarget,\n          topLevelTargetID,\n          nativeEvent\n        );\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function(events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function() {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !eventQueue,\n      'processEventQueue(): Additional events were enqueued while processing ' +\n      'an event queue. Support for this has not yet been implemented.'\n    ) : invariant(!eventQueue));\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function() {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function() {\n    return listenerBank;\n  }\n\n};\n\nmodule.exports = EventPluginHub;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPluginHub.js\n ** module id = 70\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginRegistry\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Injectable ordering of event plugins.\n */\nvar EventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nvar namesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering() {\n  if (!EventPluginOrder) {\n    // Wait until an `EventPluginOrder` is injected.\n    return;\n  }\n  for (var pluginName in namesToPlugins) {\n    var PluginModule = namesToPlugins[pluginName];\n    var pluginIndex = EventPluginOrder.indexOf(pluginName);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      pluginIndex > -1,\n      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +\n      'the plugin ordering, `%s`.',\n      pluginName\n    ) : invariant(pluginIndex > -1));\n    if (EventPluginRegistry.plugins[pluginIndex]) {\n      continue;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      PluginModule.extractEvents,\n      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +\n      'method, but `%s` does not.',\n      pluginName\n    ) : invariant(PluginModule.extractEvents));\n    EventPluginRegistry.plugins[pluginIndex] = PluginModule;\n    var publishedEvents = PluginModule.eventTypes;\n    for (var eventName in publishedEvents) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        publishEventForPlugin(\n          publishedEvents[eventName],\n          PluginModule,\n          eventName\n        ),\n        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',\n        eventName,\n        pluginName\n      ) : invariant(publishEventForPlugin(\n        publishedEvents[eventName],\n        PluginModule,\n        eventName\n      )));\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(dispatchConfig, PluginModule, eventName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),\n    'EventPluginHub: More than one plugin attempted to publish the same ' +\n    'event name, `%s`.',\n    eventName\n  ) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)));\n  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(\n          phasedRegistrationName,\n          PluginModule,\n          eventName\n        );\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(\n      dispatchConfig.registrationName,\n      PluginModule,\n      eventName\n    );\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events and\n * can be used with `EventPluginHub.putListener` to register listeners.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(registrationName, PluginModule, eventName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !EventPluginRegistry.registrationNameModules[registrationName],\n    'EventPluginHub: More than one plugin attempted to publish the same ' +\n    'registration name, `%s`.',\n    registrationName\n  ) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]));\n  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;\n  EventPluginRegistry.registrationNameDependencies[registrationName] =\n    PluginModule.eventTypes[eventName].dependencies;\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\nvar EventPluginRegistry = {\n\n  /**\n   * Ordered list of injected plugins.\n   */\n  plugins: [],\n\n  /**\n   * Mapping from event name to dispatch config\n   */\n  eventNameDispatchConfigs: {},\n\n  /**\n   * Mapping from registration name to plugin module\n   */\n  registrationNameModules: {},\n\n  /**\n   * Mapping from registration name to event name\n   */\n  registrationNameDependencies: {},\n\n  /**\n   * Injects an ordering of plugins (by plugin name). This allows the ordering\n   * to be decoupled from injection of the actual plugins so that ordering is\n   * always deterministic regardless of packaging, on-the-fly injection, etc.\n   *\n   * @param {array} InjectedEventPluginOrder\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginOrder}\n   */\n  injectEventPluginOrder: function(InjectedEventPluginOrder) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !EventPluginOrder,\n      'EventPluginRegistry: Cannot inject event plugin ordering more than ' +\n      'once. You are likely trying to load more than one copy of React.'\n    ) : invariant(!EventPluginOrder));\n    // Clone the ordering so it cannot be dynamically mutated.\n    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);\n    recomputePluginOrdering();\n  },\n\n  /**\n   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n   * in the ordering injected by `injectEventPluginOrder`.\n   *\n   * Plugins can be injected as part of page initialization or on-the-fly.\n   *\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginsByName}\n   */\n  injectEventPluginsByName: function(injectedNamesToPlugins) {\n    var isOrderingDirty = false;\n    for (var pluginName in injectedNamesToPlugins) {\n      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n        continue;\n      }\n      var PluginModule = injectedNamesToPlugins[pluginName];\n      if (!namesToPlugins.hasOwnProperty(pluginName) ||\n          namesToPlugins[pluginName] !== PluginModule) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          !namesToPlugins[pluginName],\n          'EventPluginRegistry: Cannot inject two different event plugins ' +\n          'using the same name, `%s`.',\n          pluginName\n        ) : invariant(!namesToPlugins[pluginName]));\n        namesToPlugins[pluginName] = PluginModule;\n        isOrderingDirty = true;\n      }\n    }\n    if (isOrderingDirty) {\n      recomputePluginOrdering();\n    }\n  },\n\n  /**\n   * Looks up the plugin for the supplied event.\n   *\n   * @param {object} event A synthetic event.\n   * @return {?object} The plugin that created the supplied event.\n   * @internal\n   */\n  getPluginModuleForEvent: function(event) {\n    var dispatchConfig = event.dispatchConfig;\n    if (dispatchConfig.registrationName) {\n      return EventPluginRegistry.registrationNameModules[\n        dispatchConfig.registrationName\n      ] || null;\n    }\n    for (var phase in dispatchConfig.phasedRegistrationNames) {\n      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {\n        continue;\n      }\n      var PluginModule = EventPluginRegistry.registrationNameModules[\n        dispatchConfig.phasedRegistrationNames[phase]\n      ];\n      if (PluginModule) {\n        return PluginModule;\n      }\n    }\n    return null;\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _resetEventPlugins: function() {\n    EventPluginOrder = null;\n    for (var pluginName in namesToPlugins) {\n      if (namesToPlugins.hasOwnProperty(pluginName)) {\n        delete namesToPlugins[pluginName];\n      }\n    }\n    EventPluginRegistry.plugins.length = 0;\n\n    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n    for (var eventName in eventNameDispatchConfigs) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        delete eventNameDispatchConfigs[eventName];\n      }\n    }\n\n    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n    for (var registrationName in registrationNameModules) {\n      if (registrationNameModules.hasOwnProperty(registrationName)) {\n        delete registrationNameModules[registrationName];\n      }\n    }\n  }\n\n};\n\nmodule.exports = EventPluginRegistry;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPluginRegistry.js\n ** module id = 71\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule accumulateInto\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n *\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    next != null,\n    'accumulateInto(...): Accumulated items must not be null or undefined.'\n  ) : invariant(next != null));\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  var currentIsArray = Array.isArray(current);\n  var nextIsArray = Array.isArray(next);\n\n  if (currentIsArray && nextIsArray) {\n    current.push.apply(current, next);\n    return current;\n  }\n\n  if (currentIsArray) {\n    current.push(next);\n    return current;\n  }\n\n  if (nextIsArray) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulateInto;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/accumulateInto.js\n ** module id = 72\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule forEachAccumulated\n */\n\n'use strict';\n\n/**\n * @param {array} an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n */\nvar forEachAccumulated = function(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n};\n\nmodule.exports = forEachAccumulated;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/forEachAccumulated.js\n ** module id = 73\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventEmitterMixin\n */\n\n'use strict';\n\nvar EventPluginHub = require(\"./EventPluginHub\");\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue();\n}\n\nvar ReactEventEmitterMixin = {\n\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {object} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native environment event.\n   */\n  handleTopLevel: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    var events = EventPluginHub.extractEvents(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent\n    );\n\n    runEventQueueInBatch(events);\n  }\n};\n\nmodule.exports = ReactEventEmitterMixin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactEventEmitterMixin.js\n ** module id = 74\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ViewportMetrics\n */\n\n'use strict';\n\nvar ViewportMetrics = {\n\n  currentScrollLeft: 0,\n\n  currentScrollTop: 0,\n\n  refreshScrollValues: function(scrollPosition) {\n    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n    ViewportMetrics.currentScrollTop = scrollPosition.y;\n  }\n\n};\n\nmodule.exports = ViewportMetrics;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ViewportMetrics.js\n ** module id = 75\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isEventSupported\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature =\n    document.implementation &&\n    document.implementation.hasFeature &&\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM ||\n      capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in document;\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/isEventSupported.js\n ** module id = 76\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEmptyComponent\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\n\nvar invariant = require(\"./invariant\");\n\nvar component;\n// This registry keeps track of the React IDs of the components that rendered to\n// `null` (in reality a placeholder such as `noscript`)\nvar nullComponentIDsRegistry = {};\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponent: function(emptyComponent) {\n    component = ReactElement.createFactory(emptyComponent);\n  }\n};\n\nvar ReactEmptyComponentType = function() {};\nReactEmptyComponentType.prototype.componentDidMount = function() {\n  var internalInstance = ReactInstanceMap.get(this);\n  // TODO: Make sure we run these methods in the correct order, we shouldn't\n  // need this check. We're going to assume if we're here it means we ran\n  // componentWillUnmount already so there is no internal instance (it gets\n  // removed as part of the unmounting process).\n  if (!internalInstance) {\n    return;\n  }\n  registerNullComponentID(internalInstance._rootNodeID);\n};\nReactEmptyComponentType.prototype.componentWillUnmount = function() {\n  var internalInstance = ReactInstanceMap.get(this);\n  // TODO: Get rid of this check. See TODO in componentDidMount.\n  if (!internalInstance) {\n    return;\n  }\n  deregisterNullComponentID(internalInstance._rootNodeID);\n};\nReactEmptyComponentType.prototype.render = function() {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    component,\n    'Trying to return null from a render, but no null placeholder component ' +\n    'was injected.'\n  ) : invariant(component));\n  return component();\n};\n\nvar emptyElement = ReactElement.createElement(ReactEmptyComponentType);\n\n/**\n * Mark the component as having rendered to null.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction registerNullComponentID(id) {\n  nullComponentIDsRegistry[id] = true;\n}\n\n/**\n * Unmark the component as having rendered to null: it renders to something now.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction deregisterNullComponentID(id) {\n  delete nullComponentIDsRegistry[id];\n}\n\n/**\n * @param {string} id Component's `_rootNodeID`.\n * @return {boolean} True if the component is rendered to null.\n */\nfunction isNullComponentID(id) {\n  return !!nullComponentIDsRegistry[id];\n}\n\nvar ReactEmptyComponent = {\n  emptyElement: emptyElement,\n  injection: ReactEmptyComponentInjection,\n  isNullComponentID: isNullComponentID\n};\n\nmodule.exports = ReactEmptyComponent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactEmptyComponent.js\n ** module id = 77\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMarkupChecksum\n */\n\n'use strict';\n\nvar adler32 = require(\"./adler32\");\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function(markup) {\n    var checksum = adler32(markup);\n    return markup.replace(\n      '>',\n      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\">'\n    );\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function(markup, element) {\n    var existingChecksum = element.getAttribute(\n      ReactMarkupChecksum.CHECKSUM_ATTR_NAME\n    );\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMarkupChecksum.js\n ** module id = 78\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule adler32\n */\n\n/* jslint bitwise:true */\n\n'use strict';\n\nvar MOD = 65521;\n\n// This is a clean-room implementation of adler32 designed for detecting\n// if markup is not what we expect it to be. It does not need to be\n// cryptographically strong, only reasonably good at detecting if markup\n// generated on the server is different than that on the client.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  for (var i = 0; i < data.length; i++) {\n    a = (a + data.charCodeAt(i)) % MOD;\n    b = (b + a) % MOD;\n  }\n  return a | (b << 16);\n}\n\nmodule.exports = adler32;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/adler32.js\n ** module id = 79\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule containsNode\n * @typechecks\n */\n\nvar isTextNode = require(\"./isTextNode\");\n\n/*jslint bitwise:true */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n *\n * @param {?DOMNode} outerNode Outer DOM node.\n * @param {?DOMNode} innerNode Inner DOM node.\n * @return {boolean} True if `outerNode` contains or is `innerNode`.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if (outerNode.contains) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/containsNode.js\n ** module id = 80\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextNode\n * @typechecks\n */\n\nvar isNode = require(\"./isNode\");\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/isTextNode.js\n ** module id = 81\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isNode\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  return !!(object && (\n    ((typeof Node === 'function' ? object instanceof Node : typeof object === 'object' &&\n    typeof object.nodeType === 'number' &&\n    typeof object.nodeName === 'string'))\n  ));\n}\n\nmodule.exports = isNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/isNode.js\n ** module id = 82\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getReactRootElementInContainer\n */\n\n'use strict';\n\nvar DOC_NODE_TYPE = 9;\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n *                                           a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nmodule.exports = getReactRootElementInContainer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getReactRootElementInContainer.js\n ** module id = 83\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule instantiateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\n// To avoid a cyclic dependency, we create the final class in this module\nvar ReactCompositeComponentWrapper = function() { };\nassign(\n  ReactCompositeComponentWrapper.prototype,\n  ReactCompositeComponent.Mixin,\n  {\n    _instantiateReactComponent: instantiateReactComponent\n  }\n);\n\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\nfunction isInternalComponentType(type) {\n  return (\n    typeof type === 'function' &&\n    typeof type.prototype !== 'undefined' &&\n    typeof type.prototype.mountComponent === 'function' &&\n    typeof type.prototype.receiveComponent === 'function'\n  );\n}\n\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @param {*} parentCompositeType The composite type that resolved this.\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(node, parentCompositeType) {\n  var instance;\n\n  if (node === null || node === false) {\n    node = ReactEmptyComponent.emptyElement;\n  }\n\n  if (typeof node === 'object') {\n    var element = node;\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        element && (typeof element.type === 'function' ||\n                    typeof element.type === 'string'),\n        'Only functions or strings can be mounted as React components.'\n      ) : null);\n    }\n\n    // Special case string values\n    if (parentCompositeType === element.type &&\n        typeof element.type === 'string') {\n      // Avoid recursion if the wrapper renders itself.\n      instance = ReactNativeComponent.createInternalComponent(element);\n      // All native components are currently wrapped in a composite so we're\n      // safe to assume that this is what we should instantiate.\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // represenations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n    } else {\n      instance = new ReactCompositeComponentWrapper();\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactNativeComponent.createInstanceForText(node);\n  } else {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      false,\n      'Encountered invalid React node of type %s',\n      typeof node\n    ) : invariant(false));\n  }\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      typeof instance.construct === 'function' &&\n      typeof instance.mountComponent === 'function' &&\n      typeof instance.receiveComponent === 'function' &&\n      typeof instance.unmountComponent === 'function',\n      'Only React Components can be mounted.'\n    ) : null);\n  }\n\n  // Sets up the instance. This can probably just move into the constructor now.\n  instance.construct(node);\n\n  // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    instance._isOwnerNecessary = false;\n    instance._warnedAboutRefsInRender = false;\n  }\n\n  // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\nmodule.exports = instantiateReactComponent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/instantiateReactComponent.js\n ** module id = 84\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCompositeComponent\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = require(\"./ReactComponentEnvironment\");\nvar ReactContext = require(\"./ReactContext\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactLifeCycle = require(\"./ReactLifeCycle\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyObject = require(\"./emptyObject\");\nvar invariant = require(\"./invariant\");\nvar shouldUpdateReactComponent = require(\"./shouldUpdateReactComponent\");\nvar warning = require(\"./warning\");\n\nfunction getDeclarationErrorAddendum(component) {\n  var owner = component._currentElement._owner || null;\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponentMixin = {\n\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function(element) {\n    this._currentElement = element;\n    this._rootNodeID = null;\n    this._instance = null;\n\n    // See ReactUpdateQueue\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedComponent = null;\n\n    this._context = null;\n    this._mountOrder = 0;\n    this._isTopLevel = false;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function(rootID, transaction, context) {\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._rootNodeID = rootID;\n\n    var publicProps = this._processProps(this._currentElement.props);\n    var publicContext = this._processContext(this._currentElement._context);\n\n    var Component = ReactNativeComponent.getComponentClassForElement(\n      this._currentElement\n    );\n\n    // Initialize the public class\n    var inst = new Component(publicProps, publicContext);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        inst.render != null,\n        '%s(...): No `render` method found on the returned component ' +\n        'instance: you may have forgotten to define `render` in your ' +\n        'component or you may have accidentally tried to render an element ' +\n        'whose type is a function that isn\\'t a React component.',\n        Component.displayName || Component.name || 'Component'\n      ) : null);\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      this._warnIfContextsDiffer(this._currentElement._context, context);\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.getInitialState ||\n        inst.getInitialState.isReactClassApproved,\n        'getInitialState was defined on %s, a plain JavaScript class. ' +\n        'This is only supported for classes created using React.createClass. ' +\n        'Did you mean to define a state property instead?',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.getDefaultProps ||\n        inst.getDefaultProps.isReactClassApproved,\n        'getDefaultProps was defined on %s, a plain JavaScript class. ' +\n        'This is only supported for classes created using React.createClass. ' +\n        'Use a static property to define defaultProps instead.',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.propTypes,\n        'propTypes was defined as an instance property on %s. Use a static ' +\n        'property to define propTypes instead.',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.contextTypes,\n        'contextTypes was defined as an instance property on %s. Use a ' +\n        'static property to define contextTypes instead.',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        typeof inst.componentShouldUpdate !== 'function',\n        '%s has a method called ' +\n        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n        'The name is phrased as a question because the function is ' +\n        'expected to return a value.',\n        (this.getName() || 'A component')\n      ) : null);\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof initialState === 'object' && !Array.isArray(initialState),\n      '%s.state: must be set to an object or null',\n      this.getName() || 'ReactCompositeComponent'\n    ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    var childContext;\n    var renderedElement;\n\n    var previouslyMounting = ReactLifeCycle.currentlyMountingInstance;\n    ReactLifeCycle.currentlyMountingInstance = this;\n    try {\n      if (inst.componentWillMount) {\n        inst.componentWillMount();\n        // When mounting, calls to `setState` by `componentWillMount` will set\n        // `this._pendingStateQueue` without triggering a re-render.\n        if (this._pendingStateQueue) {\n          inst.state = this._processPendingState(inst.props, inst.context);\n        }\n      }\n\n      childContext = this._getValidatedChildContext(context);\n      renderedElement = this._renderValidatedComponent(childContext);\n    } finally {\n      ReactLifeCycle.currentlyMountingInstance = previouslyMounting;\n    }\n\n    this._renderedComponent = this._instantiateReactComponent(\n      renderedElement,\n      this._currentElement.type // The wrapping type\n    );\n\n    var markup = ReactReconciler.mountComponent(\n      this._renderedComponent,\n      rootID,\n      transaction,\n      this._mergeChildContext(context, childContext)\n    );\n    if (inst.componentDidMount) {\n      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n    }\n\n    return markup;\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function() {\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount) {\n      var previouslyUnmounting = ReactLifeCycle.currentlyUnmountingInstance;\n      ReactLifeCycle.currentlyUnmountingInstance = this;\n      try {\n        inst.componentWillUnmount();\n      } finally {\n        ReactLifeCycle.currentlyUnmountingInstance = previouslyUnmounting;\n      }\n    }\n\n    ReactReconciler.unmountComponent(this._renderedComponent);\n    this._renderedComponent = null;\n\n    // Reset pending fields\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Schedule a partial update to the props. Only used for internal testing.\n   *\n   * @param {object} partialProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @internal\n   */\n  _setPropsInternal: function(partialProps, callback) {\n    // This is a deoptimized path. We optimize for always having an element.\n    // This creates an extra internal element.\n    var element = this._pendingElement || this._currentElement;\n    this._pendingElement = ReactElement.cloneAndReplaceProps(\n      element,\n      assign({}, element.props, partialProps)\n    );\n    ReactUpdates.enqueueUpdate(this, callback);\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function(context) {\n    var maskedContext = null;\n    // This really should be getting the component class for the element,\n    // but we know that we're not going to need it for built-ins.\n    if (typeof this._currentElement.type === 'string') {\n      return emptyObject;\n    }\n    var contextTypes = this._currentElement.type.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function(context) {\n    var maskedContext = this._maskContext(context);\n    if (\"production\" !== process.env.NODE_ENV) {\n      var Component = ReactNativeComponent.getComponentClassForElement(\n        this._currentElement\n      );\n      if (Component.contextTypes) {\n        this._checkPropTypes(\n          Component.contextTypes,\n          maskedContext,\n          ReactPropTypeLocations.context\n        );\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _getValidatedChildContext: function(currentContext) {\n    var inst = this._instance;\n    var childContext = inst.getChildContext && inst.getChildContext();\n    if (childContext) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        typeof inst.constructor.childContextTypes === 'object',\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n        'use getChildContext().',\n        this.getName() || 'ReactCompositeComponent'\n      ) : invariant(typeof inst.constructor.childContextTypes === 'object'));\n      if (\"production\" !== process.env.NODE_ENV) {\n        this._checkPropTypes(\n          inst.constructor.childContextTypes,\n          childContext,\n          ReactPropTypeLocations.childContext\n        );\n      }\n      for (var name in childContext) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          name in inst.constructor.childContextTypes,\n          '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.',\n          this.getName() || 'ReactCompositeComponent',\n          name\n        ) : invariant(name in inst.constructor.childContextTypes));\n      }\n      return childContext;\n    }\n    return null;\n  },\n\n  _mergeChildContext: function(currentContext, childContext) {\n    if (childContext) {\n      return assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Processes props by setting default values for unspecified props and\n   * asserting that the props are valid. Does not mutate its argument; returns\n   * a new props object with defaults merged in.\n   *\n   * @param {object} newProps\n   * @return {object}\n   * @private\n   */\n  _processProps: function(newProps) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      var Component = ReactNativeComponent.getComponentClassForElement(\n        this._currentElement\n      );\n      if (Component.propTypes) {\n        this._checkPropTypes(\n          Component.propTypes,\n          newProps,\n          ReactPropTypeLocations.prop\n        );\n      }\n    }\n    return newProps;\n  },\n\n  /**\n   * Assert that the props are valid\n   *\n   * @param {object} propTypes Map of prop name to a ReactPropType\n   * @param {object} props\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkPropTypes: function(propTypes, props, location) {\n    // TODO: Stop validating prop types here and only use the element\n    // validation.\n    var componentName = this.getName();\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error;\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          (\"production\" !== process.env.NODE_ENV ? invariant(\n            typeof propTypes[propName] === 'function',\n            '%s: %s type `%s` is invalid; it must be a function, usually ' +\n            'from React.PropTypes.',\n            componentName || 'React class',\n            ReactPropTypeLocationNames[location],\n            propName\n          ) : invariant(typeof propTypes[propName] === 'function'));\n          error = propTypes[propName](props, propName, componentName, location);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error instanceof Error) {\n          // We may want to extend this logic for similar errors in\n          // React.render calls, so I'm abstracting it away into\n          // a function to minimize refactoring in the future\n          var addendum = getDeclarationErrorAddendum(this);\n\n          if (location === ReactPropTypeLocations.prop) {\n            // Preface gives us something to blacklist in warning module\n            (\"production\" !== process.env.NODE_ENV ? warning(\n              false,\n              'Failed Composite propType: %s%s',\n              error.message,\n              addendum\n            ) : null);\n          } else {\n            (\"production\" !== process.env.NODE_ENV ? warning(\n              false,\n              'Failed Context Types: %s%s',\n              error.message,\n              addendum\n            ) : null);\n          }\n        }\n      }\n    }\n  },\n\n  receiveComponent: function(nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(\n      transaction,\n      prevElement,\n      nextElement,\n      prevContext,\n      nextContext\n    );\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function(transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(\n        this,\n        this._pendingElement || this._currentElement,\n        transaction,\n        this._context\n      );\n    }\n\n    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        ReactElementValidator.checkAndWarnForMutatedProps(\n          this._currentElement\n        );\n      }\n\n      this.updateComponent(\n        transaction,\n        this._currentElement,\n        this._currentElement,\n        this._context,\n        this._context\n      );\n    }\n  },\n\n  /**\n   * Compare two contexts, warning if they are different\n   * TODO: Remove this check when owner-context is removed\n   */\n   _warnIfContextsDiffer: function(ownerBasedContext, parentBasedContext) {\n    ownerBasedContext = this._maskContext(ownerBasedContext);\n    parentBasedContext = this._maskContext(parentBasedContext);\n    var parentKeys = Object.keys(parentBasedContext).sort();\n    var displayName = this.getName() || 'ReactCompositeComponent';\n    for (var i = 0; i < parentKeys.length; i++) {\n      var key = parentKeys[i];\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        ownerBasedContext[key] === parentBasedContext[key],\n        'owner-based and parent-based contexts differ '  +\n        '(values: `%s` vs `%s`) for key (%s) while mounting %s ' +\n        '(see: http://fb.me/react-context-by-parent)',\n        ownerBasedContext[key],\n        parentBasedContext[key],\n        key,\n        displayName\n      ) : null);\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function(\n    transaction,\n    prevParentElement,\n    nextParentElement,\n    prevUnmaskedContext,\n    nextUnmaskedContext\n  ) {\n    var inst = this._instance;\n\n    var nextContext = inst.context;\n    var nextProps = inst.props;\n\n    // Distinguish between a props update versus a simple state update\n    if (prevParentElement !== nextParentElement) {\n      nextContext = this._processContext(nextParentElement._context);\n      nextProps = this._processProps(nextParentElement.props);\n\n      if (\"production\" !== process.env.NODE_ENV) {\n        if (nextUnmaskedContext != null) {\n          this._warnIfContextsDiffer(\n            nextParentElement._context,\n            nextUnmaskedContext\n          );\n        }\n      }\n\n      // An update here will schedule an update but immediately set\n      // _pendingStateQueue which will ensure that any state updates gets\n      // immediately reconciled instead of waiting for the next batch.\n\n      if (inst.componentWillReceiveProps) {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n\n    var shouldUpdate =\n      this._pendingForceUpdate ||\n      !inst.shouldComponentUpdate ||\n      inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        typeof shouldUpdate !== 'undefined',\n        '%s.shouldComponentUpdate(): Returned undefined instead of a ' +\n        'boolean value. Make sure to return true or false.',\n        this.getName() || 'ReactCompositeComponent'\n      ) : null);\n    }\n\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(\n        nextParentElement,\n        nextProps,\n        nextState,\n        nextContext,\n        transaction,\n        nextUnmaskedContext\n      );\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function(props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      assign(\n        nextState,\n        typeof partial === 'function' ?\n          partial.call(inst, nextState, props, context) :\n          partial\n      );\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function(\n    nextElement,\n    nextProps,\n    nextState,\n    nextContext,\n    transaction,\n    unmaskedContext\n  ) {\n    var inst = this._instance;\n\n    var prevProps = inst.props;\n    var prevState = inst.state;\n    var prevContext = inst.context;\n\n    if (inst.componentWillUpdate) {\n      inst.componentWillUpdate(nextProps, nextState, nextContext);\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (inst.componentDidUpdate) {\n      transaction.getReactMountReady().enqueue(\n        inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),\n        inst\n      );\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function(transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var childContext = this._getValidatedChildContext();\n    var nextRenderedElement = this._renderValidatedComponent(childContext);\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(\n        prevComponentInstance,\n        nextRenderedElement,\n        transaction,\n        this._mergeChildContext(context, childContext)\n      );\n    } else {\n      // These two IDs are actually the same! But nothing should rely on that.\n      var thisID = this._rootNodeID;\n      var prevComponentID = prevComponentInstance._rootNodeID;\n      ReactReconciler.unmountComponent(prevComponentInstance);\n\n      this._renderedComponent = this._instantiateReactComponent(\n        nextRenderedElement,\n        this._currentElement.type\n      );\n      var nextMarkup = ReactReconciler.mountComponent(\n        this._renderedComponent,\n        thisID,\n        transaction,\n        this._mergeChildContext(context, childContext)\n      );\n      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  _replaceNodeWithMarkupByID: function(prevComponentID, nextMarkup) {\n    ReactComponentEnvironment.replaceNodeWithMarkupByID(\n      prevComponentID,\n      nextMarkup\n    );\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function() {\n    var inst = this._instance;\n    var renderedComponent = inst.render();\n    if (\"production\" !== process.env.NODE_ENV) {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (typeof renderedComponent === 'undefined' &&\n          inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedComponent = null;\n      }\n    }\n\n    return renderedComponent;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function(childContext) {\n    var renderedComponent;\n    var previousContext = ReactContext.current;\n    ReactContext.current = this._mergeChildContext(\n      this._currentElement._context,\n      childContext\n    );\n    ReactCurrentOwner.current = this;\n    try {\n      renderedComponent =\n        this._renderValidatedComponentWithoutOwnerOrContext();\n    } finally {\n      ReactContext.current = previousContext;\n      ReactCurrentOwner.current = null;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      // TODO: An `isValidNode` function would probably be more appropriate\n      renderedComponent === null || renderedComponent === false ||\n      ReactElement.isValidElement(renderedComponent),\n      '%s.render(): A valid ReactComponent must be returned. You may have ' +\n        'returned undefined, an array or some other invalid object.',\n      this.getName() || 'ReactCompositeComponent'\n    ) : invariant(// TODO: An `isValidNode` function would probably be more appropriate\n    renderedComponent === null || renderedComponent === false ||\n    ReactElement.isValidElement(renderedComponent)));\n    return renderedComponent;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function(ref, component) {\n    var inst = this.getPublicInstance();\n    var refs = inst.refs === emptyObject ? (inst.refs = {}) : inst.refs;\n    refs[ref] = component.getPublicInstance();\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function(ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function() {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return (\n      type.displayName || (constructor && constructor.displayName) ||\n      type.name || (constructor && constructor.name) ||\n      null\n    );\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by React.render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function() {\n    return this._instance;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n\n};\n\nReactPerf.measureMethods(\n  ReactCompositeComponentMixin,\n  'ReactCompositeComponent',\n  {\n    mountComponent: 'mountComponent',\n    updateComponent: 'updateComponent',\n    _renderValidatedComponent: '_renderValidatedComponent'\n  }\n);\n\nvar ReactCompositeComponent = {\n\n  Mixin: ReactCompositeComponentMixin\n\n};\n\nmodule.exports = ReactCompositeComponent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactCompositeComponent.js\n ** module id = 85\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentEnvironment\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n\n  /**\n   * Optionally injectable environment dependent cleanup hook. (server vs.\n   * browser etc). Example: A browser system caches DOM nodes based on component\n   * ID and must remove that cache entry when this instance is unmounted.\n   */\n  unmountIDFromEnvironment: null,\n\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkupByID: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function(environment) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !injected,\n        'ReactCompositeComponent: injectEnvironment() can only be called once.'\n      ) : invariant(!injected));\n      ReactComponentEnvironment.unmountIDFromEnvironment =\n        environment.unmountIDFromEnvironment;\n      ReactComponentEnvironment.replaceNodeWithMarkupByID =\n        environment.replaceNodeWithMarkupByID;\n      ReactComponentEnvironment.processChildrenUpdates =\n        environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n\n};\n\nmodule.exports = ReactComponentEnvironment;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactComponentEnvironment.js\n ** module id = 86\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar warning = require(\"./warning\");\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  if (prevElement != null && nextElement != null) {\n    var prevType = typeof prevElement;\n    var nextType = typeof nextElement;\n    if (prevType === 'string' || prevType === 'number') {\n      return (nextType === 'string' || nextType === 'number');\n    } else {\n      if (nextType === 'object' &&\n          prevElement.type === nextElement.type &&\n          prevElement.key === nextElement.key) {\n        var ownersMatch = prevElement._owner === nextElement._owner;\n        var prevName = null;\n        var nextName = null;\n        var nextDisplayName = null;\n        if (\"production\" !== process.env.NODE_ENV) {\n          if (!ownersMatch) {\n            if (prevElement._owner != null &&\n                prevElement._owner.getPublicInstance() != null &&\n                prevElement._owner.getPublicInstance().constructor != null) {\n              prevName =\n                prevElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement._owner != null &&\n                nextElement._owner.getPublicInstance() != null &&\n                nextElement._owner.getPublicInstance().constructor != null) {\n              nextName =\n                nextElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement.type != null &&\n                nextElement.type.displayName != null) {\n              nextDisplayName = nextElement.type.displayName;\n            }\n            if (nextElement.type != null && typeof nextElement.type === 'string') {\n              nextDisplayName = nextElement.type;\n            }\n            if (typeof nextElement.type !== 'string' ||\n                nextElement.type === 'input' ||\n                nextElement.type === 'textarea') {\n              if ((prevElement._owner != null &&\n                  prevElement._owner._isOwnerNecessary === false) ||\n                  (nextElement._owner != null &&\n                  nextElement._owner._isOwnerNecessary === false)) {\n                if (prevElement._owner != null) {\n                  prevElement._owner._isOwnerNecessary = true;\n                }\n                if (nextElement._owner != null) {\n                  nextElement._owner._isOwnerNecessary = true;\n                }\n                (\"production\" !== process.env.NODE_ENV ? warning(\n                  false,\n                  '<%s /> is being rendered by both %s and %s using the same ' +\n                  'key (%s) in the same place. Currently, this means that ' +\n                  'they don\\'t preserve state. This behavior should be very ' +\n                  'rare so we\\'re considering deprecating it. Please contact ' +\n                  'the React team and explain your use case so that we can ' +\n                  'take that into consideration.',\n                  nextDisplayName || 'Unknown Component',\n                  prevName || '[Unknown]',\n                  nextName || '[Unknown]',\n                  prevElement.key\n                ) : null);\n              }\n            }\n          }\n        }\n        return ownersMatch;\n      }\n    }\n  }\n  return false;\n}\n\nmodule.exports = shouldUpdateReactComponent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/shouldUpdateReactComponent.js\n ** module id = 87\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMComponent\n * @typechecks static-only\n */\n\n/* global hasOwnProperty:true */\n\n'use strict';\n\nvar CSSPropertyOperations = require(\"./CSSPropertyOperations\");\nvar DOMProperty = require(\"./DOMProperty\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactComponentBrowserEnvironment =\n  require(\"./ReactComponentBrowserEnvironment\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactMultiChild = require(\"./ReactMultiChild\");\nvar ReactPerf = require(\"./ReactPerf\");\n\nvar assign = require(\"./Object.assign\");\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\nvar invariant = require(\"./invariant\");\nvar isEventSupported = require(\"./isEventSupported\");\nvar keyOf = require(\"./keyOf\");\nvar warning = require(\"./warning\");\n\nvar deleteListener = ReactBrowserEventEmitter.deleteListener;\nvar listenTo = ReactBrowserEventEmitter.listenTo;\nvar registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;\n\n// For quickly matching children type, to test if can be treated as content.\nvar CONTENT_TYPES = {'string': true, 'number': true};\n\nvar STYLE = keyOf({style: null});\n\nvar ELEMENT_NODE_TYPE = 1;\n\n/**\n * Optionally injectable operations for mutating the DOM\n */\nvar BackendIDOperations = null;\n\n/**\n * @param {?object} props\n */\nfunction assertValidProps(props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (props.dangerouslySetInnerHTML != null) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      props.children == null,\n      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'\n    ) : invariant(props.children == null));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof props.dangerouslySetInnerHTML === 'object' &&\n      '__html' in props.dangerouslySetInnerHTML,\n      '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +\n      'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' +\n      'for more information.'\n    ) : invariant(typeof props.dangerouslySetInnerHTML === 'object' &&\n    '__html' in props.dangerouslySetInnerHTML));\n  }\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      props.innerHTML == null,\n      'Directly setting property `innerHTML` is not permitted. ' +\n      'For more information, lookup documentation on `dangerouslySetInnerHTML`.'\n    ) : null);\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      !props.contentEditable || props.children == null,\n      'A component is `contentEditable` and contains `children` managed by ' +\n      'React. It is now your responsibility to guarantee that none of ' +\n      'those nodes are unexpectedly modified or duplicated. This is ' +\n      'probably not intentional.'\n    ) : null);\n  }\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    props.style == null || typeof props.style === 'object',\n    'The `style` prop expects a mapping from style properties to values, ' +\n    'not a string. For example, style={{marginRight: spacing + \\'em\\'}} when ' +\n    'using JSX.'\n  ) : invariant(props.style == null || typeof props.style === 'object'));\n}\n\nfunction putListener(id, registrationName, listener, transaction) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    // IE8 has no API for event capturing and the `onScroll` event doesn't\n    // bubble.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      registrationName !== 'onScroll' || isEventSupported('scroll', true),\n      'This browser doesn\\'t support the `onScroll` event'\n    ) : null);\n  }\n  var container = ReactMount.findReactContainerForID(id);\n  if (container) {\n    var doc = container.nodeType === ELEMENT_NODE_TYPE ?\n      container.ownerDocument :\n      container;\n    listenTo(registrationName, doc);\n  }\n  transaction.getPutListenerQueue().enqueuePutListener(\n    id,\n    registrationName,\n    listener\n  );\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special cased tags.\n\nvar omittedCloseTags = {\n  'area': true,\n  'base': true,\n  'br': true,\n  'col': true,\n  'embed': true,\n  'hr': true,\n  'img': true,\n  'input': true,\n  'keygen': true,\n  'link': true,\n  'meta': true,\n  'param': true,\n  'source': true,\n  'track': true,\n  'wbr': true\n  // NOTE: menuitem's close tag should be omitted, but that causes problems.\n};\n\n// We accept any tag to be rendered but since this gets injected into abitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nvar validatedTagCache = {};\nvar hasOwnProperty = {}.hasOwnProperty;\n\nfunction validateDangerousTag(tag) {\n  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(VALID_TAG_REGEX.test(tag), 'Invalid tag: %s', tag) : invariant(VALID_TAG_REGEX.test(tag)));\n    validatedTagCache[tag] = true;\n  }\n}\n\n/**\n * Creates a new React class that is idempotent and capable of containing other\n * React components. It accepts event listeners and DOM properties that are\n * valid according to `DOMProperty`.\n *\n *  - Event listeners: `onClick`, `onMouseDown`, etc.\n *  - DOM properties: `className`, `name`, `title`, etc.\n *\n * The `style` property functions differently from the DOM API. It accepts an\n * object mapping of style properties to values.\n *\n * @constructor ReactDOMComponent\n * @extends ReactMultiChild\n */\nfunction ReactDOMComponent(tag) {\n  validateDangerousTag(tag);\n  this._tag = tag;\n  this._renderedChildren = null;\n  this._previousStyleCopy = null;\n  this._rootNodeID = null;\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent';\n\nReactDOMComponent.Mixin = {\n\n  construct: function(element) {\n    this._currentElement = element;\n  },\n\n  /**\n   * Generates root tag markup then recurses. This method has side effects and\n   * is not idempotent.\n   *\n   * @internal\n   * @param {string} rootID The root DOM ID for this node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} The computed markup.\n   */\n  mountComponent: function(rootID, transaction, context) {\n    this._rootNodeID = rootID;\n    assertValidProps(this._currentElement.props);\n    var closeTag = omittedCloseTags[this._tag] ? '' : '</' + this._tag + '>';\n    return (\n      this._createOpenTagMarkupAndPutListeners(transaction) +\n      this._createContentMarkup(transaction, context) +\n      closeTag\n    );\n  },\n\n  /**\n   * Creates markup for the open tag and all attributes.\n   *\n   * This method has side effects because events get registered.\n   *\n   * Iterating over object properties is faster than iterating over arrays.\n   * @see http://jsperf.com/obj-vs-arr-iteration\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup of opening tag.\n   */\n  _createOpenTagMarkupAndPutListeners: function(transaction) {\n    var props = this._currentElement.props;\n    var ret = '<' + this._tag;\n\n    for (var propKey in props) {\n      if (!props.hasOwnProperty(propKey)) {\n        continue;\n      }\n      var propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (registrationNameModules.hasOwnProperty(propKey)) {\n        putListener(this._rootNodeID, propKey, propValue, transaction);\n      } else {\n        if (propKey === STYLE) {\n          if (propValue) {\n            propValue = this._previousStyleCopy = assign({}, props.style);\n          }\n          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);\n        }\n        var markup =\n          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n        if (markup) {\n          ret += ' ' + markup;\n        }\n      }\n    }\n\n    // For static pages, no need to put React ID and checksum. Saves lots of\n    // bytes.\n    if (transaction.renderToStaticMarkup) {\n      return ret + '>';\n    }\n\n    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);\n    return ret + ' ' + markupForID + '>';\n  },\n\n  /**\n   * Creates markup for the content between the tags.\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   * @return {string} Content markup.\n   */\n  _createContentMarkup: function(transaction, context) {\n    var prefix = '';\n    if (this._tag === 'listing' ||\n        this._tag === 'pre' ||\n        this._tag === 'textarea') {\n      // Add an initial newline because browsers ignore the first newline in\n      // a <listing>, <pre>, or <textarea> as an \"authoring convenience\" -- see\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody.\n      prefix = '\\n';\n    }\n\n    var props = this._currentElement.props;\n\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        return prefix + innerHTML.__html;\n      }\n    } else {\n      var contentToUse =\n        CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        return prefix + escapeTextContentForBrowser(contentToUse);\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(\n          childrenToUse,\n          transaction,\n          context\n        );\n        return prefix + mountImages.join('');\n      }\n    }\n    return prefix;\n  },\n\n  receiveComponent: function(nextElement, transaction, context) {\n    var prevElement = this._currentElement;\n    this._currentElement = nextElement;\n    this.updateComponent(transaction, prevElement, nextElement, context);\n  },\n\n  /**\n   * Updates a native DOM component after it has already been allocated and\n   * attached to the DOM. Reconciles the root DOM node, then recurses.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevElement\n   * @param {ReactElement} nextElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function(transaction, prevElement, nextElement, context) {\n    assertValidProps(this._currentElement.props);\n    this._updateDOMProperties(prevElement.props, transaction);\n    this._updateDOMChildren(prevElement.props, transaction, context);\n  },\n\n  /**\n   * Reconciles the properties by detecting differences in property values and\n   * updating the DOM as necessary. This function is probably the single most\n   * critical path for performance optimization.\n   *\n   * TODO: Benchmark whether checking for changed values in memory actually\n   *       improves performance (especially statically positioned elements).\n   * TODO: Benchmark the effects of putting this at the top since 99% of props\n   *       do not change for a given reconciliation.\n   * TODO: Benchmark areas that can be improved with caching.\n   *\n   * @private\n   * @param {object} lastProps\n   * @param {ReactReconcileTransaction} transaction\n   */\n  _updateDOMProperties: function(lastProps, transaction) {\n    var nextProps = this._currentElement.props;\n    var propKey;\n    var styleName;\n    var styleUpdates;\n    for (propKey in lastProps) {\n      if (nextProps.hasOwnProperty(propKey) ||\n         !lastProps.hasOwnProperty(propKey)) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        var lastStyle = this._previousStyleCopy;\n        for (styleName in lastStyle) {\n          if (lastStyle.hasOwnProperty(styleName)) {\n            styleUpdates = styleUpdates || {};\n            styleUpdates[styleName] = '';\n          }\n        }\n        this._previousStyleCopy = null;\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        deleteListener(this._rootNodeID, propKey);\n      } else if (\n          DOMProperty.isStandardName[propKey] ||\n          DOMProperty.isCustomAttribute(propKey)) {\n        BackendIDOperations.deletePropertyByID(\n          this._rootNodeID,\n          propKey\n        );\n      }\n    }\n    for (propKey in nextProps) {\n      var nextProp = nextProps[propKey];\n      var lastProp = propKey === STYLE ?\n        this._previousStyleCopy :\n        lastProps[propKey];\n      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        if (nextProp) {\n          nextProp = this._previousStyleCopy = assign({}, nextProp);\n        } else {\n          this._previousStyleCopy = null;\n        }\n        if (lastProp) {\n          // Unset styles on `lastProp` but not on `nextProp`.\n          for (styleName in lastProp) {\n            if (lastProp.hasOwnProperty(styleName) &&\n                (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `lastProp`.\n          for (styleName in nextProp) {\n            if (nextProp.hasOwnProperty(styleName) &&\n                lastProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n          styleUpdates = nextProp;\n        }\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        putListener(this._rootNodeID, propKey, nextProp, transaction);\n      } else if (\n          DOMProperty.isStandardName[propKey] ||\n          DOMProperty.isCustomAttribute(propKey)) {\n        BackendIDOperations.updatePropertyByID(\n          this._rootNodeID,\n          propKey,\n          nextProp\n        );\n      }\n    }\n    if (styleUpdates) {\n      BackendIDOperations.updateStylesByID(\n        this._rootNodeID,\n        styleUpdates\n      );\n    }\n  },\n\n  /**\n   * Reconciles the children with the various properties that affect the\n   * children content.\n   *\n   * @param {object} lastProps\n   * @param {ReactReconcileTransaction} transaction\n   */\n  _updateDOMChildren: function(lastProps, transaction, context) {\n    var nextProps = this._currentElement.props;\n\n    var lastContent =\n      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n    var nextContent =\n      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\n    var lastHtml =\n      lastProps.dangerouslySetInnerHTML &&\n      lastProps.dangerouslySetInnerHTML.__html;\n    var nextHtml =\n      nextProps.dangerouslySetInnerHTML &&\n      nextProps.dangerouslySetInnerHTML.__html;\n\n    // Note the use of `!=` which checks for null or undefined.\n    var lastChildren = lastContent != null ? null : lastProps.children;\n    var nextChildren = nextContent != null ? null : nextProps.children;\n\n    // If we're switching from children to content/html or vice versa, remove\n    // the old content\n    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n    if (lastChildren != null && nextChildren == null) {\n      this.updateChildren(null, transaction, context);\n    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n      this.updateTextContent('');\n    }\n\n    if (nextContent != null) {\n      if (lastContent !== nextContent) {\n        this.updateTextContent('' + nextContent);\n      }\n    } else if (nextHtml != null) {\n      if (lastHtml !== nextHtml) {\n        BackendIDOperations.updateInnerHTMLByID(\n          this._rootNodeID,\n          nextHtml\n        );\n      }\n    } else if (nextChildren != null) {\n      this.updateChildren(nextChildren, transaction, context);\n    }\n  },\n\n  /**\n   * Destroys all event registrations for this instance. Does not remove from\n   * the DOM. That must be done by the parent.\n   *\n   * @internal\n   */\n  unmountComponent: function() {\n    this.unmountChildren();\n    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n    this._rootNodeID = null;\n  }\n\n};\n\nReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {\n  mountComponent: 'mountComponent',\n  updateComponent: 'updateComponent'\n});\n\nassign(\n  ReactDOMComponent.prototype,\n  ReactDOMComponent.Mixin,\n  ReactMultiChild.Mixin\n);\n\nReactDOMComponent.injection = {\n  injectIDOperations: function(IDOperations) {\n    ReactDOMComponent.BackendIDOperations = BackendIDOperations = IDOperations;\n  }\n};\n\nmodule.exports = ReactDOMComponent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMComponent.js\n ** module id = 88\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChild\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = require(\"./ReactComponentEnvironment\");\nvar ReactMultiChildUpdateTypes = require(\"./ReactMultiChildUpdateTypes\");\n\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactChildReconciler = require(\"./ReactChildReconciler\");\n\n/**\n * Updating children of a component may trigger recursive updates. The depth is\n * used to batch recursive updates to render markup more efficiently.\n *\n * @type {number}\n * @private\n */\nvar updateDepth = 0;\n\n/**\n * Queue of update configuration objects.\n *\n * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.\n *\n * @type {array<object>}\n * @private\n */\nvar updateQueue = [];\n\n/**\n * Queue of markup to be rendered.\n *\n * @type {array<string>}\n * @private\n */\nvar markupQueue = [];\n\n/**\n * Enqueues markup to be rendered and inserted at a supplied index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} markup Markup that renders into an element.\n * @param {number} toIndex Destination index.\n * @private\n */\nfunction enqueueMarkup(parentID, markup, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,\n    markupIndex: markupQueue.push(markup) - 1,\n    textContent: null,\n    fromIndex: null,\n    toIndex: toIndex\n  });\n}\n\n/**\n * Enqueues moving an existing element to another index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {number} fromIndex Source index of the existing element.\n * @param {number} toIndex Destination index of the element.\n * @private\n */\nfunction enqueueMove(parentID, fromIndex, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,\n    markupIndex: null,\n    textContent: null,\n    fromIndex: fromIndex,\n    toIndex: toIndex\n  });\n}\n\n/**\n * Enqueues removing an element at an index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {number} fromIndex Index of the element to remove.\n * @private\n */\nfunction enqueueRemove(parentID, fromIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.REMOVE_NODE,\n    markupIndex: null,\n    textContent: null,\n    fromIndex: fromIndex,\n    toIndex: null\n  });\n}\n\n/**\n * Enqueues setting the text content.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} textContent Text content to set.\n * @private\n */\nfunction enqueueTextContent(parentID, textContent) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,\n    markupIndex: null,\n    textContent: textContent,\n    fromIndex: null,\n    toIndex: null\n  });\n}\n\n/**\n * Processes any enqueued updates.\n *\n * @private\n */\nfunction processQueue() {\n  if (updateQueue.length) {\n    ReactComponentEnvironment.processChildrenUpdates(\n      updateQueue,\n      markupQueue\n    );\n    clearQueue();\n  }\n}\n\n/**\n * Clears any enqueued updates.\n *\n * @private\n */\nfunction clearQueue() {\n  updateQueue.length = 0;\n  markupQueue.length = 0;\n}\n\n/**\n * ReactMultiChild are capable of reconciling multiple children.\n *\n * @class ReactMultiChild\n * @internal\n */\nvar ReactMultiChild = {\n\n  /**\n   * Provides common functionality for components that must reconcile multiple\n   * children. This is used by `ReactDOMComponent` to mount, update, and\n   * unmount child components.\n   *\n   * @lends {ReactMultiChild.prototype}\n   */\n  Mixin: {\n\n    /**\n     * Generates a \"mount image\" for each of the supplied children. In the case\n     * of `ReactDOMComponent`, a mount image is a string of markup.\n     *\n     * @param {?object} nestedChildren Nested child maps.\n     * @return {array} An array of mounted representations.\n     * @internal\n     */\n    mountChildren: function(nestedChildren, transaction, context) {\n      var children = ReactChildReconciler.instantiateChildren(\n        nestedChildren, transaction, context\n      );\n      this._renderedChildren = children;\n      var mountImages = [];\n      var index = 0;\n      for (var name in children) {\n        if (children.hasOwnProperty(name)) {\n          var child = children[name];\n          // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n          var rootID = this._rootNodeID + name;\n          var mountImage = ReactReconciler.mountComponent(\n            child,\n            rootID,\n            transaction,\n            context\n          );\n          child._mountIndex = index;\n          mountImages.push(mountImage);\n          index++;\n        }\n      }\n      return mountImages;\n    },\n\n    /**\n     * Replaces any rendered children with a text content string.\n     *\n     * @param {string} nextContent String of content.\n     * @internal\n     */\n    updateTextContent: function(nextContent) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        var prevChildren = this._renderedChildren;\n        // Remove any rendered children.\n        ReactChildReconciler.unmountChildren(prevChildren);\n        // TODO: The setTextContent operation should be enough\n        for (var name in prevChildren) {\n          if (prevChildren.hasOwnProperty(name)) {\n            this._unmountChildByName(prevChildren[name], name);\n          }\n        }\n        // Set new text content.\n        this.setTextContent(nextContent);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n      }\n    },\n\n    /**\n     * Updates the rendered children with new children.\n     *\n     * @param {?object} nextNestedChildren Nested child maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     */\n    updateChildren: function(nextNestedChildren, transaction, context) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        this._updateChildren(nextNestedChildren, transaction, context);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n\n      }\n    },\n\n    /**\n     * Improve performance by isolating this hot code path from the try/catch\n     * block in `updateChildren`.\n     *\n     * @param {?object} nextNestedChildren Nested child maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @final\n     * @protected\n     */\n    _updateChildren: function(nextNestedChildren, transaction, context) {\n      var prevChildren = this._renderedChildren;\n      var nextChildren = ReactChildReconciler.updateChildren(\n        prevChildren, nextNestedChildren, transaction, context\n      );\n      this._renderedChildren = nextChildren;\n      if (!nextChildren && !prevChildren) {\n        return;\n      }\n      var name;\n      // `nextIndex` will increment for each child in `nextChildren`, but\n      // `lastIndex` will be the last index visited in `prevChildren`.\n      var lastIndex = 0;\n      var nextIndex = 0;\n      for (name in nextChildren) {\n        if (!nextChildren.hasOwnProperty(name)) {\n          continue;\n        }\n        var prevChild = prevChildren && prevChildren[name];\n        var nextChild = nextChildren[name];\n        if (prevChild === nextChild) {\n          this.moveChild(prevChild, nextIndex, lastIndex);\n          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n          prevChild._mountIndex = nextIndex;\n        } else {\n          if (prevChild) {\n            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n            this._unmountChildByName(prevChild, name);\n          }\n          // The child must be instantiated before it's mounted.\n          this._mountChildByNameAtIndex(\n            nextChild, name, nextIndex, transaction, context\n          );\n        }\n        nextIndex++;\n      }\n      // Remove children that are no longer present.\n      for (name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name) &&\n            !(nextChildren && nextChildren.hasOwnProperty(name))) {\n          this._unmountChildByName(prevChildren[name], name);\n        }\n      }\n    },\n\n    /**\n     * Unmounts all rendered children. This should be used to clean up children\n     * when this component is unmounted.\n     *\n     * @internal\n     */\n    unmountChildren: function() {\n      var renderedChildren = this._renderedChildren;\n      ReactChildReconciler.unmountChildren(renderedChildren);\n      this._renderedChildren = null;\n    },\n\n    /**\n     * Moves a child component to the supplied index.\n     *\n     * @param {ReactComponent} child Component to move.\n     * @param {number} toIndex Destination index of the element.\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\n     * @protected\n     */\n    moveChild: function(child, toIndex, lastIndex) {\n      // If the index of `child` is less than `lastIndex`, then it needs to\n      // be moved. Otherwise, we do not need to move it because a child will be\n      // inserted or moved before `child`.\n      if (child._mountIndex < lastIndex) {\n        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);\n      }\n    },\n\n    /**\n     * Creates a child component.\n     *\n     * @param {ReactComponent} child Component to create.\n     * @param {string} mountImage Markup to insert.\n     * @protected\n     */\n    createChild: function(child, mountImage) {\n      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);\n    },\n\n    /**\n     * Removes a child component.\n     *\n     * @param {ReactComponent} child Child to remove.\n     * @protected\n     */\n    removeChild: function(child) {\n      enqueueRemove(this._rootNodeID, child._mountIndex);\n    },\n\n    /**\n     * Sets this text content string.\n     *\n     * @param {string} textContent Text content to set.\n     * @protected\n     */\n    setTextContent: function(textContent) {\n      enqueueTextContent(this._rootNodeID, textContent);\n    },\n\n    /**\n     * Mounts a child with the supplied name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to mount.\n     * @param {string} name Name of the child.\n     * @param {number} index Index at which to insert the child.\n     * @param {ReactReconcileTransaction} transaction\n     * @private\n     */\n    _mountChildByNameAtIndex: function(\n      child,\n      name,\n      index,\n      transaction,\n      context) {\n      // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n      var rootID = this._rootNodeID + name;\n      var mountImage = ReactReconciler.mountComponent(\n        child,\n        rootID,\n        transaction,\n        context\n      );\n      child._mountIndex = index;\n      this.createChild(child, mountImage);\n    },\n\n    /**\n     * Unmounts a rendered child by name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to unmount.\n     * @param {string} name Name of the child in `this._renderedChildren`.\n     * @private\n     */\n    _unmountChildByName: function(child, name) {\n      this.removeChild(child);\n      child._mountIndex = null;\n    }\n\n  }\n\n};\n\nmodule.exports = ReactMultiChild;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMultiChild.js\n ** module id = 89\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildReconciler\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactReconciler = require(\"./ReactReconciler\");\n\nvar flattenChildren = require(\"./flattenChildren\");\nvar instantiateReactComponent = require(\"./instantiateReactComponent\");\nvar shouldUpdateReactComponent = require(\"./shouldUpdateReactComponent\");\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function(nestedChildNodes, transaction, context) {\n    var children = flattenChildren(nestedChildNodes);\n    for (var name in children) {\n      if (children.hasOwnProperty(name)) {\n        var child = children[name];\n        // The rendered children must be turned into instances as they're\n        // mounted.\n        var childInstance = instantiateReactComponent(child, null);\n        children[name] = childInstance;\n      }\n    }\n    return children;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextNestedChildNodes Nested child maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function(\n    prevChildren,\n    nextNestedChildNodes,\n    transaction,\n    context) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    var nextChildren = flattenChildren(nextNestedChildNodes);\n    if (!nextChildren && !prevChildren) {\n      return null;\n    }\n    var name;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      var prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(\n          prevChild, nextElement, transaction, context\n        );\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          ReactReconciler.unmountComponent(prevChild, name);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(\n          nextElement,\n          null\n        );\n        nextChildren[name] = nextChildInstance;\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) &&\n          !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        ReactReconciler.unmountComponent(prevChildren[name]);\n      }\n    }\n    return nextChildren;\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function(renderedChildren) {\n    for (var name in renderedChildren) {\n      var renderedChild = renderedChildren[name];\n      ReactReconciler.unmountComponent(renderedChild);\n    }\n  }\n\n};\n\nmodule.exports = ReactChildReconciler;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactChildReconciler.js\n ** module id = 90\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule flattenChildren\n */\n\n'use strict';\n\nvar traverseAllChildren = require(\"./traverseAllChildren\");\nvar warning = require(\"./warning\");\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name) {\n  // We found a component instance.\n  var result = traverseContext;\n  var keyUnique = !result.hasOwnProperty(name);\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      keyUnique,\n      'flattenChildren(...): Encountered two children with the same key, ' +\n      '`%s`. Child keys must be unique; when two children share a key, only ' +\n      'the first child will be used.',\n      name\n    ) : null);\n  }\n  if (keyUnique && child != null) {\n    result[name] = child;\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n  traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  return result;\n}\n\nmodule.exports = flattenChildren;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/flattenChildren.js\n ** module id = 91\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultInjection\n */\n\n'use strict';\n\nvar BeforeInputEventPlugin = require(\"./BeforeInputEventPlugin\");\nvar ChangeEventPlugin = require(\"./ChangeEventPlugin\");\nvar ClientReactRootIndex = require(\"./ClientReactRootIndex\");\nvar DefaultEventPluginOrder = require(\"./DefaultEventPluginOrder\");\nvar EnterLeaveEventPlugin = require(\"./EnterLeaveEventPlugin\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar HTMLDOMPropertyConfig = require(\"./HTMLDOMPropertyConfig\");\nvar MobileSafariClickEventPlugin = require(\"./MobileSafariClickEventPlugin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactComponentBrowserEnvironment =\n  require(\"./ReactComponentBrowserEnvironment\");\nvar ReactDefaultBatchingStrategy = require(\"./ReactDefaultBatchingStrategy\");\nvar ReactDOMComponent = require(\"./ReactDOMComponent\");\nvar ReactDOMButton = require(\"./ReactDOMButton\");\nvar ReactDOMForm = require(\"./ReactDOMForm\");\nvar ReactDOMImg = require(\"./ReactDOMImg\");\nvar ReactDOMIDOperations = require(\"./ReactDOMIDOperations\");\nvar ReactDOMIframe = require(\"./ReactDOMIframe\");\nvar ReactDOMInput = require(\"./ReactDOMInput\");\nvar ReactDOMOption = require(\"./ReactDOMOption\");\nvar ReactDOMSelect = require(\"./ReactDOMSelect\");\nvar ReactDOMTextarea = require(\"./ReactDOMTextarea\");\nvar ReactDOMTextComponent = require(\"./ReactDOMTextComponent\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactEventListener = require(\"./ReactEventListener\");\nvar ReactInjection = require(\"./ReactInjection\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactReconcileTransaction = require(\"./ReactReconcileTransaction\");\nvar SelectEventPlugin = require(\"./SelectEventPlugin\");\nvar ServerReactRootIndex = require(\"./ServerReactRootIndex\");\nvar SimpleEventPlugin = require(\"./SimpleEventPlugin\");\nvar SVGDOMPropertyConfig = require(\"./SVGDOMPropertyConfig\");\n\nvar createFullPageComponent = require(\"./createFullPageComponent\");\n\nfunction autoGenerateWrapperClass(type) {\n  return ReactClass.createClass({\n    tagName: type.toUpperCase(),\n    render: function() {\n      return new ReactElement(\n        type,\n        null,\n        null,\n        null,\n        null,\n        this.props\n      );\n    }\n  });\n}\n\nfunction inject() {\n  ReactInjection.EventEmitter.injectReactEventListener(\n    ReactEventListener\n  );\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);\n  ReactInjection.EventPluginHub.injectMount(ReactMount);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.NativeComponent.injectGenericComponentClass(\n    ReactDOMComponent\n  );\n\n  ReactInjection.NativeComponent.injectTextComponentClass(\n    ReactDOMTextComponent\n  );\n\n  ReactInjection.NativeComponent.injectAutoWrapper(\n    autoGenerateWrapperClass\n  );\n\n  // This needs to happen before createFullPageComponent() otherwise the mixin\n  // won't be included.\n  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);\n\n  ReactInjection.NativeComponent.injectComponentClasses({\n    'button': ReactDOMButton,\n    'form': ReactDOMForm,\n    'iframe': ReactDOMIframe,\n    'img': ReactDOMImg,\n    'input': ReactDOMInput,\n    'option': ReactDOMOption,\n    'select': ReactDOMSelect,\n    'textarea': ReactDOMTextarea,\n\n    'html': createFullPageComponent('html'),\n    'head': createFullPageComponent('head'),\n    'body': createFullPageComponent('body')\n  });\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');\n\n  ReactInjection.Updates.injectReconcileTransaction(\n    ReactReconcileTransaction\n  );\n  ReactInjection.Updates.injectBatchingStrategy(\n    ReactDefaultBatchingStrategy\n  );\n\n  ReactInjection.RootIndex.injectCreateReactRootIndex(\n    ExecutionEnvironment.canUseDOM ?\n      ClientReactRootIndex.createReactRootIndex :\n      ServerReactRootIndex.createReactRootIndex\n  );\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n  ReactInjection.DOMComponent.injectIDOperations(ReactDOMIDOperations);\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';\n    if ((/[?&]react_perf\\b/).test(url)) {\n      var ReactDefaultPerf = require(\"./ReactDefaultPerf\");\n      ReactDefaultPerf.start();\n    }\n  }\n}\n\nmodule.exports = {\n  inject: inject\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDefaultInjection.js\n ** module id = 92\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015 Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BeforeInputEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar FallbackCompositionState = require(\"./FallbackCompositionState\");\nvar SyntheticCompositionEvent = require(\"./SyntheticCompositionEvent\");\nvar SyntheticInputEvent = require(\"./SyntheticInputEvent\");\n\nvar keyOf = require(\"./keyOf\");\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nvar START_KEYCODE = 229;\n\nvar canUseCompositionEvent = (\n  ExecutionEnvironment.canUseDOM &&\n  'CompositionEvent' in window\n);\n\nvar documentMode = null;\nif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nvar canUseTextInputEvent = (\n  ExecutionEnvironment.canUseDOM &&\n  'TextEvent' in window &&\n  !documentMode &&\n  !isPresto()\n);\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nvar useFallbackCompositionData = (\n  ExecutionEnvironment.canUseDOM &&\n  (\n    (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11)\n  )\n);\n\n/**\n * Opera <= 12 includes TextEvent in window, but does not fire\n * text input events. Rely on keypress instead.\n */\nfunction isPresto() {\n  var opera = window.opera;\n  return (\n    typeof opera === 'object' &&\n    typeof opera.version === 'function' &&\n    parseInt(opera.version(), 10) <= 12\n  );\n}\n\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\n// Events and their corresponding property names.\nvar eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onBeforeInput: null}),\n      captured: keyOf({onBeforeInputCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topCompositionEnd,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topTextInput,\n      topLevelTypes.topPaste\n    ]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCompositionEnd: null}),\n      captured: keyOf({onCompositionEndCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topCompositionEnd,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topMouseDown\n    ]\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCompositionStart: null}),\n      captured: keyOf({onCompositionStartCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topCompositionStart,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topMouseDown\n    ]\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCompositionUpdate: null}),\n      captured: keyOf({onCompositionUpdateCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topCompositionUpdate,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topMouseDown\n    ]\n  }\n};\n\n// Track whether we've ever handled a keypress on the space key.\nvar hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (\n    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n    // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n    !(nativeEvent.ctrlKey && nativeEvent.altKey)\n  );\n}\n\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionStart:\n      return eventTypes.compositionStart;\n    case topLevelTypes.topCompositionEnd:\n      return eventTypes.compositionEnd;\n    case topLevelTypes.topCompositionUpdate:\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return (\n    topLevelType === topLevelTypes.topKeyDown &&\n    nativeEvent.keyCode === START_KEYCODE\n  );\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topKeyUp:\n      // Command keys insert or clear IME input.\n      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);\n    case topLevelTypes.topKeyDown:\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return (nativeEvent.keyCode !== START_KEYCODE);\n    case topLevelTypes.topKeyPress:\n    case topLevelTypes.topMouseDown:\n    case topLevelTypes.topBlur:\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n// Track the current IME composition fallback object, if any.\nvar currentComposition = null;\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\n * @param {object} nativeEvent Native browser event.\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(\n  topLevelType,\n  topLevelTarget,\n  topLevelTargetID,\n  nativeEvent\n) {\n  var eventType;\n  var fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!currentComposition) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!currentComposition && eventType === eventTypes.compositionStart) {\n      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (currentComposition) {\n        fallbackData = currentComposition.getData();\n      }\n    }\n  }\n\n  var event = SyntheticCompositionEvent.getPooled(\n    eventType,\n    topLevelTargetID,\n    nativeEvent\n  );\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    var customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionEnd:\n      return getDataFromCustomEvent(nativeEvent);\n    case topLevelTypes.topKeyPress:\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case topLevelTypes.topTextInput:\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to blacklist it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  if (currentComposition) {\n    if (\n      topLevelType === topLevelTypes.topCompositionEnd ||\n      isFallbackCompositionEnd(topLevelType, nativeEvent)\n    ) {\n      var chars = currentComposition.getData();\n      FallbackCompositionState.release(currentComposition);\n      currentComposition = null;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case topLevelTypes.topPaste:\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case topLevelTypes.topKeyPress:\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n        return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case topLevelTypes.topCompositionEnd:\n      return useFallbackCompositionData ? null : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\n * @param {object} nativeEvent Native browser event.\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(\n  topLevelType,\n  topLevelTarget,\n  topLevelTargetID,\n  nativeEvent\n) {\n  var chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  var event = SyntheticInputEvent.getPooled(\n    eventTypes.beforeInput,\n    topLevelTargetID,\n    nativeEvent\n  );\n\n  event.data = chars;\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nvar BeforeInputEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID,\n    nativeEvent\n  ) {\n    return [\n      extractCompositionEvent(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID,\n        nativeEvent\n      ),\n      extractBeforeInputEvent(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID,\n        nativeEvent\n      )\n    ];\n  }\n};\n\nmodule.exports = BeforeInputEventPlugin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/BeforeInputEventPlugin.js\n ** module id = 93\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPropagators\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginHub = require(\"./EventPluginHub\");\n\nvar accumulateInto = require(\"./accumulateInto\");\nvar forEachAccumulated = require(\"./forEachAccumulated\");\n\nvar PropagationPhases = EventConstants.PropagationPhases;\nvar getListener = EventPluginHub.getListener;\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(id, event, propagationPhase) {\n  var registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(id, registrationName);\n}\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(domID, upwards, event) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (!domID) {\n      throw new Error('Dispatching id must not be null');\n    }\n  }\n  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;\n  var listener = listenerAtPhase(domID, event, phase);\n  if (listener) {\n    event._dispatchListeners =\n      accumulateInto(event._dispatchListeners, listener);\n    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We can not perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(\n      event.dispatchMarker,\n      accumulateDirectionalDispatches,\n      event\n    );\n  }\n}\n\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(id, ignoredDirection, event) {\n  if (event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(id, registrationName);\n    if (listener) {\n      event._dispatchListeners =\n        accumulateInto(event._dispatchListeners, listener);\n      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event.dispatchMarker, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nfunction accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {\n  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(\n    fromID,\n    toID,\n    accumulateDispatches,\n    leave,\n    enter\n  );\n}\n\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing event a\n * single one.\n *\n * @constructor EventPropagators\n */\nvar EventPropagators = {\n  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n  accumulateDirectDispatches: accumulateDirectDispatches,\n  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n};\n\nmodule.exports = EventPropagators;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPropagators.js\n ** module id = 94\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FallbackCompositionState\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar assign = require(\"./Object.assign\");\nvar getTextContentAccessor = require(\"./getTextContentAccessor\");\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\nassign(FallbackCompositionState.prototype, {\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function() {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function() {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/FallbackCompositionState.js\n ** module id = 95\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getTextContentAccessor\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar contentKey = null;\n\n/**\n * Gets the key used to access text content on a DOM node.\n *\n * @return {?string} Key used to access text content.\n * @internal\n */\nfunction getTextContentAccessor() {\n  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n    // Prefer textContent to innerText because many browsers support both but\n    // SVG <text> elements don't support innerText even when <div> does.\n    contentKey = 'textContent' in document.documentElement ?\n      'textContent' :\n      'innerText';\n  }\n  return contentKey;\n}\n\nmodule.exports = getTextContentAccessor;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getTextContentAccessor.js\n ** module id = 96\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticCompositionEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nvar CompositionEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticCompositionEvent(\n  dispatchConfig,\n  dispatchMarker,\n  nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(\n  SyntheticCompositionEvent,\n  CompositionEventInterface\n);\n\nmodule.exports = SyntheticCompositionEvent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticCompositionEvent.js\n ** module id = 97\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\nvar getEventTarget = require(\"./getEventTarget\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: getEventTarget,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n */\nfunction SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  this.dispatchConfig = dispatchConfig;\n  this.dispatchMarker = dispatchMarker;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      this[propName] = nativeEvent[propName];\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ?\n    nativeEvent.defaultPrevented :\n    nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n}\n\nassign(SyntheticEvent.prototype, {\n\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function() {\n    var event = this.nativeEvent;\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else {\n      event.cancelBubble = true;\n    }\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      this[propName] = null;\n    }\n    this.dispatchConfig = null;\n    this.dispatchMarker = null;\n    this.nativeEvent = null;\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function(Class, Interface) {\n  var Super = this;\n\n  var prototype = Object.create(Super.prototype);\n  assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticEvent.js\n ** module id = 98\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventTarget\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventTarget.js\n ** module id = 99\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticInputEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nvar InputEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticInputEvent(\n  dispatchConfig,\n  dispatchMarker,\n  nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(\n  SyntheticInputEvent,\n  InputEventInterface\n);\n\nmodule.exports = SyntheticInputEvent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticInputEvent.js\n ** module id = 100\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ChangeEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar ReactUpdates = require(\"./ReactUpdates\");\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\nvar isEventSupported = require(\"./isEventSupported\");\nvar isTextInputElement = require(\"./isTextInputElement\");\nvar keyOf = require(\"./keyOf\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onChange: null}),\n      captured: keyOf({onChangeCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topChange,\n      topLevelTypes.topClick,\n      topLevelTypes.topFocus,\n      topLevelTypes.topInput,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topSelectionChange\n    ]\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementID = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  return (\n    elem.nodeName === 'SELECT' ||\n    (elem.nodeName === 'INPUT' && elem.type === 'file')\n  );\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (\n    (!('documentMode' in document) || document.documentMode > 8)\n  );\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(\n    eventTypes.change,\n    activeElementID,\n    nativeEvent\n  );\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue();\n}\n\nfunction startWatchingForChangeEventIE8(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementID = null;\n}\n\nfunction getTargetIDForChangeEvent(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topChange) {\n    return topLevelTargetID;\n  }\n}\nfunction handleEventsForChangeEventIE8(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events\n  isInputEventSupported = isEventSupported('input') && (\n    (!('documentMode' in document) || document.documentMode > 9)\n  );\n}\n\n/**\n * (For old IE.) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp =  {\n  get: function() {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function(val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For old IE.) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(\n    target.constructor.prototype,\n    'value'\n  );\n\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n}\n\n/**\n * (For old IE.) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n\n  activeElement = null;\n  activeElementID = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For old IE.) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetIDForInputEvent(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topInput) {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return topLevelTargetID;\n  }\n}\n\n// For IE8 and IE9.\nfunction handleEventsForInputEventIE(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetIDForInputEventIE(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topSelectionChange ||\n      topLevelType === topLevelTypes.topKeyUp ||\n      topLevelType === topLevelTypes.topKeyDown) {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementID;\n    }\n  }\n}\n\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return (\n    elem.nodeName === 'INPUT' &&\n    (elem.type === 'checkbox' || elem.type === 'radio')\n  );\n}\n\nfunction getTargetIDForClickEvent(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topClick) {\n    return topLevelTargetID;\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n\n    var getTargetIDFunc, handleEventFunc;\n    if (shouldUseChangeEvent(topLevelTarget)) {\n      if (doesChangeEventBubble) {\n        getTargetIDFunc = getTargetIDForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(topLevelTarget)) {\n      if (isInputEventSupported) {\n        getTargetIDFunc = getTargetIDForInputEvent;\n      } else {\n        getTargetIDFunc = getTargetIDForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(topLevelTarget)) {\n      getTargetIDFunc = getTargetIDForClickEvent;\n    }\n\n    if (getTargetIDFunc) {\n      var targetID = getTargetIDFunc(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID\n      );\n      if (targetID) {\n        var event = SyntheticEvent.getPooled(\n          eventTypes.change,\n          targetID,\n          nativeEvent\n        );\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID\n      );\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ChangeEventPlugin.js\n ** module id = 101\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextInputElement\n */\n\n'use strict';\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\nvar supportedInputTypes = {\n  'color': true,\n  'date': true,\n  'datetime': true,\n  'datetime-local': true,\n  'email': true,\n  'month': true,\n  'number': true,\n  'password': true,\n  'range': true,\n  'search': true,\n  'tel': true,\n  'text': true,\n  'time': true,\n  'url': true,\n  'week': true\n};\n\nfunction isTextInputElement(elem) {\n  return elem && (\n    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type] || elem.nodeName === 'TEXTAREA')\n  );\n}\n\nmodule.exports = isTextInputElement;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/isTextInputElement.js\n ** module id = 102\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ClientReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\nvar nextReactRootIndex = 0;\n\nvar ClientReactRootIndex = {\n  createReactRootIndex: function() {\n    return nextReactRootIndex++;\n  }\n};\n\nmodule.exports = ClientReactRootIndex;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ClientReactRootIndex.js\n ** module id = 103\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DefaultEventPluginOrder\n */\n\n'use strict';\n\nvar keyOf = require(\"./keyOf\");\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\nvar DefaultEventPluginOrder = [\n  keyOf({ResponderEventPlugin: null}),\n  keyOf({SimpleEventPlugin: null}),\n  keyOf({TapEventPlugin: null}),\n  keyOf({EnterLeaveEventPlugin: null}),\n  keyOf({ChangeEventPlugin: null}),\n  keyOf({SelectEventPlugin: null}),\n  keyOf({BeforeInputEventPlugin: null}),\n  keyOf({AnalyticsEventPlugin: null}),\n  keyOf({MobileSafariClickEventPlugin: null})\n];\n\nmodule.exports = DefaultEventPluginOrder;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DefaultEventPluginOrder.js\n ** module id = 104\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EnterLeaveEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\n\nvar ReactMount = require(\"./ReactMount\");\nvar keyOf = require(\"./keyOf\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\nvar getFirstReactDOM = ReactMount.getFirstReactDOM;\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: keyOf({onMouseEnter: null}),\n    dependencies: [\n      topLevelTypes.topMouseOut,\n      topLevelTypes.topMouseOver\n    ]\n  },\n  mouseLeave: {\n    registrationName: keyOf({onMouseLeave: null}),\n    dependencies: [\n      topLevelTypes.topMouseOut,\n      topLevelTypes.topMouseOver\n    ]\n  }\n};\n\nvar extractedEvents = [null, null];\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    if (topLevelType === topLevelTypes.topMouseOver &&\n        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== topLevelTypes.topMouseOut &&\n        topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (topLevelTarget.window === topLevelTarget) {\n      // `topLevelTarget` is probably a window object.\n      win = topLevelTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = topLevelTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from, to;\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = topLevelTarget;\n      to =\n        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||\n        win;\n    } else {\n      from = win;\n      to = topLevelTarget;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromID = from ? ReactMount.getID(from) : '';\n    var toID = to ? ReactMount.getID(to) : '';\n\n    var leave = SyntheticMouseEvent.getPooled(\n      eventTypes.mouseLeave,\n      fromID,\n      nativeEvent\n    );\n    leave.type = 'mouseleave';\n    leave.target = from;\n    leave.relatedTarget = to;\n\n    var enter = SyntheticMouseEvent.getPooled(\n      eventTypes.mouseEnter,\n      toID,\n      nativeEvent\n    );\n    enter.type = 'mouseenter';\n    enter.target = to;\n    enter.relatedTarget = from;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\n\n    extractedEvents[0] = leave;\n    extractedEvents[1] = enter;\n\n    return extractedEvents;\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EnterLeaveEventPlugin.js\n ** module id = 105\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticMouseEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\nvar ViewportMetrics = require(\"./ViewportMetrics\");\n\nvar getEventModifierState = require(\"./getEventModifierState\");\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function(event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function(event) {\n    return event.relatedTarget || (\n      ((event.fromElement === event.srcElement ? event.toElement : event.fromElement))\n    );\n  },\n  // \"Proprietary\" Interface.\n  pageX: function(event) {\n    return 'pageX' in event ?\n      event.pageX :\n      event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function(event) {\n    return 'pageY' in event ?\n      event.pageY :\n      event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticMouseEvent.js\n ** module id = 106\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticUIEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\nvar getEventTarget = require(\"./getEventTarget\");\n\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar UIEventInterface = {\n  view: function(event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n    if (target != null && target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument;\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function(event) {\n    return event.detail || 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\nmodule.exports = SyntheticUIEvent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticUIEvent.js\n ** module id = 107\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventModifierState\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nvar modifierKeyToProp = {\n  'Alt': 'altKey',\n  'Control': 'ctrlKey',\n  'Meta': 'metaKey',\n  'Shift': 'shiftKey'\n};\n\n// IE8 does not implement getModifierState so we simply map it to the only\n// modifier keys exposed by the event itself, does not support Lock-keys.\n// Currently, all major browsers except Chrome seems to support Lock-keys.\nfunction modifierStateGetter(keyArg) {\n  /*jshint validthis:true */\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nmodule.exports = getEventModifierState;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventModifierState.js\n ** module id = 108\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule HTMLDOMPropertyConfig\n */\n\n/*jslint bitwise: true*/\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\nvar HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE =\n  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE =\n  DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\nvar hasSVG;\nif (ExecutionEnvironment.canUseDOM) {\n  var implementation = document.implementation;\n  hasSVG = (\n    implementation &&\n    implementation.hasFeature &&\n    implementation.hasFeature(\n      'http://www.w3.org/TR/SVG11/feature#BasicStructure',\n      '1.1'\n    )\n  );\n}\n\n\nvar HTMLDOMPropertyConfig = {\n  isCustomAttribute: RegExp.prototype.test.bind(\n    /^(data|aria)-[a-z_][a-z\\d_.\\-]*$/\n  ),\n  Properties: {\n    /**\n     * Standard Properties\n     */\n    accept: null,\n    acceptCharset: null,\n    accessKey: null,\n    action: null,\n    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    allowTransparency: MUST_USE_ATTRIBUTE,\n    alt: null,\n    async: HAS_BOOLEAN_VALUE,\n    autoComplete: null,\n    // autoFocus is polyfilled/normalized by AutoFocusMixin\n    // autoFocus: HAS_BOOLEAN_VALUE,\n    autoPlay: HAS_BOOLEAN_VALUE,\n    cellPadding: null,\n    cellSpacing: null,\n    charSet: MUST_USE_ATTRIBUTE,\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    classID: MUST_USE_ATTRIBUTE,\n    // To set className on SVG elements, it's necessary to use .setAttribute;\n    // this works on HTML elements too in all browsers except IE8. Conveniently,\n    // IE8 doesn't support SVG and so we can simply use the attribute in\n    // browsers that support SVG and the property in browsers that don't,\n    // regardless of whether the element is HTML or SVG.\n    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,\n    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    colSpan: null,\n    content: null,\n    contentEditable: null,\n    contextMenu: MUST_USE_ATTRIBUTE,\n    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    coords: null,\n    crossOrigin: null,\n    data: null, // For `<object />` acts as `src`.\n    dateTime: MUST_USE_ATTRIBUTE,\n    defer: HAS_BOOLEAN_VALUE,\n    dir: null,\n    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n    draggable: null,\n    encType: null,\n    form: MUST_USE_ATTRIBUTE,\n    formAction: MUST_USE_ATTRIBUTE,\n    formEncType: MUST_USE_ATTRIBUTE,\n    formMethod: MUST_USE_ATTRIBUTE,\n    formNoValidate: HAS_BOOLEAN_VALUE,\n    formTarget: MUST_USE_ATTRIBUTE,\n    frameBorder: MUST_USE_ATTRIBUTE,\n    headers: null,\n    height: MUST_USE_ATTRIBUTE,\n    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    high: null,\n    href: null,\n    hrefLang: null,\n    htmlFor: null,\n    httpEquiv: null,\n    icon: null,\n    id: MUST_USE_PROPERTY,\n    label: null,\n    lang: null,\n    list: MUST_USE_ATTRIBUTE,\n    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    low: null,\n    manifest: MUST_USE_ATTRIBUTE,\n    marginHeight: null,\n    marginWidth: null,\n    max: null,\n    maxLength: MUST_USE_ATTRIBUTE,\n    media: MUST_USE_ATTRIBUTE,\n    mediaGroup: null,\n    method: null,\n    min: null,\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    name: null,\n    noValidate: HAS_BOOLEAN_VALUE,\n    open: HAS_BOOLEAN_VALUE,\n    optimum: null,\n    pattern: null,\n    placeholder: null,\n    poster: null,\n    preload: null,\n    radioGroup: null,\n    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    rel: null,\n    required: HAS_BOOLEAN_VALUE,\n    role: MUST_USE_ATTRIBUTE,\n    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    rowSpan: null,\n    sandbox: null,\n    scope: null,\n    scoped: HAS_BOOLEAN_VALUE,\n    scrolling: null,\n    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    shape: null,\n    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    sizes: MUST_USE_ATTRIBUTE,\n    span: HAS_POSITIVE_NUMERIC_VALUE,\n    spellCheck: null,\n    src: null,\n    srcDoc: MUST_USE_PROPERTY,\n    srcSet: MUST_USE_ATTRIBUTE,\n    start: HAS_NUMERIC_VALUE,\n    step: null,\n    style: null,\n    tabIndex: null,\n    target: null,\n    title: null,\n    type: null,\n    useMap: null,\n    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,\n    width: MUST_USE_ATTRIBUTE,\n    wmode: MUST_USE_ATTRIBUTE,\n\n    /**\n     * Non-standard Properties\n     */\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n    // keyboard hints.\n    autoCapitalize: null,\n    autoCorrect: null,\n    // itemProp, itemScope, itemType are for\n    // Microdata support. See http://schema.org/docs/gs.html\n    itemProp: MUST_USE_ATTRIBUTE,\n    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    itemType: MUST_USE_ATTRIBUTE,\n    // itemID and itemRef are for Microdata support as well but\n    // only specified in the the WHATWG spec document. See\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n    itemID: MUST_USE_ATTRIBUTE,\n    itemRef: MUST_USE_ATTRIBUTE,\n    // property is supported for OpenGraph in meta tags.\n    property: null,\n    // IE-only attribute that controls focus behavior\n    unselectable: MUST_USE_ATTRIBUTE\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  },\n  DOMPropertyNames: {\n    autoCapitalize: 'autocapitalize',\n    autoComplete: 'autocomplete',\n    autoCorrect: 'autocorrect',\n    autoFocus: 'autofocus',\n    autoPlay: 'autoplay',\n    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.\n    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding\n    encType: 'encoding',\n    hrefLang: 'hreflang',\n    radioGroup: 'radiogroup',\n    spellCheck: 'spellcheck',\n    srcDoc: 'srcdoc',\n    srcSet: 'srcset'\n  }\n};\n\nmodule.exports = HTMLDOMPropertyConfig;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/HTMLDOMPropertyConfig.js\n ** module id = 109\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule MobileSafariClickEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\n/**\n * Mobile Safari does not fire properly bubble click events on non-interactive\n * elements, which means delegated click listeners do not fire. The workaround\n * for this bug involves attaching an empty click listener on the target node.\n *\n * This particular plugin works around the bug by attaching an empty click\n * listener on `touchstart` (which does fire on every element).\n */\nvar MobileSafariClickEventPlugin = {\n\n  eventTypes: null,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    if (topLevelType === topLevelTypes.topTouchStart) {\n      var target = nativeEvent.target;\n      if (target && !target.onclick) {\n        target.onclick = emptyFunction;\n      }\n    }\n  }\n\n};\n\nmodule.exports = MobileSafariClickEventPlugin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/MobileSafariClickEventPlugin.js\n ** module id = 110\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserComponentMixin\n */\n\n'use strict';\n\nvar findDOMNode = require(\"./findDOMNode\");\n\nvar ReactBrowserComponentMixin = {\n  /**\n   * Returns the DOM node rendered by this component.\n   *\n   * @return {DOMElement} The root node of this component.\n   * @final\n   * @protected\n   */\n  getDOMNode: function() {\n    return findDOMNode(this);\n  }\n};\n\nmodule.exports = ReactBrowserComponentMixin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactBrowserComponentMixin.js\n ** module id = 111\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule findDOMNode\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactMount = require(\"./ReactMount\");\n\nvar invariant = require(\"./invariant\");\nvar isNode = require(\"./isNode\");\nvar warning = require(\"./warning\");\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        owner._warnedAboutRefsInRender,\n        '%s is accessing getDOMNode or findDOMNode inside its render(). ' +\n        'render() should be a pure function of props and state. It should ' +\n        'never access something that requires stale data from the previous ' +\n        'render, such as refs. Move this logic to componentDidMount and ' +\n        'componentDidUpdate instead.',\n        owner.getName() || 'A component'\n      ) : null);\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (isNode(componentOrElement)) {\n    return componentOrElement;\n  }\n  if (ReactInstanceMap.has(componentOrElement)) {\n    return ReactMount.getNodeFromInstance(componentOrElement);\n  }\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    componentOrElement.render == null ||\n    typeof componentOrElement.render !== 'function',\n    'Component (with keys: %s) contains `render` method ' +\n    'but is not mounted in the DOM',\n    Object.keys(componentOrElement)\n  ) : invariant(componentOrElement.render == null ||\n  typeof componentOrElement.render !== 'function'));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    false,\n    'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',\n    Object.keys(componentOrElement)\n  ) : invariant(false));\n}\n\nmodule.exports = findDOMNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/findDOMNode.js\n ** module id = 112\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultBatchingStrategy\n */\n\n'use strict';\n\nvar ReactUpdates = require(\"./ReactUpdates\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function() {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\nassign(\n  ReactDefaultBatchingStrategyTransaction.prototype,\n  Transaction.Mixin,\n  {\n    getTransactionWrappers: function() {\n      return TRANSACTION_WRAPPERS;\n    }\n  }\n);\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function(callback, a, b, c, d) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      callback(a, b, c, d);\n    } else {\n      transaction.perform(callback, null, a, b, c, d);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDefaultBatchingStrategy.js\n ** module id = 113\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMButton\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar keyMirror = require(\"./keyMirror\");\n\nvar button = ReactElement.createFactory('button');\n\nvar mouseListenerNames = keyMirror({\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n});\n\n/**\n * Implements a <button> native component that does not receive mouse events\n * when `disabled` is set.\n */\nvar ReactDOMButton = ReactClass.createClass({\n  displayName: 'ReactDOMButton',\n  tagName: 'BUTTON',\n\n  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],\n\n  render: function() {\n    var props = {};\n\n    // Copy the props; except the mouse listeners if we're disabled\n    for (var key in this.props) {\n      if (this.props.hasOwnProperty(key) &&\n          (!this.props.disabled || !mouseListenerNames[key])) {\n        props[key] = this.props[key];\n      }\n    }\n\n    return button(props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMButton;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMButton.js\n ** module id = 114\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AutoFocusMixin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar focusNode = require(\"./focusNode\");\n\nvar AutoFocusMixin = {\n  componentDidMount: function() {\n    if (this.props.autoFocus) {\n      focusNode(this.getDOMNode());\n    }\n  }\n};\n\nmodule.exports = AutoFocusMixin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/AutoFocusMixin.js\n ** module id = 115\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule focusNode\n */\n\n\"use strict\";\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch(e) {\n  }\n}\n\nmodule.exports = focusNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/focusNode.js\n ** module id = 116\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMForm\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar form = ReactElement.createFactory('form');\n\n/**\n * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need\n * to capture it on the <form> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <form> a\n * composite component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMForm = ReactClass.createClass({\n  displayName: 'ReactDOMForm',\n  tagName: 'FORM',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,\n    // `jshint` fails to parse JSX so in order for linting to work in the open\n    // source repo, we need to just use `ReactDOM.form`.\n    return form(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');\n  }\n});\n\nmodule.exports = ReactDOMForm;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMForm.js\n ** module id = 117\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LocalEventTrapMixin\n */\n\n'use strict';\n\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\n\nvar accumulateInto = require(\"./accumulateInto\");\nvar forEachAccumulated = require(\"./forEachAccumulated\");\nvar invariant = require(\"./invariant\");\n\nfunction remove(event) {\n  event.remove();\n}\n\nvar LocalEventTrapMixin = {\n  trapBubbledEvent:function(topLevelType, handlerBaseName) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted()));\n    // If a component renders to null or if another component fatals and causes\n    // the state of the tree to be corrupted, `node` here can be null.\n    var node = this.getDOMNode();\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      node,\n      'LocalEventTrapMixin.trapBubbledEvent(...): Requires node to be rendered.'\n    ) : invariant(node));\n    var listener = ReactBrowserEventEmitter.trapBubbledEvent(\n      topLevelType,\n      handlerBaseName,\n      node\n    );\n    this._localEventListeners =\n      accumulateInto(this._localEventListeners, listener);\n  },\n\n  // trapCapturedEvent would look nearly identical. We don't implement that\n  // method because it isn't currently needed.\n\n  componentWillUnmount:function() {\n    if (this._localEventListeners) {\n      forEachAccumulated(this._localEventListeners, remove);\n    }\n  }\n};\n\nmodule.exports = LocalEventTrapMixin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/LocalEventTrapMixin.js\n ** module id = 118\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMImg\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar img = ReactElement.createFactory('img');\n\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <img> element itself. There are lots of hacks we could do\n * to accomplish this, but the most reliable is to make <img> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMImg = ReactClass.createClass({\n  displayName: 'ReactDOMImg',\n  tagName: 'IMG',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    return img(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');\n  }\n});\n\nmodule.exports = ReactDOMImg;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMImg.js\n ** module id = 119\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIframe\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar iframe = ReactElement.createFactory('iframe');\n\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <iframe> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <iframe> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMIframe = ReactClass.createClass({\n  displayName: 'ReactDOMIframe',\n  tagName: 'IFRAME',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    return iframe(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');\n  }\n});\n\nmodule.exports = ReactDOMIframe;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMIframe.js\n ** module id = 120\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMInput\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar LinkedValueUtils = require(\"./LinkedValueUtils\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\nvar input = ReactElement.createFactory('input');\n\nvar instancesByReactID = {};\n\nfunction forceUpdateIfMounted() {\n  /*jshint validthis:true */\n  if (this.isMounted()) {\n    this.forceUpdate();\n  }\n}\n\n/**\n * Implements an <input> native component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = ReactClass.createClass({\n  displayName: 'ReactDOMInput',\n  tagName: 'INPUT',\n\n  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],\n\n  getInitialState: function() {\n    var defaultValue = this.props.defaultValue;\n    return {\n      initialChecked: this.props.defaultChecked || false,\n      initialValue: defaultValue != null ? defaultValue : null\n    };\n  },\n\n  render: function() {\n    // Clone `this.props` so we don't mutate the input.\n    var props = assign({}, this.props);\n\n    props.defaultChecked = null;\n    props.defaultValue = null;\n\n    var value = LinkedValueUtils.getValue(this);\n    props.value = value != null ? value : this.state.initialValue;\n\n    var checked = LinkedValueUtils.getChecked(this);\n    props.checked = checked != null ? checked : this.state.initialChecked;\n\n    props.onChange = this._handleChange;\n\n    return input(props, this.props.children);\n  },\n\n  componentDidMount: function() {\n    var id = ReactMount.getID(this.getDOMNode());\n    instancesByReactID[id] = this;\n  },\n\n  componentWillUnmount: function() {\n    var rootNode = this.getDOMNode();\n    var id = ReactMount.getID(rootNode);\n    delete instancesByReactID[id];\n  },\n\n  componentDidUpdate: function(prevProps, prevState, prevContext) {\n    var rootNode = this.getDOMNode();\n    if (this.props.checked != null) {\n      DOMPropertyOperations.setValueForProperty(\n        rootNode,\n        'checked',\n        this.props.checked || false\n      );\n    }\n\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);\n    }\n  },\n\n  _handleChange: function(event) {\n    var returnValue;\n    var onChange = LinkedValueUtils.getOnChange(this);\n    if (onChange) {\n      returnValue = onChange.call(this, event);\n    }\n    // Here we use asap to wait until all updates have propagated, which\n    // is important when using controlled components within layers:\n    // https://github.com/facebook/react/issues/1698\n    ReactUpdates.asap(forceUpdateIfMounted, this);\n\n    var name = this.props.name;\n    if (this.props.type === 'radio' && name != null) {\n      var rootNode = this.getDOMNode();\n      var queryRoot = rootNode;\n\n      while (queryRoot.parentNode) {\n        queryRoot = queryRoot.parentNode;\n      }\n\n      // If `rootNode.form` was non-null, then we could try `form.elements`,\n      // but that sometimes behaves strangely in IE8. We could also try using\n      // `form.getElementsByName`, but that will only return direct children\n      // and won't include inputs that use the HTML5 `form=` attribute. Since\n      // the input might not even be in a form, let's just use the global\n      // `querySelectorAll` to ensure we don't miss anything.\n      var group = queryRoot.querySelectorAll(\n        'input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n      for (var i = 0, groupLen = group.length; i < groupLen; i++) {\n        var otherNode = group[i];\n        if (otherNode === rootNode ||\n            otherNode.form !== rootNode.form) {\n          continue;\n        }\n        var otherID = ReactMount.getID(otherNode);\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          otherID,\n          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +\n          'same `name` is not supported.'\n        ) : invariant(otherID));\n        var otherInstance = instancesByReactID[otherID];\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          otherInstance,\n          'ReactDOMInput: Unknown radio button ID %s.',\n          otherID\n        ) : invariant(otherInstance));\n        // If this is a controlled radio button group, forcing the input that\n        // was previously checked to update will cause it to be come re-checked\n        // as appropriate.\n        ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n      }\n    }\n\n    return returnValue;\n  }\n\n});\n\nmodule.exports = ReactDOMInput;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMInput.js\n ** module id = 121\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactPropTypes = require(\"./ReactPropTypes\");\n\nvar invariant = require(\"./invariant\");\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(input) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.checkedLink == null || input.props.valueLink == null,\n    'Cannot provide a checkedLink and a valueLink. If you want to use ' +\n    'checkedLink, you probably don\\'t want to use valueLink and vice versa.'\n  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));\n}\nfunction _assertValueLink(input) {\n  _assertSingleLink(input);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.value == null && input.props.onChange == null,\n    'Cannot provide a valueLink and a value or onChange event. If you want ' +\n    'to use value or onChange, you probably don\\'t want to use valueLink.'\n  ) : invariant(input.props.value == null && input.props.onChange == null));\n}\n\nfunction _assertCheckedLink(input) {\n  _assertSingleLink(input);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.checked == null && input.props.onChange == null,\n    'Cannot provide a checkedLink and a checked property or onChange event. ' +\n    'If you want to use checked or onChange, you probably don\\'t want to ' +\n    'use checkedLink'\n  ) : invariant(input.props.checked == null && input.props.onChange == null));\n}\n\n/**\n * @param {SyntheticEvent} e change event to handle\n */\nfunction _handleLinkedValueChange(e) {\n  /*jshint validthis:true */\n  this.props.valueLink.requestChange(e.target.value);\n}\n\n/**\n  * @param {SyntheticEvent} e change event to handle\n  */\nfunction _handleLinkedCheckChange(e) {\n  /*jshint validthis:true */\n  this.props.checkedLink.requestChange(e.target.checked);\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  Mixin: {\n    propTypes: {\n      value: function(props, propName, componentName) {\n        if (!props[propName] ||\n            hasReadOnlyValue[props.type] ||\n            props.onChange ||\n            props.readOnly ||\n            props.disabled) {\n          return null;\n        }\n        return new Error(\n          'You provided a `value` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultValue`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.'\n        );\n      },\n      checked: function(props, propName, componentName) {\n        if (!props[propName] ||\n            props.onChange ||\n            props.readOnly ||\n            props.disabled) {\n          return null;\n        }\n        return new Error(\n          'You provided a `checked` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultChecked`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.'\n        );\n      },\n      onChange: ReactPropTypes.func\n    }\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function(input) {\n    if (input.props.valueLink) {\n      _assertValueLink(input);\n      return input.props.valueLink.value;\n    }\n    return input.props.value;\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function(input) {\n    if (input.props.checkedLink) {\n      _assertCheckedLink(input);\n      return input.props.checkedLink.value;\n    }\n    return input.props.checked;\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {function} change callback either from onChange prop or link.\n   */\n  getOnChange: function(input) {\n    if (input.props.valueLink) {\n      _assertValueLink(input);\n      return _handleLinkedValueChange;\n    } else if (input.props.checkedLink) {\n      _assertCheckedLink(input);\n      return _handleLinkedCheckChange;\n    }\n    return input.props.onChange;\n  }\n};\n\nmodule.exports = LinkedValueUtils;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/LinkedValueUtils.js\n ** module id = 122\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypes\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Collection of methods that allow declaration and validation of props that are\n * supplied to React components. Example usage:\n *\n *   var Props = require('ReactPropTypes');\n *   var MyArticle = React.createClass({\n *     propTypes: {\n *       // An optional string prop named \"description\".\n *       description: Props.string,\n *\n *       // A required enum prop named \"category\".\n *       category: Props.oneOf(['News','Photos']).isRequired,\n *\n *       // A prop named \"dialog\" that requires an instance of Dialog.\n *       dialog: Props.instanceOf(Dialog).isRequired\n *     },\n *     render: function() { ... }\n *   });\n *\n * A more formal specification of how these methods are used:\n *\n *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n *   decl := ReactPropTypes.{type}(.isRequired)?\n *\n * Each and every declaration produces a function with the same signature. This\n * allows the creation of custom validation functions. For example:\n *\n *  var MyLink = React.createClass({\n *    propTypes: {\n *      // An optional string or URI prop named \"href\".\n *      href: function(props, propName, componentName) {\n *        var propValue = props[propName];\n *        if (propValue != null && typeof propValue !== 'string' &&\n *            !(propValue instanceof URI)) {\n *          return new Error(\n *            'Expected a string or an URI for ' + propName + ' in ' +\n *            componentName\n *          );\n *        }\n *      }\n *    },\n *    render: function() {...}\n *  });\n *\n * @internal\n */\n\nvar ANONYMOUS = '<<anonymous>>';\n\nvar elementTypeChecker = createElementTypeChecker();\nvar nodeTypeChecker = createNodeChecker();\n\nvar ReactPropTypes = {\n  array: createPrimitiveTypeChecker('array'),\n  bool: createPrimitiveTypeChecker('boolean'),\n  func: createPrimitiveTypeChecker('function'),\n  number: createPrimitiveTypeChecker('number'),\n  object: createPrimitiveTypeChecker('object'),\n  string: createPrimitiveTypeChecker('string'),\n\n  any: createAnyTypeChecker(),\n  arrayOf: createArrayOfTypeChecker,\n  element: elementTypeChecker,\n  instanceOf: createInstanceTypeChecker,\n  node: nodeTypeChecker,\n  objectOf: createObjectOfTypeChecker,\n  oneOf: createEnumTypeChecker,\n  oneOfType: createUnionTypeChecker,\n  shape: createShapeTypeChecker\n};\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location) {\n    componentName = componentName || ANONYMOUS;\n    if (props[propName] == null) {\n      var locationName = ReactPropTypeLocationNames[location];\n      if (isRequired) {\n        return new Error(\n          (\"Required \" + locationName + \" `\" + propName + \"` was not specified in \") +\n          (\"`\" + componentName + \"`.\")\n        );\n      }\n      return null;\n    } else {\n      return validate(props, propName, componentName, location);\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createPrimitiveTypeChecker(expectedType) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== expectedType) {\n      var locationName = ReactPropTypeLocationNames[location];\n      // `propValue` being instance of, say, date/regexp, pass the 'object'\n      // check, but we can offer a more precise error message here rather than\n      // 'of type `object`'.\n      var preciseType = getPreciseType(propValue);\n\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type `\" + preciseType + \"` \") +\n        (\"supplied to `\" + componentName + \"`, expected `\" + expectedType + \"`.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createAnyTypeChecker() {\n  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n}\n\nfunction createArrayOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    if (!Array.isArray(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type \") +\n        (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an array.\")\n      );\n    }\n    for (var i = 0; i < propValue.length; i++) {\n      var error = typeChecker(propValue, i, componentName, location);\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createElementTypeChecker() {\n  function validate(props, propName, componentName, location) {\n    if (!ReactElement.isValidElement(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n        (\"`\" + componentName + \"`, expected a ReactElement.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createInstanceTypeChecker(expectedClass) {\n  function validate(props, propName, componentName, location) {\n    if (!(props[propName] instanceof expectedClass)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var expectedClassName = expectedClass.name || ANONYMOUS;\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n        (\"`\" + componentName + \"`, expected instance of `\" + expectedClassName + \"`.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createEnumTypeChecker(expectedValues) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    for (var i = 0; i < expectedValues.length; i++) {\n      if (propValue === expectedValues[i]) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    var valuesString = JSON.stringify(expectedValues);\n    return new Error(\n      (\"Invalid \" + locationName + \" `\" + propName + \"` of value `\" + propValue + \"` \") +\n      (\"supplied to `\" + componentName + \"`, expected one of \" + valuesString + \".\")\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createObjectOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type \") +\n        (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an object.\")\n      );\n    }\n    for (var key in propValue) {\n      if (propValue.hasOwnProperty(key)) {\n        var error = typeChecker(propValue, key, componentName, location);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n  function validate(props, propName, componentName, location) {\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (checker(props, propName, componentName, location) == null) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    return new Error(\n      (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n      (\"`\" + componentName + \"`.\")\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createNodeChecker() {\n  function validate(props, propName, componentName, location) {\n    if (!isNode(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n        (\"`\" + componentName + \"`, expected a ReactNode.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeTypeChecker(shapeTypes) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type `\" + propType + \"` \") +\n        (\"supplied to `\" + componentName + \"`, expected `object`.\")\n      );\n    }\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker(propValue, key, componentName, location);\n      if (error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction isNode(propValue) {\n  switch (typeof propValue) {\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return true;\n    case 'boolean':\n      return !propValue;\n    case 'object':\n      if (Array.isArray(propValue)) {\n        return propValue.every(isNode);\n      }\n      if (propValue === null || ReactElement.isValidElement(propValue)) {\n        return true;\n      }\n      propValue = ReactFragment.extractIfFragment(propValue);\n      for (var k in propValue) {\n        if (!isNode(propValue[k])) {\n          return false;\n        }\n      }\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n  return propType;\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// See `createPrimitiveTypeChecker`.\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n  return propType;\n}\n\nmodule.exports = ReactPropTypes;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPropTypes.js\n ** module id = 123\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar warning = require(\"./warning\");\n\nvar option = ReactElement.createFactory('option');\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = ReactClass.createClass({\n  displayName: 'ReactDOMOption',\n  tagName: 'OPTION',\n\n  mixins: [ReactBrowserComponentMixin],\n\n  componentWillMount: function() {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        this.props.selected == null,\n        'Use the `defaultValue` or `value` props on <select> instead of ' +\n        'setting `selected` on <option>.'\n      ) : null);\n    }\n  },\n\n  render: function() {\n    return option(this.props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMOption;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMOption.js\n ** module id = 124\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelect\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar LinkedValueUtils = require(\"./LinkedValueUtils\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\n\nvar select = ReactElement.createFactory('select');\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  /*jshint validthis:true */\n  if (this._pendingUpdate) {\n    this._pendingUpdate = false;\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null && this.isMounted()) {\n      updateOptions(this, value);\n    }\n  }\n}\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction selectValueType(props, propName, componentName) {\n  if (props[propName] == null) {\n    return null;\n  }\n  if (props.multiple) {\n    if (!Array.isArray(props[propName])) {\n      return new Error(\n        (\"The `\" + propName + \"` prop supplied to <select> must be an array if \") +\n        (\"`multiple` is true.\")\n      );\n    }\n  } else {\n    if (Array.isArray(props[propName])) {\n      return new Error(\n        (\"The `\" + propName + \"` prop supplied to <select> must be a scalar \") +\n        (\"value if `multiple` is false.\")\n      );\n    }\n  }\n}\n\n/**\n * @param {ReactComponent} component Instance of ReactDOMSelect\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(component, propValue) {\n  var selectedValue, i, l;\n  var options = component.getDOMNode().options;\n\n  if (component.props.multiple) {\n    selectedValue = {};\n    for (i = 0, l = propValue.length; i < l; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0, l = options.length; i < l; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0, l = options.length; i < l; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> native component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = ReactClass.createClass({\n  displayName: 'ReactDOMSelect',\n  tagName: 'SELECT',\n\n  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],\n\n  propTypes: {\n    defaultValue: selectValueType,\n    value: selectValueType\n  },\n\n  render: function() {\n    // Clone `this.props` so we don't mutate the input.\n    var props = assign({}, this.props);\n\n    props.onChange = this._handleChange;\n    props.value = null;\n\n    return select(props, this.props.children);\n  },\n\n  componentWillMount: function() {\n    this._pendingUpdate = false;\n  },\n\n  componentDidMount: function() {\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      updateOptions(this, value);\n    } else if (this.props.defaultValue != null) {\n      updateOptions(this, this.props.defaultValue);\n    }\n  },\n\n  componentDidUpdate: function(prevProps) {\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      this._pendingUpdate = false;\n      updateOptions(this, value);\n    } else if (!prevProps.multiple !== !this.props.multiple) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (this.props.defaultValue != null) {\n        updateOptions(this, this.props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(this, this.props.multiple ? [] : '');\n      }\n    }\n  },\n\n  _handleChange: function(event) {\n    var returnValue;\n    var onChange = LinkedValueUtils.getOnChange(this);\n    if (onChange) {\n      returnValue = onChange.call(this, event);\n    }\n\n    this._pendingUpdate = true;\n    ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n    return returnValue;\n  }\n\n});\n\nmodule.exports = ReactDOMSelect;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMSelect.js\n ** module id = 125\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextarea\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar LinkedValueUtils = require(\"./LinkedValueUtils\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\nvar warning = require(\"./warning\");\n\nvar textarea = ReactElement.createFactory('textarea');\n\nfunction forceUpdateIfMounted() {\n  /*jshint validthis:true */\n  if (this.isMounted()) {\n    this.forceUpdate();\n  }\n}\n\n/**\n * Implements a <textarea> native component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = ReactClass.createClass({\n  displayName: 'ReactDOMTextarea',\n  tagName: 'TEXTAREA',\n\n  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],\n\n  getInitialState: function() {\n    var defaultValue = this.props.defaultValue;\n    // TODO (yungsters): Remove support for children content in <textarea>.\n    var children = this.props.children;\n    if (children != null) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'Use the `defaultValue` or `value` props instead of setting ' +\n          'children on <textarea>.'\n        ) : null);\n      }\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        defaultValue == null,\n        'If you supply `defaultValue` on a <textarea>, do not pass children.'\n      ) : invariant(defaultValue == null));\n      if (Array.isArray(children)) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          children.length <= 1,\n          '<textarea> can only have at most one child.'\n        ) : invariant(children.length <= 1));\n        children = children[0];\n      }\n\n      defaultValue = '' + children;\n    }\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n    var value = LinkedValueUtils.getValue(this);\n    return {\n      // We save the initial value so that `ReactDOMComponent` doesn't update\n      // `textContent` (unnecessary since we update value).\n      // The initial value can be a boolean or object so that's why it's\n      // forced to be a string.\n      initialValue: '' + (value != null ? value : defaultValue)\n    };\n  },\n\n  render: function() {\n    // Clone `this.props` so we don't mutate the input.\n    var props = assign({}, this.props);\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      props.dangerouslySetInnerHTML == null,\n      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'\n    ) : invariant(props.dangerouslySetInnerHTML == null));\n\n    props.defaultValue = null;\n    props.value = null;\n    props.onChange = this._handleChange;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.\n    return textarea(props, this.state.initialValue);\n  },\n\n  componentDidUpdate: function(prevProps, prevState, prevContext) {\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      var rootNode = this.getDOMNode();\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);\n    }\n  },\n\n  _handleChange: function(event) {\n    var returnValue;\n    var onChange = LinkedValueUtils.getOnChange(this);\n    if (onChange) {\n      returnValue = onChange.call(this, event);\n    }\n    ReactUpdates.asap(forceUpdateIfMounted, this);\n    return returnValue;\n  }\n\n});\n\nmodule.exports = ReactDOMTextarea;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMTextarea.js\n ** module id = 126\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventListener\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventListener = require(\"./EventListener\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar PooledClass = require(\"./PooledClass\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar getEventTarget = require(\"./getEventTarget\");\nvar getUnboundedScrollPosition = require(\"./getUnboundedScrollPosition\");\n\n/**\n * Finds the parent React component of `node`.\n *\n * @param {*} node\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\n *                           is not nested.\n */\nfunction findParent(node) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  var nodeID = ReactMount.getID(node);\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n  var container = ReactMount.findReactContainerForID(rootID);\n  var parent = ReactMount.getFirstReactDOM(container);\n  return parent;\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\nassign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function() {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(\n  TopLevelCallbackBookKeeping,\n  PooledClass.twoArgumentPooler\n);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  var topLevelTarget = ReactMount.getFirstReactDOM(\n    getEventTarget(bookKeeping.nativeEvent)\n  ) || window;\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = topLevelTarget;\n  while (ancestor) {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = findParent(ancestor);\n  }\n\n  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {\n    topLevelTarget = bookKeeping.ancestors[i];\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n    ReactEventListener._handleTopLevel(\n      bookKeeping.topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      bookKeeping.nativeEvent\n    );\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function(handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function(enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function() {\n    return ReactEventListener._enabled;\n  },\n\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(\n      element,\n      handlerBaseName,\n      ReactEventListener.dispatchEvent.bind(null, topLevelType)\n    );\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(\n      element,\n      handlerBaseName,\n      ReactEventListener.dispatchEvent.bind(null, topLevelType)\n    );\n  },\n\n  monitorScrollValue: function(refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function(topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(\n      topLevelType,\n      nativeEvent\n    );\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactEventListener.js\n ** module id = 127\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EventListener\n * @typechecks\n */\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function(target, eventType, callback) {\n    if (!target.addEventListener) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        console.error(\n          'Attempted to listen to events during the capture phase on a ' +\n          'browser that does not support the capture phase. Your application ' +\n          'will not receive some events.'\n        );\n      }\n      return {\n        remove: emptyFunction\n      };\n    } else {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    }\n  },\n\n  registerDefault: function() {}\n};\n\nmodule.exports = EventListener;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventListener.js\n ** module id = 128\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getUnboundedScrollPosition\n * @typechecks\n */\n\n\"use strict\";\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable === window) {\n    return {\n      x: window.pageXOffset || document.documentElement.scrollLeft,\n      y: window.pageYOffset || document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getUnboundedScrollPosition.js\n ** module id = 129\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInjection\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar ReactComponentEnvironment = require(\"./ReactComponentEnvironment\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\nvar ReactDOMComponent = require(\"./ReactDOMComponent\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactRootIndex = require(\"./ReactRootIndex\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar ReactInjection = {\n  Component: ReactComponentEnvironment.injection,\n  Class: ReactClass.injection,\n  DOMComponent: ReactDOMComponent.injection,\n  DOMProperty: DOMProperty.injection,\n  EmptyComponent: ReactEmptyComponent.injection,\n  EventPluginHub: EventPluginHub.injection,\n  EventEmitter: ReactBrowserEventEmitter.injection,\n  NativeComponent: ReactNativeComponent.injection,\n  Perf: ReactPerf.injection,\n  RootIndex: ReactRootIndex.injection,\n  Updates: ReactUpdates.injection\n};\n\nmodule.exports = ReactInjection;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInjection.js\n ** module id = 130\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconcileTransaction\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CallbackQueue = require(\"./CallbackQueue\");\nvar PooledClass = require(\"./PooledClass\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactInputSelection = require(\"./ReactInputSelection\");\nvar ReactPutListenerQueue = require(\"./ReactPutListenerQueue\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function() {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occured. `close`\n   *   restores the previous value.\n   */\n  close: function(previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function() {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function() {\n    this.reactMountReady.notifyAll();\n  }\n};\n\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function() {\n    this.putListenerQueue.reset();\n  },\n\n  close: function() {\n    this.putListenerQueue.putListeners();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [\n  PUT_LISTENER_QUEUEING,\n  SELECTION_RESTORATION,\n  EVENT_SUPPRESSION,\n  ON_DOM_READY_QUEUEING\n];\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction() {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap proceedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function() {\n    return this.reactMountReady;\n  },\n\n  getPutListenerQueue: function() {\n    return this.putListenerQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function() {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\n\n\nassign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactReconcileTransaction.js\n ** module id = 131\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInputSelection\n */\n\n'use strict';\n\nvar ReactDOMSelection = require(\"./ReactDOMSelection\");\n\nvar containsNode = require(\"./containsNode\");\nvar focusNode = require(\"./focusNode\");\nvar getActiveElement = require(\"./getActiveElement\");\n\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n\n  hasSelectionCapabilities: function(elem) {\n    return elem && (\n      ((elem.nodeName === 'INPUT' && elem.type === 'text') ||\n      elem.nodeName === 'TEXTAREA' || elem.contentEditable === 'true')\n    );\n  },\n\n  getSelectionInformation: function() {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange:\n          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?\n          ReactInputSelection.getSelection(focusedElem) :\n          null\n    };\n  },\n\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function(priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem &&\n        isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(\n          priorFocusedElem,\n          priorSelectionRange\n        );\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function(input) {\n    var selection;\n\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && input.nodeName === 'INPUT') {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n\n    return selection || {start: 0, end: 0};\n  },\n\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function(input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && input.nodeName === 'INPUT') {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\n\nmodule.exports = ReactInputSelection;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInputSelection.js\n ** module id = 132\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelection\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar getNodeForCharacterOffset = require(\"./getNodeForCharacterOffset\");\nvar getTextContentAccessor = require(\"./getTextContentAccessor\");\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(\n    selection.anchorNode,\n    selection.anchorOffset,\n    selection.focusNode,\n    selection.focusOffset\n  );\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(\n    tempRange.startContainer,\n    tempRange.startOffset,\n    tempRange.endContainer,\n    tempRange.endOffset\n  );\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (typeof offsets.end === 'undefined') {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = typeof offsets.end === 'undefined' ?\n            start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = (\n  ExecutionEnvironment.canUseDOM &&\n  'selection' in document &&\n  !('getSelection' in window)\n);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMSelection.js\n ** module id = 133\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getNodeForCharacterOffset\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getNodeForCharacterOffset.js\n ** module id = 134\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getActiveElement\n * @typechecks\n */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document body is not yet defined.\n */\nfunction getActiveElement() /*?DOMElement*/ {\n  try {\n    return document.activeElement || document.body;\n  } catch (e) {\n    return document.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getActiveElement.js\n ** module id = 135\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPutListenerQueue\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\n\nvar assign = require(\"./Object.assign\");\n\nfunction ReactPutListenerQueue() {\n  this.listenersToPut = [];\n}\n\nassign(ReactPutListenerQueue.prototype, {\n  enqueuePutListener: function(rootNodeID, propKey, propValue) {\n    this.listenersToPut.push({\n      rootNodeID: rootNodeID,\n      propKey: propKey,\n      propValue: propValue\n    });\n  },\n\n  putListeners: function() {\n    for (var i = 0; i < this.listenersToPut.length; i++) {\n      var listenerToPut = this.listenersToPut[i];\n      ReactBrowserEventEmitter.putListener(\n        listenerToPut.rootNodeID,\n        listenerToPut.propKey,\n        listenerToPut.propValue\n      );\n    }\n  },\n\n  reset: function() {\n    this.listenersToPut.length = 0;\n  },\n\n  destructor: function() {\n    this.reset();\n  }\n});\n\nPooledClass.addPoolingTo(ReactPutListenerQueue);\n\nmodule.exports = ReactPutListenerQueue;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPutListenerQueue.js\n ** module id = 136\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SelectEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar ReactInputSelection = require(\"./ReactInputSelection\");\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\nvar getActiveElement = require(\"./getActiveElement\");\nvar isTextInputElement = require(\"./isTextInputElement\");\nvar keyOf = require(\"./keyOf\");\nvar shallowEqual = require(\"./shallowEqual\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onSelect: null}),\n      captured: keyOf({onSelectCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topContextMenu,\n      topLevelTypes.topFocus,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topMouseDown,\n      topLevelTypes.topMouseUp,\n      topLevelTypes.topSelectionChange\n    ]\n  }\n};\n\nvar activeElement = null;\nvar activeElementID = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @param {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node &&\n      ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown ||\n      activeElement == null ||\n      activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(\n      eventTypes.select,\n      activeElementID,\n      nativeEvent\n    );\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case topLevelTypes.topFocus:\n        if (isTextInputElement(topLevelTarget) ||\n            topLevelTarget.contentEditable === 'true') {\n          activeElement = topLevelTarget;\n          activeElementID = topLevelTargetID;\n          lastSelection = null;\n        }\n        break;\n      case topLevelTypes.topBlur:\n        activeElement = null;\n        activeElementID = null;\n        lastSelection = null;\n        break;\n\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case topLevelTypes.topMouseDown:\n        mouseDown = true;\n        break;\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topMouseUp:\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent);\n\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't).\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      case topLevelTypes.topSelectionChange:\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        return constructSelectEvent(nativeEvent);\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SelectEventPlugin.js\n ** module id = 137\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shallowEqual\n */\n\n'use strict';\n\n/**\n * Performs equality by iterating through keys on an object and returning\n * false when any key has values which are not strictly equal between\n * objA and objB. Returns true when the values of all keys are strictly equal.\n *\n * @return {boolean}\n */\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  var key;\n  // Test for A's keys different from B.\n  for (key in objA) {\n    if (objA.hasOwnProperty(key) &&\n        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {\n      return false;\n    }\n  }\n  // Test for B's keys missing from A.\n  for (key in objB) {\n    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/shallowEqual.js\n ** module id = 138\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ServerReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Size of the reactRoot ID space. We generate random numbers for React root\n * IDs and if there's a collision the events and DOM update system will\n * get confused. In the future we need a way to generate GUIDs but for\n * now this will work on a smaller scale.\n */\nvar GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);\n\nvar ServerReactRootIndex = {\n  createReactRootIndex: function() {\n    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);\n  }\n};\n\nmodule.exports = ServerReactRootIndex;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ServerReactRootIndex.js\n ** module id = 139\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SimpleEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginUtils = require(\"./EventPluginUtils\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar SyntheticClipboardEvent = require(\"./SyntheticClipboardEvent\");\nvar SyntheticEvent = require(\"./SyntheticEvent\");\nvar SyntheticFocusEvent = require(\"./SyntheticFocusEvent\");\nvar SyntheticKeyboardEvent = require(\"./SyntheticKeyboardEvent\");\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\nvar SyntheticDragEvent = require(\"./SyntheticDragEvent\");\nvar SyntheticTouchEvent = require(\"./SyntheticTouchEvent\");\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\nvar SyntheticWheelEvent = require(\"./SyntheticWheelEvent\");\n\nvar getEventCharCode = require(\"./getEventCharCode\");\n\nvar invariant = require(\"./invariant\");\nvar keyOf = require(\"./keyOf\");\nvar warning = require(\"./warning\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  blur: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onBlur: true}),\n      captured: keyOf({onBlurCapture: true})\n    }\n  },\n  click: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onClick: true}),\n      captured: keyOf({onClickCapture: true})\n    }\n  },\n  contextMenu: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onContextMenu: true}),\n      captured: keyOf({onContextMenuCapture: true})\n    }\n  },\n  copy: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCopy: true}),\n      captured: keyOf({onCopyCapture: true})\n    }\n  },\n  cut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCut: true}),\n      captured: keyOf({onCutCapture: true})\n    }\n  },\n  doubleClick: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDoubleClick: true}),\n      captured: keyOf({onDoubleClickCapture: true})\n    }\n  },\n  drag: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDrag: true}),\n      captured: keyOf({onDragCapture: true})\n    }\n  },\n  dragEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragEnd: true}),\n      captured: keyOf({onDragEndCapture: true})\n    }\n  },\n  dragEnter: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragEnter: true}),\n      captured: keyOf({onDragEnterCapture: true})\n    }\n  },\n  dragExit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragExit: true}),\n      captured: keyOf({onDragExitCapture: true})\n    }\n  },\n  dragLeave: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragLeave: true}),\n      captured: keyOf({onDragLeaveCapture: true})\n    }\n  },\n  dragOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragOver: true}),\n      captured: keyOf({onDragOverCapture: true})\n    }\n  },\n  dragStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragStart: true}),\n      captured: keyOf({onDragStartCapture: true})\n    }\n  },\n  drop: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDrop: true}),\n      captured: keyOf({onDropCapture: true})\n    }\n  },\n  focus: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onFocus: true}),\n      captured: keyOf({onFocusCapture: true})\n    }\n  },\n  input: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onInput: true}),\n      captured: keyOf({onInputCapture: true})\n    }\n  },\n  keyDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onKeyDown: true}),\n      captured: keyOf({onKeyDownCapture: true})\n    }\n  },\n  keyPress: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onKeyPress: true}),\n      captured: keyOf({onKeyPressCapture: true})\n    }\n  },\n  keyUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onKeyUp: true}),\n      captured: keyOf({onKeyUpCapture: true})\n    }\n  },\n  load: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onLoad: true}),\n      captured: keyOf({onLoadCapture: true})\n    }\n  },\n  error: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onError: true}),\n      captured: keyOf({onErrorCapture: true})\n    }\n  },\n  // Note: We do not allow listening to mouseOver events. Instead, use the\n  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.\n  mouseDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseDown: true}),\n      captured: keyOf({onMouseDownCapture: true})\n    }\n  },\n  mouseMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseMove: true}),\n      captured: keyOf({onMouseMoveCapture: true})\n    }\n  },\n  mouseOut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseOut: true}),\n      captured: keyOf({onMouseOutCapture: true})\n    }\n  },\n  mouseOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseOver: true}),\n      captured: keyOf({onMouseOverCapture: true})\n    }\n  },\n  mouseUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseUp: true}),\n      captured: keyOf({onMouseUpCapture: true})\n    }\n  },\n  paste: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onPaste: true}),\n      captured: keyOf({onPasteCapture: true})\n    }\n  },\n  reset: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onReset: true}),\n      captured: keyOf({onResetCapture: true})\n    }\n  },\n  scroll: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onScroll: true}),\n      captured: keyOf({onScrollCapture: true})\n    }\n  },\n  submit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onSubmit: true}),\n      captured: keyOf({onSubmitCapture: true})\n    }\n  },\n  touchCancel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchCancel: true}),\n      captured: keyOf({onTouchCancelCapture: true})\n    }\n  },\n  touchEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchEnd: true}),\n      captured: keyOf({onTouchEndCapture: true})\n    }\n  },\n  touchMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchMove: true}),\n      captured: keyOf({onTouchMoveCapture: true})\n    }\n  },\n  touchStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchStart: true}),\n      captured: keyOf({onTouchStartCapture: true})\n    }\n  },\n  wheel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onWheel: true}),\n      captured: keyOf({onWheelCapture: true})\n    }\n  }\n};\n\nvar topLevelEventsToDispatchConfig = {\n  topBlur:        eventTypes.blur,\n  topClick:       eventTypes.click,\n  topContextMenu: eventTypes.contextMenu,\n  topCopy:        eventTypes.copy,\n  topCut:         eventTypes.cut,\n  topDoubleClick: eventTypes.doubleClick,\n  topDrag:        eventTypes.drag,\n  topDragEnd:     eventTypes.dragEnd,\n  topDragEnter:   eventTypes.dragEnter,\n  topDragExit:    eventTypes.dragExit,\n  topDragLeave:   eventTypes.dragLeave,\n  topDragOver:    eventTypes.dragOver,\n  topDragStart:   eventTypes.dragStart,\n  topDrop:        eventTypes.drop,\n  topError:       eventTypes.error,\n  topFocus:       eventTypes.focus,\n  topInput:       eventTypes.input,\n  topKeyDown:     eventTypes.keyDown,\n  topKeyPress:    eventTypes.keyPress,\n  topKeyUp:       eventTypes.keyUp,\n  topLoad:        eventTypes.load,\n  topMouseDown:   eventTypes.mouseDown,\n  topMouseMove:   eventTypes.mouseMove,\n  topMouseOut:    eventTypes.mouseOut,\n  topMouseOver:   eventTypes.mouseOver,\n  topMouseUp:     eventTypes.mouseUp,\n  topPaste:       eventTypes.paste,\n  topReset:       eventTypes.reset,\n  topScroll:      eventTypes.scroll,\n  topSubmit:      eventTypes.submit,\n  topTouchCancel: eventTypes.touchCancel,\n  topTouchEnd:    eventTypes.touchEnd,\n  topTouchMove:   eventTypes.touchMove,\n  topTouchStart:  eventTypes.touchStart,\n  topWheel:       eventTypes.wheel\n};\n\nfor (var type in topLevelEventsToDispatchConfig) {\n  topLevelEventsToDispatchConfig[type].dependencies = [type];\n}\n\nvar SimpleEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * Same as the default implementation, except cancels the event when return\n   * value is false. This behavior will be disabled in a future release.\n   *\n   * @param {object} Event to be dispatched.\n   * @param {function} Application-level callback.\n   * @param {string} domID DOM ID to pass to the callback.\n   */\n  executeDispatch: function(event, listener, domID) {\n    var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);\n\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      typeof returnValue !== 'boolean',\n      'Returning `false` from an event handler is deprecated and will be ' +\n      'ignored in a future release. Instead, manually call ' +\n      'e.stopPropagation() or e.preventDefault(), as appropriate.'\n    ) : null);\n\n    if (returnValue === false) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  },\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor;\n    switch (topLevelType) {\n      case topLevelTypes.topInput:\n      case topLevelTypes.topLoad:\n      case topLevelTypes.topError:\n      case topLevelTypes.topReset:\n      case topLevelTypes.topSubmit:\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n      case topLevelTypes.topKeyPress:\n        // FireFox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n        /* falls through */\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case topLevelTypes.topBlur:\n      case topLevelTypes.topFocus:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case topLevelTypes.topClick:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n        /* falls through */\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topDoubleClick:\n      case topLevelTypes.topMouseDown:\n      case topLevelTypes.topMouseMove:\n      case topLevelTypes.topMouseOut:\n      case topLevelTypes.topMouseOver:\n      case topLevelTypes.topMouseUp:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case topLevelTypes.topDrag:\n      case topLevelTypes.topDragEnd:\n      case topLevelTypes.topDragEnter:\n      case topLevelTypes.topDragExit:\n      case topLevelTypes.topDragLeave:\n      case topLevelTypes.topDragOver:\n      case topLevelTypes.topDragStart:\n      case topLevelTypes.topDrop:\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case topLevelTypes.topTouchCancel:\n      case topLevelTypes.topTouchEnd:\n      case topLevelTypes.topTouchMove:\n      case topLevelTypes.topTouchStart:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case topLevelTypes.topScroll:\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case topLevelTypes.topWheel:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case topLevelTypes.topCopy:\n      case topLevelTypes.topCut:\n      case topLevelTypes.topPaste:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      EventConstructor,\n      'SimpleEventPlugin: Unhandled event type, `%s`.',\n      topLevelType\n    ) : invariant(EventConstructor));\n    var event = EventConstructor.getPooled(\n      dispatchConfig,\n      topLevelTargetID,\n      nativeEvent\n    );\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  }\n\n};\n\nmodule.exports = SimpleEventPlugin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SimpleEventPlugin.js\n ** module id = 140\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticDragEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar DragEventInterface = {\n  dataTransfer: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\nmodule.exports = SyntheticDragEvent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticDragEvent.js\n ** module id = 141\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticClipboardEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar ClipboardEventInterface = {\n  clipboardData: function(event) {\n    return (\n      'clipboardData' in event ?\n        event.clipboardData :\n        window.clipboardData\n    );\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\nmodule.exports = SyntheticClipboardEvent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticClipboardEvent.js\n ** module id = 142\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticFocusEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar FocusEventInterface = {\n  relatedTarget: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\nmodule.exports = SyntheticFocusEvent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticFocusEvent.js\n ** module id = 143\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticKeyboardEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\n\nvar getEventCharCode = require(\"./getEventCharCode\");\nvar getEventKey = require(\"./getEventKey\");\nvar getEventModifierState = require(\"./getEventModifierState\");\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function(event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function(event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function(event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\nmodule.exports = SyntheticKeyboardEvent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticKeyboardEvent.js\n ** module id = 144\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventCharCode\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `charCode` property.\n */\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nmodule.exports = getEventCharCode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventCharCode.js\n ** module id = 145\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventKey\n * @typechecks static-only\n */\n\n'use strict';\n\nvar getEventCharCode = require(\"./getEventCharCode\");\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  'Esc': 'Escape',\n  'Spacebar': ' ',\n  'Left': 'ArrowLeft',\n  'Up': 'ArrowUp',\n  'Right': 'ArrowRight',\n  'Down': 'ArrowDown',\n  'Del': 'Delete',\n  'Win': 'OS',\n  'Menu': 'ContextMenu',\n  'Apps': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'MozPrintableKey': 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  224: 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nmodule.exports = getEventKey;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventKey.js\n ** module id = 146\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticTouchEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\n\nvar getEventModifierState = require(\"./getEventModifierState\");\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticTouchEvent.js\n ** module id = 147\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticWheelEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function(event) {\n    return (\n      'deltaX' in event ? event.deltaX :\n      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n      'wheelDeltaX' in event ? -event.wheelDeltaX : 0\n    );\n  },\n  deltaY: function(event) {\n    return (\n      'deltaY' in event ? event.deltaY :\n      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n      'wheelDeltaY' in event ? -event.wheelDeltaY :\n      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n      'wheelDelta' in event ? -event.wheelDelta : 0\n    );\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticWheelEvent.js\n ** module id = 148\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SVGDOMPropertyConfig\n */\n\n/*jslint bitwise: true*/\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\n\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\n\nvar SVGDOMPropertyConfig = {\n  Properties: {\n    clipPath: MUST_USE_ATTRIBUTE,\n    cx: MUST_USE_ATTRIBUTE,\n    cy: MUST_USE_ATTRIBUTE,\n    d: MUST_USE_ATTRIBUTE,\n    dx: MUST_USE_ATTRIBUTE,\n    dy: MUST_USE_ATTRIBUTE,\n    fill: MUST_USE_ATTRIBUTE,\n    fillOpacity: MUST_USE_ATTRIBUTE,\n    fontFamily: MUST_USE_ATTRIBUTE,\n    fontSize: MUST_USE_ATTRIBUTE,\n    fx: MUST_USE_ATTRIBUTE,\n    fy: MUST_USE_ATTRIBUTE,\n    gradientTransform: MUST_USE_ATTRIBUTE,\n    gradientUnits: MUST_USE_ATTRIBUTE,\n    markerEnd: MUST_USE_ATTRIBUTE,\n    markerMid: MUST_USE_ATTRIBUTE,\n    markerStart: MUST_USE_ATTRIBUTE,\n    offset: MUST_USE_ATTRIBUTE,\n    opacity: MUST_USE_ATTRIBUTE,\n    patternContentUnits: MUST_USE_ATTRIBUTE,\n    patternUnits: MUST_USE_ATTRIBUTE,\n    points: MUST_USE_ATTRIBUTE,\n    preserveAspectRatio: MUST_USE_ATTRIBUTE,\n    r: MUST_USE_ATTRIBUTE,\n    rx: MUST_USE_ATTRIBUTE,\n    ry: MUST_USE_ATTRIBUTE,\n    spreadMethod: MUST_USE_ATTRIBUTE,\n    stopColor: MUST_USE_ATTRIBUTE,\n    stopOpacity: MUST_USE_ATTRIBUTE,\n    stroke: MUST_USE_ATTRIBUTE,\n    strokeDasharray: MUST_USE_ATTRIBUTE,\n    strokeLinecap: MUST_USE_ATTRIBUTE,\n    strokeOpacity: MUST_USE_ATTRIBUTE,\n    strokeWidth: MUST_USE_ATTRIBUTE,\n    textAnchor: MUST_USE_ATTRIBUTE,\n    transform: MUST_USE_ATTRIBUTE,\n    version: MUST_USE_ATTRIBUTE,\n    viewBox: MUST_USE_ATTRIBUTE,\n    x1: MUST_USE_ATTRIBUTE,\n    x2: MUST_USE_ATTRIBUTE,\n    x: MUST_USE_ATTRIBUTE,\n    y1: MUST_USE_ATTRIBUTE,\n    y2: MUST_USE_ATTRIBUTE,\n    y: MUST_USE_ATTRIBUTE\n  },\n  DOMAttributeNames: {\n    clipPath: 'clip-path',\n    fillOpacity: 'fill-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    gradientTransform: 'gradientTransform',\n    gradientUnits: 'gradientUnits',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    patternContentUnits: 'patternContentUnits',\n    patternUnits: 'patternUnits',\n    preserveAspectRatio: 'preserveAspectRatio',\n    spreadMethod: 'spreadMethod',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strokeDasharray: 'stroke-dasharray',\n    strokeLinecap: 'stroke-linecap',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    textAnchor: 'text-anchor',\n    viewBox: 'viewBox'\n  }\n};\n\nmodule.exports = SVGDOMPropertyConfig;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SVGDOMPropertyConfig.js\n ** module id = 149\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createFullPageComponent\n * @typechecks\n */\n\n'use strict';\n\n// Defeat circular references by requiring this directly.\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Create a component that will throw an exception when unmounted.\n *\n * Components like <html> <head> and <body> can't be removed or added\n * easily in a cross-browser way, however it's valuable to be able to\n * take advantage of React's reconciliation for styling and <title>\n * management. So we just document it and throw in dangerous cases.\n *\n * @param {string} tag The tag to wrap\n * @return {function} convenience constructor of new component\n */\nfunction createFullPageComponent(tag) {\n  var elementFactory = ReactElement.createFactory(tag);\n\n  var FullPageComponent = ReactClass.createClass({\n    tagName: tag.toUpperCase(),\n    displayName: 'ReactFullPageComponent' + tag,\n\n    componentWillUnmount: function() {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        false,\n        '%s tried to unmount. Because of cross-browser quirks it is ' +\n        'impossible to unmount some top-level components (eg <html>, <head>, ' +\n        'and <body>) reliably and efficiently. To fix this, have a single ' +\n        'top-level component that never unmounts render these elements.',\n        this.constructor.displayName\n      ) : invariant(false));\n    },\n\n    render: function() {\n      return elementFactory(this.props);\n    }\n  });\n\n  return FullPageComponent;\n}\n\nmodule.exports = createFullPageComponent;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/createFullPageComponent.js\n ** module id = 150\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultPerf\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar ReactDefaultPerfAnalysis = require(\"./ReactDefaultPerfAnalysis\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactPerf = require(\"./ReactPerf\");\n\nvar performanceNow = require(\"./performanceNow\");\n\nfunction roundFloat(val) {\n  return Math.floor(val * 100) / 100;\n}\n\nfunction addValue(obj, key, val) {\n  obj[key] = (obj[key] || 0) + val;\n}\n\nvar ReactDefaultPerf = {\n  _allMeasurements: [], // last item in the list is the current one\n  _mountStack: [0],\n  _injected: false,\n\n  start: function() {\n    if (!ReactDefaultPerf._injected) {\n      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);\n    }\n\n    ReactDefaultPerf._allMeasurements.length = 0;\n    ReactPerf.enableMeasure = true;\n  },\n\n  stop: function() {\n    ReactPerf.enableMeasure = false;\n  },\n\n  getLastMeasurements: function() {\n    return ReactDefaultPerf._allMeasurements;\n  },\n\n  printExclusive: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);\n    console.table(summary.map(function(item) {\n      return {\n        'Component class name': item.componentName,\n        'Total inclusive time (ms)': roundFloat(item.inclusive),\n        'Exclusive mount time (ms)': roundFloat(item.exclusive),\n        'Exclusive render time (ms)': roundFloat(item.render),\n        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),\n        'Render time per instance (ms)': roundFloat(item.render / item.count),\n        'Instances': item.count\n      };\n    }));\n    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct\n    // number.\n  },\n\n  printInclusive: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);\n    console.table(summary.map(function(item) {\n      return {\n        'Owner > component': item.componentName,\n        'Inclusive time (ms)': roundFloat(item.time),\n        'Instances': item.count\n      };\n    }));\n    console.log(\n      'Total time:',\n      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'\n    );\n  },\n\n  getMeasurementsSummaryMap: function(measurements) {\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(\n      measurements,\n      true\n    );\n    return summary.map(function(item) {\n      return {\n        'Owner > component': item.componentName,\n        'Wasted time (ms)': item.time,\n        'Instances': item.count\n      };\n    });\n  },\n\n  printWasted: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));\n    console.log(\n      'Total time:',\n      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'\n    );\n  },\n\n  printDOM: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);\n    console.table(summary.map(function(item) {\n      var result = {};\n      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;\n      result['type'] = item.type;\n      result['args'] = JSON.stringify(item.args);\n      return result;\n    }));\n    console.log(\n      'Total time:',\n      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'\n    );\n  },\n\n  _recordWrite: function(id, fnName, totalTime, args) {\n    // TODO: totalTime isn't that useful since it doesn't count paints/reflows\n    var writes =\n      ReactDefaultPerf\n        ._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1]\n        .writes;\n    writes[id] = writes[id] || [];\n    writes[id].push({\n      type: fnName,\n      time: totalTime,\n      args: args\n    });\n  },\n\n  measure: function(moduleName, fnName, func) {\n    return function() {for (var args=[],$__0=0,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n      var totalTime;\n      var rv;\n      var start;\n\n      if (fnName === '_renderNewRootComponent' ||\n          fnName === 'flushBatchedUpdates') {\n        // A \"measurement\" is a set of metrics recorded for each flush. We want\n        // to group the metrics for a given flush together so we can look at the\n        // components that rendered and the DOM operations that actually\n        // happened to determine the amount of \"wasted work\" performed.\n        ReactDefaultPerf._allMeasurements.push({\n          exclusive: {},\n          inclusive: {},\n          render: {},\n          counts: {},\n          writes: {},\n          displayNames: {},\n          totalTime: 0\n        });\n        start = performanceNow();\n        rv = func.apply(this, args);\n        ReactDefaultPerf._allMeasurements[\n          ReactDefaultPerf._allMeasurements.length - 1\n        ].totalTime = performanceNow() - start;\n        return rv;\n      } else if (fnName === '_mountImageIntoNode' ||\n          moduleName === 'ReactDOMIDOperations') {\n        start = performanceNow();\n        rv = func.apply(this, args);\n        totalTime = performanceNow() - start;\n\n        if (fnName === '_mountImageIntoNode') {\n          var mountID = ReactMount.getID(args[1]);\n          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);\n        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {\n          // special format\n          args[0].forEach(function(update) {\n            var writeArgs = {};\n            if (update.fromIndex !== null) {\n              writeArgs.fromIndex = update.fromIndex;\n            }\n            if (update.toIndex !== null) {\n              writeArgs.toIndex = update.toIndex;\n            }\n            if (update.textContent !== null) {\n              writeArgs.textContent = update.textContent;\n            }\n            if (update.markupIndex !== null) {\n              writeArgs.markup = args[1][update.markupIndex];\n            }\n            ReactDefaultPerf._recordWrite(\n              update.parentID,\n              update.type,\n              totalTime,\n              writeArgs\n            );\n          });\n        } else {\n          // basic format\n          ReactDefaultPerf._recordWrite(\n            args[0],\n            fnName,\n            totalTime,\n            Array.prototype.slice.call(args, 1)\n          );\n        }\n        return rv;\n      } else if (moduleName === 'ReactCompositeComponent' && (\n        (// TODO: receiveComponent()?\n        (fnName === 'mountComponent' ||\n        fnName === 'updateComponent' || fnName === '_renderValidatedComponent')))) {\n\n        if (typeof this._currentElement.type === 'string') {\n          return func.apply(this, args);\n        }\n\n        var rootNodeID = fnName === 'mountComponent' ?\n          args[0] :\n          this._rootNodeID;\n        var isRender = fnName === '_renderValidatedComponent';\n        var isMount = fnName === 'mountComponent';\n\n        var mountStack = ReactDefaultPerf._mountStack;\n        var entry = ReactDefaultPerf._allMeasurements[\n          ReactDefaultPerf._allMeasurements.length - 1\n        ];\n\n        if (isRender) {\n          addValue(entry.counts, rootNodeID, 1);\n        } else if (isMount) {\n          mountStack.push(0);\n        }\n\n        start = performanceNow();\n        rv = func.apply(this, args);\n        totalTime = performanceNow() - start;\n\n        if (isRender) {\n          addValue(entry.render, rootNodeID, totalTime);\n        } else if (isMount) {\n          var subMountTime = mountStack.pop();\n          mountStack[mountStack.length - 1] += totalTime;\n          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);\n          addValue(entry.inclusive, rootNodeID, totalTime);\n        } else {\n          addValue(entry.inclusive, rootNodeID, totalTime);\n        }\n\n        entry.displayNames[rootNodeID] = {\n          current: this.getName(),\n          owner: this._currentElement._owner ?\n            this._currentElement._owner.getName() :\n            '<root>'\n        };\n\n        return rv;\n      } else {\n        return func.apply(this, args);\n      }\n    };\n  }\n};\n\nmodule.exports = ReactDefaultPerf;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDefaultPerf.js\n ** module id = 151\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultPerfAnalysis\n */\n\nvar assign = require(\"./Object.assign\");\n\n// Don't try to save users less than 1.2ms (a number I made up)\nvar DONT_CARE_THRESHOLD = 1.2;\nvar DOM_OPERATION_TYPES = {\n  '_mountImageIntoNode': 'set innerHTML',\n  INSERT_MARKUP: 'set innerHTML',\n  MOVE_EXISTING: 'move',\n  REMOVE_NODE: 'remove',\n  TEXT_CONTENT: 'set textContent',\n  'updatePropertyByID': 'update attribute',\n  'deletePropertyByID': 'delete attribute',\n  'updateStylesByID': 'update styles',\n  'updateInnerHTMLByID': 'set innerHTML',\n  'dangerouslyReplaceNodeWithMarkupByID': 'replace'\n};\n\nfunction getTotalTime(measurements) {\n  // TODO: return number of DOM ops? could be misleading.\n  // TODO: measure dropped frames after reconcile?\n  // TODO: log total time of each reconcile and the top-level component\n  // class that triggered it.\n  var totalTime = 0;\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    totalTime += measurement.totalTime;\n  }\n  return totalTime;\n}\n\nfunction getDOMSummary(measurements) {\n  var items = [];\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var id;\n\n    for (id in measurement.writes) {\n      measurement.writes[id].forEach(function(write) {\n        items.push({\n          id: id,\n          type: DOM_OPERATION_TYPES[write.type] || write.type,\n          args: write.args\n        });\n      });\n    }\n  }\n  return items;\n}\n\nfunction getExclusiveSummary(measurements) {\n  var candidates = {};\n  var displayName;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign(\n      {},\n      measurement.exclusive,\n      measurement.inclusive\n    );\n\n    for (var id in allIDs) {\n      displayName = measurement.displayNames[id].current;\n\n      candidates[displayName] = candidates[displayName] || {\n        componentName: displayName,\n        inclusive: 0,\n        exclusive: 0,\n        render: 0,\n        count: 0\n      };\n      if (measurement.render[id]) {\n        candidates[displayName].render += measurement.render[id];\n      }\n      if (measurement.exclusive[id]) {\n        candidates[displayName].exclusive += measurement.exclusive[id];\n      }\n      if (measurement.inclusive[id]) {\n        candidates[displayName].inclusive += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[displayName].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (displayName in candidates) {\n    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[displayName]);\n    }\n  }\n\n  arr.sort(function(a, b) {\n    return b.exclusive - a.exclusive;\n  });\n\n  return arr;\n}\n\nfunction getInclusiveSummary(measurements, onlyClean) {\n  var candidates = {};\n  var inclusiveKey;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign(\n      {},\n      measurement.exclusive,\n      measurement.inclusive\n    );\n    var cleanComponents;\n\n    if (onlyClean) {\n      cleanComponents = getUnchangedComponents(measurement);\n    }\n\n    for (var id in allIDs) {\n      if (onlyClean && !cleanComponents[id]) {\n        continue;\n      }\n\n      var displayName = measurement.displayNames[id];\n\n      // Inclusive time is not useful for many components without knowing where\n      // they are instantiated. So we aggregate inclusive time with both the\n      // owner and current displayName as the key.\n      inclusiveKey = displayName.owner + ' > ' + displayName.current;\n\n      candidates[inclusiveKey] = candidates[inclusiveKey] || {\n        componentName: inclusiveKey,\n        time: 0,\n        count: 0\n      };\n\n      if (measurement.inclusive[id]) {\n        candidates[inclusiveKey].time += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[inclusiveKey].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (inclusiveKey in candidates) {\n    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[inclusiveKey]);\n    }\n  }\n\n  arr.sort(function(a, b) {\n    return b.time - a.time;\n  });\n\n  return arr;\n}\n\nfunction getUnchangedComponents(measurement) {\n  // For a given reconcile, look at which components did not actually\n  // render anything to the DOM and return a mapping of their ID to\n  // the amount of time it took to render the entire subtree.\n  var cleanComponents = {};\n  var dirtyLeafIDs = Object.keys(measurement.writes);\n  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\n\n  for (var id in allIDs) {\n    var isDirty = false;\n    // For each component that rendered, see if a component that triggered\n    // a DOM op is in its subtree.\n    for (var i = 0; i < dirtyLeafIDs.length; i++) {\n      if (dirtyLeafIDs[i].indexOf(id) === 0) {\n        isDirty = true;\n        break;\n      }\n    }\n    if (!isDirty && measurement.counts[id] > 0) {\n      cleanComponents[id] = true;\n    }\n  }\n  return cleanComponents;\n}\n\nvar ReactDefaultPerfAnalysis = {\n  getExclusiveSummary: getExclusiveSummary,\n  getInclusiveSummary: getInclusiveSummary,\n  getDOMSummary: getDOMSummary,\n  getTotalTime: getTotalTime\n};\n\nmodule.exports = ReactDefaultPerfAnalysis;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDefaultPerfAnalysis.js\n ** module id = 152\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule performanceNow\n * @typechecks\n */\n\nvar performance = require(\"./performance\");\n\n/**\n * Detect if we can use `window.performance.now()` and gracefully fallback to\n * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now\n * because of Facebook's testing infrastructure.\n */\nif (!performance || !performance.now) {\n  performance = Date;\n}\n\nvar performanceNow = performance.now.bind(performance);\n\nmodule.exports = performanceNow;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/performanceNow.js\n ** module id = 153\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule performance\n * @typechecks\n */\n\n\"use strict\";\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar performance;\n\nif (ExecutionEnvironment.canUseDOM) {\n  performance =\n    window.performance ||\n    window.msPerformance ||\n    window.webkitPerformance;\n}\n\nmodule.exports = performance || {};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/performance.js\n ** module id = 154\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule ReactServerRendering\n */\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMarkupChecksum = require(\"./ReactMarkupChecksum\");\nvar ReactServerRenderingTransaction =\n  require(\"./ReactServerRenderingTransaction\");\n\nvar emptyObject = require(\"./emptyObject\");\nvar instantiateReactComponent = require(\"./instantiateReactComponent\");\nvar invariant = require(\"./invariant\");\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup\n */\nfunction renderToString(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactElement.isValidElement(element),\n    'renderToString(): You must pass a valid ReactElement.'\n  ) : invariant(ReactElement.isValidElement(element)));\n\n  var transaction;\n  try {\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(false);\n\n    return transaction.perform(function() {\n      var componentInstance = instantiateReactComponent(element, null);\n      var markup =\n        componentInstance.mountComponent(id, transaction, emptyObject);\n      return ReactMarkupChecksum.addChecksumToMarkup(markup);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n  }\n}\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup, without the extra React ID and checksum\n * (for generating static pages)\n */\nfunction renderToStaticMarkup(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactElement.isValidElement(element),\n    'renderToStaticMarkup(): You must pass a valid ReactElement.'\n  ) : invariant(ReactElement.isValidElement(element)));\n\n  var transaction;\n  try {\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(true);\n\n    return transaction.perform(function() {\n      var componentInstance = instantiateReactComponent(element, null);\n      return componentInstance.mountComponent(id, transaction, emptyObject);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n  }\n}\n\nmodule.exports = {\n  renderToString: renderToString,\n  renderToStaticMarkup: renderToStaticMarkup\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactServerRendering.js\n ** module id = 155\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerRenderingTransaction\n * @typechecks\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar CallbackQueue = require(\"./CallbackQueue\");\nvar ReactPutListenerQueue = require(\"./ReactPutListenerQueue\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks\n * during the performing of the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function() {\n    this.reactMountReady.reset();\n  },\n\n  close: emptyFunction\n};\n\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function() {\n    this.putListenerQueue.reset();\n  },\n\n  close: emptyFunction\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [\n  PUT_LISTENER_QUEUEING,\n  ON_DOM_READY_QUEUEING\n];\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap proceedures.\n   */\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function() {\n    return this.reactMountReady;\n  },\n\n  getPutListenerQueue: function() {\n    return this.putListenerQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function() {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\n\n\nassign(\n  ReactServerRenderingTransaction.prototype,\n  Transaction.Mixin,\n  Mixin\n);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactServerRenderingTransaction.js\n ** module id = 156\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule onlyChild\n */\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection. The current implementation of this\n * function assumes that a single child gets passed without a wrapper, but the\n * purpose of this helper function is to abstract away the particular structure\n * of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactComponent} The first and only `ReactComponent` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactElement.isValidElement(children),\n    'onlyChild must be passed a children with exactly one child.'\n  ) : invariant(ReactElement.isValidElement(children)));\n  return children;\n}\n\nmodule.exports = onlyChild;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/onlyChild.js\n ** module id = 157\n ** module chunks = 0\n **/","/** @jsx React.DOM */var React = require('react');\nvar Bar = require('./Bar.react');\nvar BarChartStore = require('../stores/BarChartStore');\nvar d3 = require('d3');\nvar Utils = require('../utils/WebAPIUtils');\nvar D3Utils = require('../utils/D3Utils');\nvar XAxis = require('./XAxis.react');\nvar YAxis = require('./YAxis.react');\nvar D3ServerAction = require('../actions/D3ServerAction');\n\nvar BarChart = React.createClass({\n  getInitialState: function(){\n    return{\n      bars: [],//BarChartStore.getAll(this.props.id),\n      width: this.props.width,\n      height: this.props.height,\n      start_date: \"12/18/2013 00:00\",\n      end_date: \"12/19/2013 00:00\"\n    };\n  },\n  getDefaultProps: function(){\n    return {\n      width: '500',\n      height: '200',\n    };\n  },\n  // componentWillMount: function(){\n\n  // },\n  updateDimensions: function(){\n    var el = React.findDOMNode(this);\n    var d3node = d3.select(el);\n    this.setState({width: d3node.node().parentNode.offsetWidth});\n  },\n\n  setupChart: function(){\n    var el = React.findDOMNode(this);\n    var d3node = d3.select(el);\n    this.state.width = d3node.node().parentNode.offsetWidth;\n    d3node.select('g')\n      .attr(\"transform\", \"translate(\" + 20 + \",\" + 20 + \")\");\n  },\n  componentWillMount: function(){\n    D3ServerAction.readyToReceive(this.props.id, this.state.start_date, this.state.end_date);\n  },\n  componentDidMount: function(){\n    BarChartStore.addChangeListener(this._onChange);\n    /**\n    When creating callbacks in JavaScript, you usually need to explicitly \n    bind a method to its instance such that the value of this is correct. \n    With React, every method is automatically bound to its component instance. \n    React caches the bound method such that it's extremely CPU and memory efficient. \n    It's also less typing!\n\n    That's why you don't need to do , this.updateDimensions.bind(this)\n    */\n    window.addEventListener(\"resize\", this.updateDimensions);\n    // need this to re-render after we change the width\n    this.setupChart();\n    this._onChange();\n  },\n  setup_scales: function(domains){\n\n    var x = d3.scale.linear()\n       .range([0, this.state.width - 50])\n       .domain([0, domains.domains.x[1]]);\n\n     var y = d3.scale.ordinal()\n       .rangeRoundBands([0, this.state.height - 50], .1)\n       .domain(domains.y_values);\n\n    return {x: x,y: y};\n  },\n  componentDidUpdate: function(){\n    if(this.state.bars){\n      this.setupChart();\n    }\n  },\n  render: function () {\n    var svgStyle = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n    if(this.state.bars){\n\n        var domains = D3Utils.calculatePosition(this.state.width, this.state.height, this.state.bars, \"doc_count\", \"key\");\n        var scales = this.setup_scales(domains);\n        \n\n        var Bars = this.state.bars.map(function(bar) {\n          return (<Bar key={bar.key} data={bar} domains={scales} />);\n        }, this);\n\n        return (\n          <svg style={svgStyle}>\n            <g className=\"graph\">\n            {{Bars}}\n            <XAxis height={this.state.height} x={scales.x}/>\n            <YAxis width={this.state.width} y={scales.y} />\n            </g>\n          </svg>\n        );\n    } else {\n      return (<div></div>);\n    }\n  },\n  _onChange: function(){\n    this.setState({\n       bars: BarChartStore.getAll(this.props.id)\n     });\n  }\n});\n\nmodule.exports = BarChart;\n\n\n/** WEBPACK FOOTER **\n ** ./client/js/components/BarChart.react.jsx\n **/","/** @jsx React.DOM */var React = require('react');\nvar BarVisualization = require('../visualizations/BarVisualization');\n//var ViewActionCreators = require('../actions/ViewActionCreators');\nvar d3 = require('d3');\n\nvar Bar = React.createClass({\n  componentDidMount: function() {\n    this.d3Node = d3.select(this.getDOMNode());\n    this.d3Node.datum(this.props.data)\n      .call(BarVisualization.enter, this.props.domains);\n  },\n  shouldComponentUpdate: function(nextProps) {\n    this.d3Node = d3.select(this.getDOMNode());\n    this.d3Node.call(BarVisualization.update, nextProps.domains, 200);\n    return true;\n  },\n   componentDidUpate: function() {\n   },\n \n  render: function() {\n    return (\n      <g className=\"Bar\" />\n    );\n  }\n});\n\nmodule.exports = Bar;\n\n\n/** WEBPACK FOOTER **\n ** ./client/js/components/Bar.react.jsx\n **/","var d3 = require('d3');\n\nvar BarVisualization = {};\nvar duration = 250;\nvar margin = {top: 10, left: 5};\nvar padding = {top: 5, left: 5};\nvar format = d3.format(\",.0f\");\nvar x,y;\n\nBarVisualization.enter = function(selection, domains) {\n    x = domains.x;\n    y = domains.y;\n\n    selection\n        .attr(\"transform\", function(d) {\n           return \"translate(0,\" + y(d.key) + \")\"; \n         });\n\n \n    selection.append(\"rect\")\n        .attr(\"width\", function(d) { return x(d.doc_count); })\n        .attr(\"height\", y.rangeBand());\n\n    selection.append(\"text\")\n        .attr(\"class\", \"value\")\n        .attr(\"x\", function(d) { return x(d.doc_count); })\n        .attr(\"y\", y.rangeBand() / 2)\n        .attr(\"dx\", -3)\n        .attr(\"dy\", \".35em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(function(d) { return format(d.doc_count); });\n};\n\n\n \nBarVisualization.update = function(selection, domains, duration)  {\n  x = domains.x;\n  y = domains.y;\n\n  selection\n    .transition()\n    .duration(duration)\n    .attr(\"transform\", function(d) {\n       return \"translate(0,\" + y(d.key) + \")\"; \n     });\n\n    selection.select(\"rect\")\n        .attr(\"width\", function(d) { return x(d.doc_count); })\n        .attr(\"height\", y.rangeBand());\n\n    selection.select(\"text\")\n        .attr(\"class\", \"value\")\n        .attr(\"x\", function(d) { return x(d.doc_count); })\n        .attr(\"y\", y.rangeBand() / 2)\n        .attr(\"dx\", -3)\n        .attr(\"dy\", \".35em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(function(d) { return format(d.doc_count); });\n};\n\n// missing.. should probably do something here..\n// BarVisualization.exit = () => {\n\n// }\n\nmodule.exports = BarVisualization;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/visualizations/BarVisualization.js\n ** module id = 160\n ** module chunks = 0\n **/","!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 161\n ** module chunks = 0\n **/","var assign = require('object-assign');\nvar EventEmitter = require('events').EventEmitter;\nvar D3Dispatcher = require('../dispatcher/D3Dispatcher');\n// var ThreadStore = require('./ThreadStore');\nvar Constants = require('../constants/D3Constants.js');\n\nvar _messages = {};\nvar actions = Constants.actions;\nvar CHANGE_EVENT = \"change\";\n\nfunction _addMessages(data_for, msgs){\n  // will process data first!!!\n  console.log(\"MESSAGES \", msgs);\n  _messages[data_for] = msgs;\n  //_messages[data_for].sort(function(a, b) { return b.doc_count - a.doc_count; });\n}\n\nvar BarChartStore = assign({}, EventEmitter.prototype, {\n  \n  emitChange: function(id){\n    this.emit(CHANGE_EVENT, id);\n  },\n  addChangeListener: function(callback){\n    this.on(CHANGE_EVENT, callback);\n  },\n  removeChangeListener: function(){\n    this.removeListener(CHANGE_EVENT, callback);\n  },\n  getAll: function(id){\n    return _messages[id];\n  }\n\n});\n\n\nBarChartStore.dispatchToken = D3Dispatcher.register(function(action){\n  switch(action.type){\n\n    case actions.RECEIVE_DATA:\n      _addMessages(action.data_for, action.data);\n      BarChartStore.emitChange(action.data_for);\n      break;\n\n    //case actions.LOAD_DATA:\n\n\n    default:\n      // do nothing\n  }\n});\n\nmodule.exports = BarChartStore;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/stores/BarChartStore.js\n ** module id = 162\n ** module chunks = 0\n **/","'use strict';\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction ToObject(val) {\n\tif (val == null) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction ownEnumerableKeys(obj) {\n\tvar keys = Object.getOwnPropertyNames(obj);\n\n\tif (Object.getOwnPropertySymbols) {\n\t\tkeys = keys.concat(Object.getOwnPropertySymbols(obj));\n\t}\n\n\treturn keys.filter(function (key) {\n\t\treturn propIsEnumerable.call(obj, key);\n\t});\n}\n\nmodule.exports = Object.assign || function (target, source) {\n\tvar from;\n\tvar keys;\n\tvar to = ToObject(target);\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = arguments[s];\n\t\tkeys = ownEnumerableKeys(Object(from));\n\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tto[keys[i]] = from[keys[i]];\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/object-assign/index.js\n ** module id = 163\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/events/events.js\n ** module id = 164\n ** module chunks = 0\n **/","var Dispatcher = require('flux').Dispatcher;\n\nmodule.exports = new Dispatcher();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/dispatcher/D3Dispatcher.js\n ** module id = 165\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nmodule.exports.Dispatcher = require('./lib/Dispatcher')\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flux/index.js\n ** module id = 166\n ** module chunks = 0\n **/","/*\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Dispatcher\n * @typechecks\n */\n\n\"use strict\";\n\nvar invariant = require('./invariant');\n\nvar _lastID = 1;\nvar _prefix = 'ID_';\n\n/**\n * Dispatcher is used to broadcast payloads to registered callbacks. This is\n * different from generic pub-sub systems in two ways:\n *\n *   1) Callbacks are not subscribed to particular events. Every payload is\n *      dispatched to every registered callback.\n *   2) Callbacks can be deferred in whole or part until other callbacks have\n *      been executed.\n *\n * For example, consider this hypothetical flight destination form, which\n * selects a default city when a country is selected:\n *\n *   var flightDispatcher = new Dispatcher();\n *\n *   // Keeps track of which country is selected\n *   var CountryStore = {country: null};\n *\n *   // Keeps track of which city is selected\n *   var CityStore = {city: null};\n *\n *   // Keeps track of the base flight price of the selected city\n *   var FlightPriceStore = {price: null}\n *\n * When a user changes the selected city, we dispatch the payload:\n *\n *   flightDispatcher.dispatch({\n *     actionType: 'city-update',\n *     selectedCity: 'paris'\n *   });\n *\n * This payload is digested by `CityStore`:\n *\n *   flightDispatcher.register(function(payload) {\n *     if (payload.actionType === 'city-update') {\n *       CityStore.city = payload.selectedCity;\n *     }\n *   });\n *\n * When the user selects a country, we dispatch the payload:\n *\n *   flightDispatcher.dispatch({\n *     actionType: 'country-update',\n *     selectedCountry: 'australia'\n *   });\n *\n * This payload is digested by both stores:\n *\n *    CountryStore.dispatchToken = flightDispatcher.register(function(payload) {\n *     if (payload.actionType === 'country-update') {\n *       CountryStore.country = payload.selectedCountry;\n *     }\n *   });\n *\n * When the callback to update `CountryStore` is registered, we save a reference\n * to the returned token. Using this token with `waitFor()`, we can guarantee\n * that `CountryStore` is updated before the callback that updates `CityStore`\n * needs to query its data.\n *\n *   CityStore.dispatchToken = flightDispatcher.register(function(payload) {\n *     if (payload.actionType === 'country-update') {\n *       // `CountryStore.country` may not be updated.\n *       flightDispatcher.waitFor([CountryStore.dispatchToken]);\n *       // `CountryStore.country` is now guaranteed to be updated.\n *\n *       // Select the default city for the new country\n *       CityStore.city = getDefaultCityForCountry(CountryStore.country);\n *     }\n *   });\n *\n * The usage of `waitFor()` can be chained, for example:\n *\n *   FlightPriceStore.dispatchToken =\n *     flightDispatcher.register(function(payload) {\n *       switch (payload.actionType) {\n *         case 'country-update':\n *           flightDispatcher.waitFor([CityStore.dispatchToken]);\n *           FlightPriceStore.price =\n *             getFlightPriceStore(CountryStore.country, CityStore.city);\n *           break;\n *\n *         case 'city-update':\n *           FlightPriceStore.price =\n *             FlightPriceStore(CountryStore.country, CityStore.city);\n *           break;\n *     }\n *   });\n *\n * The `country-update` payload will be guaranteed to invoke the stores'\n * registered callbacks in order: `CountryStore`, `CityStore`, then\n * `FlightPriceStore`.\n */\n\n  function Dispatcher() {\n    this.$Dispatcher_callbacks = {};\n    this.$Dispatcher_isPending = {};\n    this.$Dispatcher_isHandled = {};\n    this.$Dispatcher_isDispatching = false;\n    this.$Dispatcher_pendingPayload = null;\n  }\n\n  /**\n   * Registers a callback to be invoked with every dispatched payload. Returns\n   * a token that can be used with `waitFor()`.\n   *\n   * @param {function} callback\n   * @return {string}\n   */\n  Dispatcher.prototype.register=function(callback) {\n    var id = _prefix + _lastID++;\n    this.$Dispatcher_callbacks[id] = callback;\n    return id;\n  };\n\n  /**\n   * Removes a callback based on its token.\n   *\n   * @param {string} id\n   */\n  Dispatcher.prototype.unregister=function(id) {\n    invariant(\n      this.$Dispatcher_callbacks[id],\n      'Dispatcher.unregister(...): `%s` does not map to a registered callback.',\n      id\n    );\n    delete this.$Dispatcher_callbacks[id];\n  };\n\n  /**\n   * Waits for the callbacks specified to be invoked before continuing execution\n   * of the current callback. This method should only be used by a callback in\n   * response to a dispatched payload.\n   *\n   * @param {array<string>} ids\n   */\n  Dispatcher.prototype.waitFor=function(ids) {\n    invariant(\n      this.$Dispatcher_isDispatching,\n      'Dispatcher.waitFor(...): Must be invoked while dispatching.'\n    );\n    for (var ii = 0; ii < ids.length; ii++) {\n      var id = ids[ii];\n      if (this.$Dispatcher_isPending[id]) {\n        invariant(\n          this.$Dispatcher_isHandled[id],\n          'Dispatcher.waitFor(...): Circular dependency detected while ' +\n          'waiting for `%s`.',\n          id\n        );\n        continue;\n      }\n      invariant(\n        this.$Dispatcher_callbacks[id],\n        'Dispatcher.waitFor(...): `%s` does not map to a registered callback.',\n        id\n      );\n      this.$Dispatcher_invokeCallback(id);\n    }\n  };\n\n  /**\n   * Dispatches a payload to all registered callbacks.\n   *\n   * @param {object} payload\n   */\n  Dispatcher.prototype.dispatch=function(payload) {\n    invariant(\n      !this.$Dispatcher_isDispatching,\n      'Dispatch.dispatch(...): Cannot dispatch in the middle of a dispatch.'\n    );\n    this.$Dispatcher_startDispatching(payload);\n    try {\n      for (var id in this.$Dispatcher_callbacks) {\n        if (this.$Dispatcher_isPending[id]) {\n          continue;\n        }\n        this.$Dispatcher_invokeCallback(id);\n      }\n    } finally {\n      this.$Dispatcher_stopDispatching();\n    }\n  };\n\n  /**\n   * Is this Dispatcher currently dispatching.\n   *\n   * @return {boolean}\n   */\n  Dispatcher.prototype.isDispatching=function() {\n    return this.$Dispatcher_isDispatching;\n  };\n\n  /**\n   * Call the callback stored with the given id. Also do some internal\n   * bookkeeping.\n   *\n   * @param {string} id\n   * @internal\n   */\n  Dispatcher.prototype.$Dispatcher_invokeCallback=function(id) {\n    this.$Dispatcher_isPending[id] = true;\n    this.$Dispatcher_callbacks[id](this.$Dispatcher_pendingPayload);\n    this.$Dispatcher_isHandled[id] = true;\n  };\n\n  /**\n   * Set up bookkeeping needed when dispatching.\n   *\n   * @param {object} payload\n   * @internal\n   */\n  Dispatcher.prototype.$Dispatcher_startDispatching=function(payload) {\n    for (var id in this.$Dispatcher_callbacks) {\n      this.$Dispatcher_isPending[id] = false;\n      this.$Dispatcher_isHandled[id] = false;\n    }\n    this.$Dispatcher_pendingPayload = payload;\n    this.$Dispatcher_isDispatching = true;\n  };\n\n  /**\n   * Clear bookkeeping used for dispatching.\n   *\n   * @internal\n   */\n  Dispatcher.prototype.$Dispatcher_stopDispatching=function() {\n    this.$Dispatcher_pendingPayload = null;\n    this.$Dispatcher_isDispatching = false;\n  };\n\n\nmodule.exports = Dispatcher;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flux/lib/Dispatcher.js\n ** module id = 167\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (false) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flux/lib/invariant.js\n ** module id = 168\n ** module chunks = 0\n **/","var constants = {};\nvar keyMirror = require('keymirror');\n\nconstants.actions = keyMirror({\n  RECEIVE_BIKE_DATA: null,\n  RECEIVE_DATA: null,\n  LOAD_DATA: null,\n  RECEIVE_LINE_DATA: null\n});\n\n\n\nmodule.exports = constants;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/constants/D3Constants.js\n ** module id = 169\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n\"use strict\";\n\n/**\n * Constructs an enumeration with keys equal to their value.\n *\n * For example:\n *\n *   var COLORS = keyMirror({blue: null, red: null});\n *   var myColor = COLORS.blue;\n *   var isColorValid = !!COLORS[myColor];\n *\n * The last line could not be performed if the values of the generated enum were\n * not equal to their keys.\n *\n *   Input:  {key1: val1, key2: val2}\n *   Output: {key1: key1, key2: key2}\n *\n * @param {object} obj\n * @return {object}\n */\nvar keyMirror = function(obj) {\n  var ret = {};\n  var key;\n  if (!(obj instanceof Object && !Array.isArray(obj))) {\n    throw new Error('keyMirror(...): Argument must be an object.');\n  }\n  for (key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    ret[key] = key;\n  }\n  return ret;\n};\n\nmodule.exports = keyMirror;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/keymirror/index.js\n ** module id = 170\n ** module chunks = 0\n **/","//\nvar d3 = require('d3');\n\nvar Utils = {};\n\nUtils.pluck = function(obj, key){\n  return obj.map(function(element, index){\n    return element[key];\n  });\n};\n\n// have all server queries here!\nUtils.getAllMessages = function(){\n  // gets messages from localstorage.\n  // as if from database.\n  var saved_messages = JSON.parse(localStorage.getItem('saved_messages'));\n  // have messages, now call action.\n  D3ServerAction.receiveAll(saved_messages, 1);\n};\n\nUtils.getAllOtherMessages = function(){\n  var saved_messages = JSON.parse(localStorage.getItem('saved_messages2'));\n  // have messages, now call action.\n  D3ServerAction.receiveAll(saved_messages, 2);\n};\nUtils.getBubbleData = function(id, start_date, end_date){\n  var D3ServerAction = require('../actions/D3ServerAction');\n  if(id === \"4\"){\n    d3.json(\"/api/bikes?order=desc&start_date=\"+start_date+\"&end_date=\"+end_date, function(data){\n      data = data.aggregations.filter_by_date.rides_per_bike.buckets;\n      D3ServerAction.receiveBubble(data, id);\n    });\n  }\n};\nUtils.getLineData = function(id, start_date, end_date){\n  var D3ServerAction = require('../actions/D3ServerAction');\n  if(id === \"5\"){\n    \n    d3.xhr('/api/trip/station_activity')\n        .header(\"Content-Type\", \"application/json\")\n        .post(\n            JSON.stringify({start_date: start_date, end_date: end_date}),\n            function(err, rawData){\n                var array = JSON.parse(rawData.response).aggregations.activity_per_station.buckets;\n                    D3ServerAction.receiveLine(array, id);\n                }\n        );\n  }\n};\nUtils.getServerData = function(id, start_date, end_date){\n  console.log(\"returning for id \", id);\n  // instead get from db based on id, and promisify!!\n  //var saved_messages = JSON.parse(localStorage.getItem('saved_messages' + id));\n  var D3ServerAction = require('../actions/D3ServerAction');\n  if(id === \"1\"){\n    d3.json(\"/api/bikes?size=10&order=desc&start_date=\"+start_date+\"&end_date=\"+end_date, function(data){\n      data = data.aggregations.filter_by_date.rides_per_bike.buckets;\n      D3ServerAction.receiveAll(data, id);\n    });\n  }\n  else if(id===\"2\"){\n    d3.json(\"/api/bikes?size=10&order=asc&start_date=\"+start_date+\"&end_date=\"+end_date, function(data){\n      data = data.aggregations.filter_by_date.rides_per_bike.buckets;\n      D3ServerAction.receiveAll(data, id);\n    }); \n  }\n  else if(id===\"3\"){\n    d3.json(\"/api/bikes?order=desc&start_date=\"+start_date+\"&end_date=\"+end_date, function(data){\n      var group = 70;\n      data = data.aggregations.filter_by_date.rides_per_bike.buckets;\n      g=[];\n      var num = 1;\n      while(data.length>0){\n        var arr = Utils.pluck(data.splice(0, group), \"doc_count\");\n        var value = arr.reduce(function(memo, element){\n          return memo + element;\n        }, 0)/group; // avg\n        g.push({doc_count: value, key: num});\n        num++;\n      }\n      data = g;\n      D3ServerAction.receiveAll(data, id);\n    }); \n    \n  } \n  // have messages, now call action.\n  // return saved_messages;\n  //D3ServerAction.readyToReceive(saved_messages, id); \n};\n\n\nmodule.exports = Utils; \n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/utils/WebAPIUtils.js\n ** module id = 171\n ** module chunks = 0\n **/","var D3Dispatcher = require('../dispatcher/D3Dispatcher');\nvar Constants = require('../constants/D3Constants');\nvar WebAPIUtils = require('../utils/WebAPIUtils');\n \nvar actions = Constants.actions;\n \nmodule.exports = {\n  receiveAll: function (data, data_for) {\n    D3Dispatcher.dispatch({\n      type: actions.RECEIVE_DATA,\n      data: data,\n      data_for: data_for\n    });\n  },\n  receiveBubble: function (data, data_for) {\n    D3Dispatcher.dispatch({\n      type: actions.RECEIVE_BUBBLE_DATA,\n      data: data,\n      data_for: data_for\n    });\n  },\n  receiveLine: function (data, data_for) {\n    D3Dispatcher.dispatch({\n      type: actions.RECEIVE_LINE_DATA,\n      data: data,\n      data_for: data_for\n    });\n  },\n  readyToReceive: function(data_for, start_date, end_date) {\n    // promisify this.. and .then.. do dispatch.\n    //var data = \n    WebAPIUtils.getServerData(data_for, start_date, end_date);\n    // console.log(\"DATA IS \", data);\n    // D3Dispatcher.dispatch({\n    //   type: actions.RECEIVE_DATA,\n    //   data: data, \n    //   data_for: data_for\n    // }); \n  }, \n\n  readyToReceiveBubble: function(data_for, start_date, end_date) {\n    // promisify this.. and .then.. do dispatch.\n    WebAPIUtils.getBubbleData(data_for, start_date, end_date);\n    // var data = WebAPIUtils.getServerData(data_for);\n    // console.log(\"DATA IS\", data);\n    // D3Dispatcher.dispatch({\n    //   type: actions.RECEIVE_BUBBLE_DATA,\n    //   data: data,\n    //   data_for: data_for\n    // });\n  },\n\n  readyToReceiveLine: function(data_for, start_date, end_date) {\n    // promisify this.. and .then.. do dispatch.\n    WebAPIUtils.getLineData(data_for, start_date, end_date);\n    // console.log(\"DATA IS bb\", data);\n    // D3Dispatcher.dispatch({\n    //   type: actions.RECEIVE_LINE_DATA,\n    //   data: data,\n    //   data_for: data_for\n    // });\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/actions/D3ServerAction.js\n ** module id = 172\n ** module chunks = 0\n **/","var d3 = require('d3');\n\nmodule.exports = {\n  calculatePosition: function(width, height, data, x_key, y_key){\n\n    var min_x = d3.min(data, function(d) { return d[x_key]; })\n    var max_x = d3.max(data, function(d) { return d[x_key]; })\n\n    var min_y = d3.min(data, function(d) { return d[y_key]; })\n    var max_y = d3.max(data, function(d) { return d[y_key]; })\n\n    var data_size= data.length;\n\n    var y_values = data.map(function(d) { return d[y_key]; })\n    var x_values = data.map(function(d) { return d[x_key]; })\n\n    var domain = {\n      x: [min_x, max_x],\n      y: [min_y, max_y]\n    };\n    return {domains: domain, data_length: data_size, x_values: x_values, y_values: y_values };\n  },\n  setupTooltip: function(parentNode){\n    var tooltip = d3.select(parentNode).append(\"div\");\n    tooltip.attr(\"class\", \"tooltip top-right\");\n    tooltip.append(\"div\").attr(\"class\", \"tooltip-inner\");\n    tooltip.style(\"opacity\", 0);\n    return tooltip;\n  },\n  calculateColor: function(domain, range){\n    if(range){\n      var color = d3.scale.linear()\n      .domain(domain)\n      .range(range);  \n    } else {\n      var color = d3.scale.category10()\n      .domain(domain);\n    }\n    \n\n    return color;\n  },\n  calculateRadius: function(domain, range){\n    var rScale = d3.scale.linear()\n       .domain(domain)\n       .range(range);\n    return rScale;\n  }\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/utils/D3Utils.js\n ** module id = 173\n ** module chunks = 0\n **/","/** @jsx React.DOM */var React = require('react');\n//var ViewActionCreators = require('../actions/ViewActionCreators');\nvar d3 = require('d3');\n\nvar XAxis = React.createClass({\n  componentDidMount: function() {\n\n    // wrap element in d3\n    \n    var axis = d3.svg.axis().scale(this.props.x).orient(this.props.orient || 'top').tickSize(-this.props['height']);\n    this.d3Node = d3.select(this.getDOMNode());\n\n    this.d3Node.transition()\n               .duration(2000)\n               .style(\"opacity\", this.props.sorted);\n\n    if(this.props.orient === 'bottom'){\n      this.d3Node\n        .transition()\n        .duration(2000)\n        .attr(\"transform\", \"translate(0,\" + this.props['height']  + \")\")\n    }\n\n    this.d3Node\n       .call(axis);\n\n  },\n  shouldComponentUpdate: function(nextProps) {\n    // if (nextProps.data.update) {\n    //   this.d3Node.datum(nextProps.data);\n    // }\n    var axis = d3.svg.axis().scale(nextProps.x).orient(this.props.orient || 'top').tickSize(-nextProps['height']);\n    this.d3Node = d3.select(this.getDOMNode());\n\n    this.d3Node.transition()\n               .duration(2000)\n               .style(\"opacity\", nextProps.sorted);\n    \n    this.d3Node\n       .call(axis);\n\n    if(nextProps.orient === 'bottom'){\n      this.d3Node\n        .transition()\n        .duration(2000)\n        .attr(\"transform\", \"translate(0,\" + nextProps['height']  + \")\")\n    }\n\n    return true;\n  },\n  // componentDidUpate() {\n  //   this.d3Node.datum(this.props.data);\n  // },\n  // componentWillUnMount() {\n\n  // },\n  render: function() {\n    return (\n      <g className=\"x axis\" />\n    );\n  }\n});\n\nmodule.exports = XAxis;\n\n\n/** WEBPACK FOOTER **\n ** ./client/js/components/XAxis.react.jsx\n **/","/** @jsx React.DOM */var React = require('react');\n//var ViewActionCreators = require('../actions/ViewActionCreators');\nvar d3 = require('d3');\n\nvar YAxis = React.createClass({\n  componentDidMount: function() {\n\n    // wrap element in d3\n    var yAxis = d3.svg.axis().scale(this.props.y).orient(\"left\").tickSize(0);\n    this.d3Node = d3.select(this.getDOMNode());\n\n    this.d3Node.transition()\n               .duration(2000)\n               .style(\"opacity\", this.props.sorted);\n\n\n    this.d3Node\n       .call(yAxis);\n\n  },\n  shouldComponentUpdate: function(nextProps) {\n    var yAxis = d3.svg.axis().scale(nextProps.y).orient(\"left\").tickSize(0);\n    this.d3Node = d3.select(this.getDOMNode());\n\n    this.d3Node.transition()\n               .duration(2000)\n               .style(\"opacity\", nextProps.sorted);\n    \n    this.d3Node\n       .call(yAxis);\n\n    return true;\n  },\n  // componentDidUpate() {\n  //   this.d3Node.datum(this.props.data);\n  // },\n  // componentWillUnMount() {\n\n  // },\n  render: function() {\n    return (\n      <g className=\"y axis\" />\n    );\n  }\n});\n\nmodule.exports = YAxis;\n\n\n/** WEBPACK FOOTER **\n ** ./client/js/components/YAxis.react.jsx\n **/","/** @jsx React.DOM */var React = require('react');\nvar Circle = require('./Circle.react');\nvar BubbleChartStore = require('../stores/BubbleChartStore');\nvar d3 = require('d3');\nvar Utils = require('../utils/WebAPIUtils');\nvar D3Utils = require('../utils/D3Utils');\nvar XAxis = require('./XAxis.react');\nvar YAxis = require('./YAxis.react');\nvar Legend = require('./Legend.react');\nvar D3ServerAction = require('../actions/D3ServerAction');\n\n\nvar CHANGE_EVENT=\"change\";\n\nvar BubbleChart = React.createClass({\n  getInitialState: function(){\n\n    // get data from server.\n    //D3ServerAction.readyToReceive(this.props.id);\n    \n    return{\n      bars: [],//BubbleChartStore.getAll(this.props.id),\n      width: this.props.width,\n      height: this.props.height,\n      sorted: 0,\n      start_date: \"12/18/2013 00:00\",\n      end_date: \"12/19/2013 00:00\"\n    };\n  },\n  getDefaultProps: function(){\n    return {\n      width: '500',\n      height: '200',\n    };\n  },\n  // componentWillMount: function(){\n\n  // },\n  updateDimensions: function(){\n    setTimeout(function(){\n      var el = React.findDOMNode(this);\n      var d3node = d3.select(el);\n      //console.log(\"AND HERE \", d3node.node().parentNode.offsetWidth);\n      this.setState({width: d3node.node().parentNode.offsetWidth});\n    }.bind(this),500);  \n  },\n  setupChart: function(){\n    var el = React.findDOMNode(this);\n    var d3node = d3.select(el);\n    var parentNode = d3node.node().parentNode;\n\n    this.state.tooltip = D3Utils.setupTooltip(parentNode);\n    this.state.width = parentNode.offsetWidth;\n    d3node.select('g')\n      .attr(\"transform\", \"translate(\" + 20 + \",\" + 20 + \")\");\n  },\n  componentWillMount: function(){\n    console.log(\"HERE \"+ this.props.id)\n    D3ServerAction.readyToReceiveBubble(this.props.id, this.state.start_date, this.state.end_date);\n    //Utils.getServerData(this.props.id);\n  },\n  componentDidMount: function(){\n    BubbleChartStore.addChangeListener(this._onChange);\n    /**\n    When creating callbacks in JavaScript, you usually need to explicitly \n    bind a method to its instance such that the value of this is correct. \n    With React, every method is automatically bound to its component instance. \n    React caches the bound method such that it's extremely CPU and memory efficient. \n    It's also less typing!\n\n    That's why you don't need to do , this.updateDimensions.bind(this)\n    */\n    window.addEventListener(\"resize\", this.updateDimensions);\n    // need this to re-render after we change the width\n    this.setupChart();\n    this._onChange();\n  },\n  setup_scales: function(domains){\n\n    var x = d3.scale.linear()\n       .range([0, this.state.width - 50])\n       .domain([0, domains.domains.y[1]]);\n\n\n    var y = d3.scale.linear()\n      .range([20, this.state.height - 40])\n      .domain(domains.domains.x);\n\n    return {x: x,y: y};\n  },\n  componentDidUpdate: function(){\n    if(this.state.bars){\n      this.setupChart();\n    }\n  },\n  _onClick: function(){\n    //sorting.\n    this.setState({\n      sorted: Math.abs(this.state.sorted  - 1),\n    })\n  },\n  render: function () {\n    var svgStyle = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n    if(this.state.bars && this.state.bars.length > 0){\n\n        var setup = D3Utils.calculatePosition(this.state.width, this.state.height, this.state.bars, \"doc_count\", \"key\");\n        var colors = D3Utils.calculateColor([0, 500, 1000], [\"red\", \"yellow\", \"green\"]);\n        // setup.domains.x[1] is the maximum x;\n        var radius = D3Utils.calculateRadius([0, setup.domains.x[1]], [1, 20]);\n        var scales = this.setup_scales(setup);\n        \n        var Circles = this.state.bars.map(function(bar, i) {\n            return (<Circle key={bar.key} data={bar} domains={setup} scales={scales} radius={radius} color={colors} tooltip={this.state.tooltip} sorted={this.state.sorted}/>);\n        }, this);\n\n        var LegendItems = colors.domain().map(function(color, index){\n          return  (<Legend data={color} colors={colors} width={this.state.width} index={index}/>)\n        }, this);\n        //console.log(\"ERROR?FF\")\n        return (\n          <div style={{width:'100%'}}>\n            <button onClick={this._onClick}>SORT</button>\n            <svg style={svgStyle}>            \n              <g className=\"graph\">\n                {{Circles}}\n                <XAxis height={this.state.height} x={scales.x} sorted={this.state.sorted}/>\n                <YAxis width={this.state.width} y={scales.y} sorted={this.state.sorted}/>\n                <g class=\"legend\">\n                  {{LegendItems}}\n                </g>\n              </g>\n            </svg>\n          </div>\n        );\n    } else {\n      return (<div></div>);\n    }\n  },\n  _onChange: function(){\n    this.setState({\n       bars: BubbleChartStore.getAll(this.props.id)\n     });\n  }\n});\n\nmodule.exports = BubbleChart;\n\n\n/** WEBPACK FOOTER **\n ** ./client/js/components/BubbleChart.react.jsx\n **/","/** @jsx React.DOM */var React = require('react');\nvar CircleVisualization = require('../visualizations/CircleVisualization');\n//var ViewActionCreators = require('../actions/ViewActionCreators');\nvar d3 = require('d3');\n\nvar Circle = React.createClass({\n  componentDidMount: function() {\n    // console.log(\"updating here\");\n    this.d3Node = d3.select(this.getDOMNode());\n    this.d3Node.datum(this.props.data)\n      .call(CircleVisualization.enter,this.props.domains, this.props.scales, this.props.radius, this.props.color, this.props.tooltip);\n  },\n  shouldComponentUpdate: function(nextProps) {\n    //console.log(\"CALLED\")\n    this.d3Node = d3.select(this.getDOMNode());\n    this.d3Node.call(CircleVisualization.update,this.props.domains, this.props.scales, this.props.radius, this.props.color, this.props.tooltip,nextProps.sorted, 200);\n    return true;\n  },\n   componentDidUpate: function() {\n    // console.log(\"here in update\");\n   },\n  // componentWillUnMount() {\n\n  // },\n  render: function() {\n    return (\n      <circle className=\"circle\" />\n    );\n  }\n});\n\nmodule.exports = Circle;\n\n\n/** WEBPACK FOOTER **\n ** ./client/js/components/Circle.react.jsx\n **/","var CircleVisualization = {};\n\nCircleVisualization.enter = function (selection, options, scales, rScale, color, tooltip) {\n\n   var x = scales.x;\n   var y = scales.y;\n\n\n    selection\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", function(d) {\n       return rScale(d.doc_count); \n     })\n      .attr(\"cx\", function(d) { return x(Math.random()*options.domains.y[1]); })\n      .attr(\"cy\", function(d) { return y(Math.random()*options.domains.x[1]); })\n      .style(\"fill\", function(d) { return color(d.doc_count); })\n      .on(\"mouseover\", function(d) {\n          tooltip.transition()\n          .duration(200)\n          .style(\"opacity\", .9);\n\n          tooltip.select('.tooltip-inner').html(\"Bike #\"+d.key);\n\n          tooltip\n            .style(\"left\", (d3.event.pageX + 5) + \"px\")\n            .style(\"top\", (d3.event.pageY - 28) + \"px\");\n             \n      })\n      .on(\"mouseout\", function() {\n          // Remove the info text on mouse out.\n           tooltip.transition()\n               .duration(500)\n               .style(\"opacity\", 0);\n      });\n\n\n};\n\nCircleVisualization.update = function (selection, options, scales, rScale, color, tooltip, sorted,  duration) {\n  \n   var x = scales.x;\n   var y = scales.y;\n\n    selection\n      .transition()\n      .duration(duration)\n      .attr(\"r\", function(d) {\n        if(sorted)\n          return 3.5; \n        else\n          return rScale(d.doc_count); \n      })\n      .attr(\"cx\", function(d) { \n        if(sorted)\n          return x(d.key);\n        else\n          return x(Math.random()*options.domains.y[1]); \n      })\n      .attr(\"cy\", function(d) { \n        if(sorted)\n          return y(d.doc_count) \n        else\n          return y(Math.random()*options.domains.x[1]); \n      })\n      .style(\"fill\", function(d) { return color(d.doc_count); })\n\n};\n\n\nmodule.exports = CircleVisualization;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/visualizations/CircleVisualization.js\n ** module id = 178\n ** module chunks = 0\n **/","var assign = require('object-assign');\nvar EventEmitter = require('events').EventEmitter;\nvar D3Dispatcher = require('../dispatcher/D3Dispatcher');\n// var ThreadStore = require('./ThreadStore');\nvar Constants = require('../constants/D3Constants.js');\n\nvar _messages = {};\nvar actions = Constants.actions;\nvar CHANGE_EVENT = \"change\";\n\nfunction _addMessages(data_for, msgs){\n  // will process data first!!!\n  console.log(\"MESSSSSS\", msgs);\n  _messages[data_for] = msgs;\n  _messages[data_for].sort(function(a, b) { return b.doc_count - a.doc_count; });\n}\n\nvar BubbleChartStore = assign({}, EventEmitter.prototype, {\n  \n  emitChange: function(id){\n    this.emit(CHANGE_EVENT, id);\n  },\n  addChangeListener: function(callback){\n    this.on(CHANGE_EVENT, callback);\n  },\n  removeChangeListener: function(){\n    this.removeListener(CHANGE_EVENT, callback);\n  },\n  getAll: function(id){\n    return _messages[id];\n  }\n\n});\n\n\nBubbleChartStore.dispatchToken = D3Dispatcher.register(function(action){\n  switch(action.type){\n\n    case actions.RECEIVE_BUBBLE_DATA:\n      console.log(\"JEREEEEEE\", action.data_for);\n      _addMessages(action.data_for, action.data);\n      console.log(\"after is\");\n      BubbleChartStore.emitChange(action.data_for);\n      break;\n\n    //case actions.LOAD_DATA:\n\n\n    default:\n      // do nothing\n  }\n});\n\nmodule.exports = BubbleChartStore;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/stores/BubbleChartStore.js\n ** module id = 179\n ** module chunks = 0\n **/","/** @jsx React.DOM */var React = require('react');\nvar LegendVisualization = require('../visualizations/LegendVisualization');\n//var ViewActionCreators = require('../actions/ViewActionCreators');\nvar d3 = require('d3');\n\nvar Legend = React.createClass({\n  componentDidMount: function() {\n    // console.log(\"updating here\");\n    this.d3Node = d3.select(this.getDOMNode());\n    this.d3Node.datum(this.props.data)\n      .call(LegendVisualization.enter,this.props.colors, this.props.width, this.props.index);\n  },\n  shouldComponentUpdate: function(nextProps) {\n    this.d3Node = d3.select(this.getDOMNode());\n    this.d3Node.datum(this.props.data)\n      .call(LegendVisualization.update,this.props.colors, this.props.width, this.props.index, 200);\n    return true;\n  },\n  //  componentDidUpate() {\n  //   // console.log(\"here in update\");\n  //  },\n  // componentWillUnMount() {\n\n  // },\n  render: function() {\n    return (\n      <g className=\"legend\" />\n    );\n  }\n});\n\n\n\nmodule.exports = Legend;\n\n\n/** WEBPACK FOOTER **\n ** ./client/js/components/Legend.react.jsx\n **/","var LegendVisualization = {};\n\nLegendVisualization.enter = function (selection, color, width, index) {\n\n\n  selection\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { \n        return \"translate(0,\" + index * 20 + \")\"; \n      });\n\n  selection.append(\"rect\")\n      .attr(\"x\", width - 60)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  selection.append(\"text\")\n      .attr(\"x\", width - 80)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return \">=\"+ d; });\n\n};\n\n\nLegendVisualization.update = function (selection, color, width, index) {\n\n  selection\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", function(d, i) { \n        return \"translate(0,\" + index * 20 + \")\"; \n      });\n\n  selection.select(\"rect\")\n      .attr(\"x\", width - 60)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  selection.select(\"text\")\n      .attr(\"x\", width - 80)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return \">=\"+ d; });\n\n};\n\n\nmodule.exports = LegendVisualization;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/visualizations/LegendVisualization.js\n ** module id = 181\n ** module chunks = 0\n **/","/** @jsx React.DOM */var React = require('react');\nvar Line = require('./Line.react');\nvar LineChartStore = require('../stores/LineChartStore');\nvar d3 = require('d3');\nvar Utils = require('../utils/WebAPIUtils');\nvar D3Utils = require('../utils/D3Utils');\nvar XAxis = require('./XAxis.react');\nvar YAxisLine = require('./YAxisLine.react');\nvar Legend = require('./Legend.react');\nvar D3ServerAction = require('../actions/D3ServerAction');\n\nvar CHANGE_EVENT=\"change\";\nvar parseDate = d3.time.format(\"%m/%d/%Y %H:%M\").parse;\n\nvar getDataFromServer = function(id){\n  // console.log(LineChart.props);\n  var data = LineChartStore.getAll(id);\n  return data;\n}\n\n\n\n\nvar LineChart = React.createClass({\n  getInitialState: function(){\n\n    // get data from server.\n    //D3ServerAction.readyToReceive(this.props.id);\n    // var data = getDataFromServer();\n\n    return{\n      bars: [],//data.raw_data,\n      width: this.props.width,\n      height: this.props.height,\n      activity: [],//data.activity\n      start_date: \"05/06/2014 00:00\",\n      end_date: \"05/07/2014 00:00\"\n    };\n  },\n  getDefaultProps: function(){\n    return {\n      width: '500',\n      height: '500',\n    };\n  },\n  // componentWillMount: function(){\n\n  // },\n  updateDimensions: function(){\n    setTimeout(function(){\n      var el = React.findDOMNode(this);\n      var d3node = d3.select(el);\n      //console.log(\"AND HERE \", d3node.node().parentNode.offsetWidth);\n      this.setState({width: d3node.node().parentNode.offsetWidth});\n    }.bind(this),500);  \n  },\n  setupChart: function(){\n    var el = React.findDOMNode(this);\n    var d3node = d3.select(el);\n    var parentNode = d3node.node().parentNode;\n\n    this.state.tooltip = D3Utils.setupTooltip(parentNode);\n    this.state.width = parentNode.offsetWidth;\n    d3node.select('g')\n      .attr(\"transform\", \"translate(\" + 20 + \",\" + 20 + \")\");\n  },\n  componentWillMount: function(){\n    //console.log(\"HERE IN LINE \", this.props.id);\n    //D3ServerAction.readyToReceiveLine(this.props.id);\n    //Utils.getServerData(this.props.id);\n    \n  },\n  componentDidMount: function(){\n    this.setupChart();\n    this.state.colors = D3Utils.calculateColor([0, 100]);\n    \n    D3ServerAction.readyToReceiveLine(this.props.id, this.state.start_date, this.state.end_date);\n    LineChartStore.addChangeListener(this._onChange);\n    \n    /**\n    When creating callbacks in JavaScript, you usually need to explicitly \n    bind a method to its instance such that the value of this is correct. \n    With React, every method is automatically bound to its component instance. \n    React caches the bound method such that it's extremely CPU and memory efficient. \n    It's also less typing!\n\n    That's why you don't need to do , this.updateDimensions.bind(this)\n    */\n    window.addEventListener(\"resize\", this.updateDimensions);\n    // need this to re-render after we change the width\n    \n    //this._onChange();\n  },\n  setup_scales: function(domains){\n    var x = d3.time.scale()\n       .range([0, this.state.width - 80])\n       .domain([parseDate(this.state.start_date), parseDate(this.state.end_date)]);\n\n    var ydomain = [\n            0,\n            d3.max(this.state.activity, function(c) { \n              if(c.visible)\n                return d3.max(c.values, function(v) { return v.activity; }); \n              else\n                return 0;\n            })\n          ]\n    var y = d3.scale.linear()\n      .range([this.state.height , 0])\n      .domain(ydomain);\n    // console.log(\"MAX Y IS \", ydomain[1]);\n    // console.log(\"HEIGHT IS \", this.state.height);\n    // console.log(\"draw at \", y(ydomain[1]));\n    this.state.scales = {x: x,y: y};\n\n    return {x: x,y: y};\n  },\n  componentDidUpdate: function(){\n    if(this.state.bars){\n      this.setupChart();\n      var context = this;\n      d3.select('#mouse_tracker').on('mousemove', function(){\n        //console.log(\"CALLED AGAIN??\", this);\n        var bisectDate = d3.bisector(function(d) {\n           return d.date; \n         }).left;\n\n        var el = React.findDOMNode(context);\n        var d3node = d3.select(el);\n        var mouse_x = d3.mouse(this)[0] // Finding mouse x position on rect\n        var graph_x = context.state.scales.x.invert(mouse_x); // \n        var format = d3.time.format('%b %Y'); // Format hover date text to show three letter month and full year\n         /* d3.mouse(this)[0] returns the x position on the screen of the mouse. xScale.invert function is reversing the process that we use to map the domain (date) to range (position on screen). So it takes the position on the screen and converts it into an equivalent date! */\n        \n        d3node\n        .selectAll(\".tooltip2\").text(function(d){\n\n           i = bisectDate(d.values, graph_x, 0); // use our bisectDate function that we declared earlier to find the index of our data array that is close to the mouse cursor\n           d0 = d.values[i - 1];\n           d1 = d.values[i];\n           if(d1 && d0)\n             d = graph_x - d0.date > d1.date - graph_x ? d1 : d0;\n           else if(d0)\n             d = d0;\n           else\n             d={activity: null};\n\n           return (d.activity);\n        });\n      });\n    }\n  },\n  render: function () {\n    console.log(\"re-rendering\")\n    var svgStyle = {\n      width: this.state.width,\n      height: Number(this.state.height) + 50,\n    };\n    if(this.state.bars && this.state.bars.length > 0){\n\n        //console.log(this.state.activity);\n\n        var el = React.findDOMNode(this);\n        var d3node = d3.select(el);\n\n        var setup = {}//D3Utils.calculatePosition(this.state.width, this.state.height, this.state.bars, \"doc_count\", \"key\");\n        var scales = this.setup_scales(setup);\n\n        \n        setup.start_date = this.state.start_date;\n        setup.end_date = this.state.end_date;\n        \n        var Lines = this.state.activity.map(function(bar, i) {\n            return (<Line key={bar.key} data={bar} domains={setup} scales={this.state.scales} color={this.state.colors} tooltip={this.state.tooltip} activity={this.state.activity} width={this.state.width} index={i} parent={d3node} view={this}/>);\n        }, this);\n\n  \n        return (\n            <svg style={svgStyle}>            \n              <g className=\"graph\">\n                <rect id=\"mouse_tracker\" width={this.state.width} height={this.state.height} x=\"0\" y=\"0\" className=\"mouse-tracker\" style={{fill:'white'}}></rect>\n                {{Lines}}\n                <XAxis height={this.state.height} x={this.state.scales.x} orient=\"bottom\"/>\n                <YAxisLine width={this.state.width} y={this.state.scales.y}/>\n              </g>\n            </svg>\n        );\n    } else {\n      return (<div></div>);\n    }\n  },\n  _onChange: function(){\n    //console.log(\"in change\");\n    var data = getDataFromServer(this.props.id);\n    //console.log(\"DATA is \", data);\n    this.setState({\n       bars: data.raw_data,\n       activity: data.activity\n     });\n  },\n\n});\n\nmodule.exports = LineChart;\n\n\n/** WEBPACK FOOTER **\n ** ./client/js/components/LineChart.react.jsx\n **/","/** @jsx React.DOM */var React = require('react');\nvar LineVisualization = require('../visualizations/LineVisualization');\n//var ViewActionCreators = require('../actions/ViewActionCreators');\nvar d3 = require('d3');\n\nvar Line = React.createClass({\n  componentDidMount: function() {\n    // console.log(\"updating here\");\n    this.d3Node = d3.select(this.getDOMNode());\n    this.d3Node.datum(this.props.data)\n      .call(LineVisualization.enter,this.props.domains, this.props.scales, this.props.radius, this.props.color, this.props.tooltip, this.props.activity, this.props.width, this.props.index, this.props.parent, this.props.view)\n      \n      //.call(Legend.....)\n  },\n  shouldComponentUpdate: function(nextProps) {\n    //console.log(\"CALLED\")\n     this.d3Node = d3.select(this.getDOMNode())\n     this.d3Node//.datum(this.props.data)\n     .call(LineVisualization.update,this.props.domains, nextProps.scales, this.props.radius, this.props.color, this.props.tooltip, nextProps.activity, nextProps.width, this.props.index, this.props.parent, this.props.view, 200)\n\n     return true;\n  },\n   componentDidUpate: function() {\n    // console.log(\"here in update\");\n   },\n  // componentWillUnMount() {\n\n  // },\n  render: function() {\n    return (\n      <g className=\"city\" />\n    );\n  }\n});\n\nmodule.exports = Line;\n\n\n/** WEBPACK FOOTER **\n ** ./client/js/components/Line.react.jsx\n **/","var LineVisualization = {};\n\nfunction findMaxY(data){  // Define function \"findMaxY\"\n      var maxYValues = data.map(function(d) { \n        if (d.visible){\n          return d3.max(d.values, function(value) { // Return max rating value\n            return value.activity; })\n        }\n      });\n      return d3.max(maxYValues);\n  }\n\n  \n\nLineVisualization.enter = function (selection, options, scales, rScale, color, tooltip, activity, width, index, parent, view) {\n\n   var x = scales.x;\n   var y = scales.y;\n\n   var line = d3.svg.line()\n        .interpolate(\"cardinal\")\n        .x(function(d) { return x(d.date); })\n        .y(function(d) { \n          console.log(\"activity\" + d.activity + \"is \"+ y(d.activity))\n          console.log(\"and x is \", d.date);\n          return y(d.activity); \n        })\n   \n   var legendSpace = 450 / activity.length; \n\n   selection\n   .append(\"rect\")\n   .attr(\"width\", 10)\n   .attr(\"height\", 10)                                    \n   .attr(\"x\", width - 80) \n   .attr(\"y\", function (d, i) { return (legendSpace)+index*(legendSpace) - 8; })  // spacing\n   .attr(\"fill\",function(d) {\n     return d.visible ? color(d.name) : \"#F1F1F2\"; // If array key \"visible\" = true then color rect, if not then make it grey \n   })\n   .attr(\"class\", \"legend-box\")\n\n   .on(\"click\", function(d){ // On click make d.visible \n     d.visible = !d.visible; // If array key for this data selection is \"visible\" = true then make it false, if false then make it true\n\n     var maxY = findMaxY(activity); // Find max Y rating value categories data with \"visible\"; true\n     y.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n     \n      view.setState({\n       scales: {x: x,y: y}\n      });\n     \n     selection.select(\"path\")\n       .transition()\n       .duration(500)\n       .attr(\"d\", function(d){\n         return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n       });\n\n     selection.select(\"rect\")\n       .transition()\n       .duration(500)\n       .attr(\"fill\", function(d) {\n       return d.visible ? color(d.name) : \"#F1F1F2\";\n     });\n   })\n\n   .on(\"mouseover\", function(d){\n\n     d3.select(this)\n       .transition()\n       .attr(\"fill\", function(d) { return color(d.name); });\n\n     d3.select(\"#line-\" + d.name)\n       .transition()\n       .style(\"stroke-width\", 2.5);  \n   })\n\n   .on(\"mouseout\", function(d){\n\n     d3.select(this)\n       .transition()\n       .attr(\"fill\", function(d) {\n       return d.visible ? color(d.name) : \"#F1F1F2\";});\n\n     d3.select(\"#line-\" + d.name)\n       .transition()\n       .style(\"stroke-width\", 1.5);\n   });\n   \n\n   selection.append(\"text\")\n       .attr(\"x\", width - 50) \n       .attr(\"y\", function (d, i) { return (legendSpace)+index*(legendSpace); })  // (return (11.25/2 =) 5.625) + i * (5.625) \n       .text(function(d) { return d.name; }); \n\n  selection.append(\"text\") // http://stackoverflow.com/questions/22064083/d3-js-multi-series-chart-with-y-value-tracking\n        .attr(\"class\", \"tooltip2\")\n        .attr(\"x\", width - 100) // position tooltips  \n        .attr(\"y\", function (d, i) {\n         return (legendSpace)+index*(legendSpace); \n         })\n\n   selection.append(\"path\")\n       .attr(\"class\", \"line\")\n       .style(\"stroke\", function(d) { return color(Number(d.name)); })\n       .attr(\"id\", function(d) {\n         return \"line-\" + d.name; // Give line id of line-(insert issue name, with any spaces replaced with no spaces)\n       })\n       .attr(\"d\", function(d) { \n         return d.visible ? line(d.values) : null; // If array key \"visible\" = true then draw line, if not then don't \n       })\n       .on(\"mouseover\", function(d) {\n           tooltip.transition()\n           .duration(200)\n           .style(\"opacity\", .9);\n\n           tooltip.select('.tooltip-inner').html(\"Station #\"+d.name);\n\n           tooltip\n             .style(\"left\", (d3.event.pageX + 5) + \"px\")\n             .style(\"top\", (d3.event.pageY - 28) + \"px\");\n              \n       })\n       .on(\"mouseout\", function() {\n           // Remove the info text on mouse out.\n            tooltip.transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n       });    \n\n};\n\nLineVisualization.update = function (selection, options, scales, rScale, color, tooltip, activity, width, index, parent, view) {\n    \n     var x = scales.x;\n     var y = scales.y;\n\n     var legendSpace = 450 / activity.length; \n\n     var line = d3.svg.line()\n          .interpolate(\"cardinal\")\n          .x(function(d) { return x(d.date); })\n          .y(function(d) { \n            return y(d.activity); \n          })\n\n     selection\n     .select(\"rect\")\n     .attr(\"width\", 10)\n     .attr(\"height\", 10)                                    \n     .attr(\"x\", width - 80) \n     .attr(\"y\", function (d, i) { return (legendSpace)+index*(legendSpace) - 8; })  // spacing\n     .attr(\"fill\",function(d) {\n       return d.visible ? color(d.name) : \"#F1F1F2\"; // If array key \"visible\" = true then color rect, if not then make it grey \n     })\n     .attr(\"class\", \"legend-box\")\n\n     .on(\"click\", function(d){ // On click make d.visible \n       d.visible = !d.visible; // If array key for this data selection is \"visible\" = true then make it false, if false then make it true\n\n       var maxY = findMaxY(activity); // Find max Y rating value categories data with \"visible\"; true\n     \n       y.domain([0,maxY]); // Redefine yAxis domain based on highest y value of categories data with \"visible\"; true\n        view.setState({\n         scales: {x: x,y: y}\n        })\n\n      selection\n        .select(\"path\")\n         .style(\"opacity\", 0)\n         .attr(\"d\", function(d){\n           return d.visible ? line(d.values) : null; // If d.visible is true then draw line for this d selection\n         })\n         .transition()\n         .duration(1000)\n         .style(\"opacity\", 1);\n\n       selection.select(\"rect\")\n         .transition()\n         .duration(5000)\n         .attr(\"fill\", function(d) {\n         return d.visible ? color(d.name) : \"#F1F1F2\";\n       });\n     });\n\n     selection.select(\"text\")\n         .attr(\"x\", width - 50) \n         .attr(\"y\", function (d, i) {\n\n           return (legendSpace)+index*(legendSpace); \n          })  // (return (11.25/2 =) 5.625) + i * (5.625) \n         .text(function(d) { return d.name; }); \n\n    selection.select(\".tooltip2\") // http://stackoverflow.com/questions/22064083/d3-js-multi-series-chart-with-y-value-tracking\n          .attr(\"x\", width - 100) // position tooltips  \n          .attr(\"y\", function (d, i) {\n           return (legendSpace)+index*(legendSpace); \n           });\n        \n     selection.select(\"path\")\n        .transition()\n        .duration(1000)\n         .attr(\"d\", function(d) { \n           return d.visible ? line(d.values) : null; // If array key \"visible\" = true then draw line, if not then don't \n         });\n  \n};\n\n\nmodule.exports = LineVisualization;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/visualizations/LineVisualization.js\n ** module id = 184\n ** module chunks = 0\n **/","var assign = require('object-assign');\nvar EventEmitter = require('events').EventEmitter;\nvar D3Dispatcher = require('../dispatcher/D3Dispatcher');\n// var ThreadStore = require('./ThreadStore');\nvar Constants = require('../constants/D3Constants.js');\nvar d3 = require('d3');\nvar _messages = {};\nvar actions = Constants.actions;\nvar CHANGE_EVENT = \"change\";\n\nvar parseDate = d3.time.format(\"%m/%d/%Y %H:%M\").parse;\n\nfunction _addMessages(data_for, msgs){\n  // will process data first!!!\n  //msgs = JSON.parse(msgs).aggregations.activity_per_station.buckets;\n  var activity = msgs.map(function(station) {\n    return {\n      name: station.key,\n      values: station.activity_per_hour.buckets.map(function(d) {\n        return {date: parseDate(d.key_as_string), activity: +d.doc_count};\n      }),\n      visible: true\n    };\n  });\n\n  _messages[data_for] = {\n      raw_data: msgs,\n      activity: activity\n  }\n\n  //_messages[data_for].sort(function(a, b) { return b.doc_count - a.doc_count; });\n}\n\nvar LineChartStore = assign({}, EventEmitter.prototype, {\n  \n  emitChange: function(id){\n    this.emit(CHANGE_EVENT, id);\n  },\n  addChangeListener: function(callback){\n    this.on(CHANGE_EVENT, callback);\n  },\n  removeChangeListener: function(){\n    this.removeListener(CHANGE_EVENT, callback);\n  },\n  getAll: function(id){\n    console.log(\"MESSAGES ARE \", _messages);\n    return _messages[id];\n  }\n\n});\n\n\nLineChartStore.dispatchToken = D3Dispatcher.register(function(action){\n  switch(action.type){\n\n    case actions.RECEIVE_LINE_DATA:\n      _addMessages(action.data_for, action.data);\n      LineChartStore.emitChange(action.data_for);\n      break;\n\n    //case actions.LOAD_DATA:\n\n\n    default:\n      // do nothing\n  }\n});\n\nmodule.exports = LineChartStore;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/stores/LineChartStore.js\n ** module id = 185\n ** module chunks = 0\n **/","/** @jsx React.DOM */var React = require('react');\n//var ViewActionCreators = require('../actions/ViewActionCreators');\nvar d3 = require('d3');\n\nvar YAxis = React.createClass({\n  componentDidMount: function() {\n\n    // wrap element in d3\n    var yAxis = d3.svg.axis().scale(this.props.y).orient(\"left\").tickSize(0);\n    this.d3Node = d3.select(this.getDOMNode());\n\n    // this.d3Node.style(\"opacity\", 0)\n    //             .transition()\n    //             .duration(500)\n    //             .style(\"opacity\", 1)\n    this.d3Node\n        .transition()\n        .duration(1000)\n        .call(yAxis)\n\n    this.d3Node.append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"class\", \"ytext\")\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .text(\"Station Activity [start terminal]\");\n\n  },\n  shouldComponentUpdate: function(nextProps) {\n    // console.log(\"IN Y UPDATEEEEE \");\n    var yAxis = d3.svg.axis().scale(nextProps.y).orient(\"left\").tickSize(0);\n    this.d3Node = d3.select(this.getDOMNode());\n\n    \n    \n    this.d3Node\n    .transition()\n    .duration(500)\n    .call(yAxis)\n        .select(\".ytext\")\n         .transition()\n         .duration(2000)\n         .attr(\"transform\", \"rotate(-90)\")\n         .attr(\"y\", 6)\n         .attr(\"dy\", \".71em\")\n         .style(\"text-anchor\", \"end\")\n         .text(\"Station Activity [start terminal]\");\n\n\n    return true;\n  },\n  // componentDidUpate() {\n  //   this.d3Node.datum(this.props.data);\n  // },\n  // componentWillUnMount() {\n\n  // },\n  render: function() {\n    return (\n      <g className=\"y axis\" />\n    );\n  }\n});\n\nmodule.exports = YAxis;\n\n\n/** WEBPACK FOOTER **\n ** ./client/js/components/YAxisLine.react.jsx\n **/","'use strict';\n\nexports.DefaultRoute = require('./components/DefaultRoute');\nexports.Link = require('./components/Link');\nexports.NotFoundRoute = require('./components/NotFoundRoute');\nexports.Redirect = require('./components/Redirect');\nexports.Route = require('./components/Route');\nexports.ActiveHandler = require('./components/RouteHandler');\nexports.RouteHandler = exports.ActiveHandler;\n\nexports.HashLocation = require('./locations/HashLocation');\nexports.HistoryLocation = require('./locations/HistoryLocation');\nexports.RefreshLocation = require('./locations/RefreshLocation');\nexports.StaticLocation = require('./locations/StaticLocation');\nexports.TestLocation = require('./locations/TestLocation');\n\nexports.ImitateBrowserBehavior = require('./behaviors/ImitateBrowserBehavior');\nexports.ScrollToTopBehavior = require('./behaviors/ScrollToTopBehavior');\n\nexports.History = require('./History');\nexports.Navigation = require('./Navigation');\nexports.State = require('./State');\n\nexports.createRoute = require('./Route').createRoute;\nexports.createDefaultRoute = require('./Route').createDefaultRoute;\nexports.createNotFoundRoute = require('./Route').createNotFoundRoute;\nexports.createRedirect = require('./Route').createRedirect;\nexports.createRoutesFromReactChildren = require('./createRoutesFromReactChildren');\n\nexports.create = require('./createRouter');\nexports.run = require('./runRouter');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/index.js\n ** module id = 187\n ** module chunks = 0\n **/","'use strict';\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar PropTypes = require('../PropTypes');\nvar RouteHandler = require('./RouteHandler');\nvar Route = require('./Route');\n\n/**\n * A <DefaultRoute> component is a special kind of <Route> that\n * renders when its parent matches but none of its siblings do.\n * Only one such route may be used at any given level in the\n * route hierarchy.\n */\n\nvar DefaultRoute = (function (_Route) {\n  function DefaultRoute() {\n    _classCallCheck(this, DefaultRoute);\n\n    if (_Route != null) {\n      _Route.apply(this, arguments);\n    }\n  }\n\n  _inherits(DefaultRoute, _Route);\n\n  return DefaultRoute;\n})(Route);\n\n// TODO: Include these in the above class definition\n// once we can use ES7 property initializers.\n// https://github.com/babel/babel/issues/619\n\nDefaultRoute.propTypes = {\n  name: PropTypes.string,\n  path: PropTypes.falsy,\n  children: PropTypes.falsy,\n  handler: PropTypes.func.isRequired\n};\n\nDefaultRoute.defaultProps = {\n  handler: RouteHandler\n};\n\nmodule.exports = DefaultRoute;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/components/DefaultRoute.js\n ** module id = 188\n ** module chunks = 0\n **/","'use strict';\n\nvar assign = require('react/lib/Object.assign');\nvar ReactPropTypes = require('react').PropTypes;\nvar Route = require('./Route');\n\nvar PropTypes = assign({}, ReactPropTypes, {\n\n  /**\n   * Indicates that a prop should be falsy.\n   */\n  falsy: function falsy(props, propName, componentName) {\n    if (props[propName]) {\n      return new Error('<' + componentName + '> should not have a \"' + propName + '\" prop');\n    }\n  },\n\n  /**\n   * Indicates that a prop should be a Route object.\n   */\n  route: ReactPropTypes.instanceOf(Route),\n\n  /**\n   * Indicates that a prop should be a Router object.\n   */\n  //router: ReactPropTypes.instanceOf(Router) // TODO\n  router: ReactPropTypes.func\n\n});\n\nmodule.exports = PropTypes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/PropTypes.js\n ** module id = 189\n ** module chunks = 0\n **/","'use strict';\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar assign = require('react/lib/Object.assign');\nvar invariant = require('react/lib/invariant');\nvar warning = require('react/lib/warning');\nvar PathUtils = require('./PathUtils');\n\nvar _currentRoute;\n\nvar Route = (function () {\n  function Route(name, path, ignoreScrollBehavior, isDefault, isNotFound, onEnter, onLeave, handler) {\n    _classCallCheck(this, Route);\n\n    this.name = name;\n    this.path = path;\n    this.paramNames = PathUtils.extractParamNames(this.path);\n    this.ignoreScrollBehavior = !!ignoreScrollBehavior;\n    this.isDefault = !!isDefault;\n    this.isNotFound = !!isNotFound;\n    this.onEnter = onEnter;\n    this.onLeave = onLeave;\n    this.handler = handler;\n  }\n\n  _createClass(Route, [{\n    key: 'appendChild',\n\n    /**\n     * Appends the given route to this route's child routes.\n     */\n    value: function appendChild(route) {\n      invariant(route instanceof Route, 'route.appendChild must use a valid Route');\n\n      if (!this.childRoutes) this.childRoutes = [];\n\n      this.childRoutes.push(route);\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var string = '<Route';\n\n      if (this.name) string += ' name=\"' + this.name + '\"';\n\n      string += ' path=\"' + this.path + '\">';\n\n      return string;\n    }\n  }], [{\n    key: 'createRoute',\n\n    /**\n     * Creates and returns a new route. Options may be a URL pathname string\n     * with placeholders for named params or an object with any of the following\n     * properties:\n     *\n     * - name                     The name of the route. This is used to lookup a\n     *                            route relative to its parent route and should be\n     *                            unique among all child routes of the same parent\n     * - path                     A URL pathname string with optional placeholders\n     *                            that specify the names of params to extract from\n     *                            the URL when the path matches. Defaults to `/${name}`\n     *                            when there is a name given, or the path of the parent\n     *                            route, or /\n     * - ignoreScrollBehavior     True to make this route (and all descendants) ignore\n     *                            the scroll behavior of the router\n     * - isDefault                True to make this route the default route among all\n     *                            its siblings\n     * - isNotFound               True to make this route the \"not found\" route among\n     *                            all its siblings\n     * - onEnter                  A transition hook that will be called when the\n     *                            router is going to enter this route\n     * - onLeave                  A transition hook that will be called when the\n     *                            router is going to leave this route\n     * - handler                  A React component that will be rendered when\n     *                            this route is active\n     * - parentRoute              The parent route to use for this route. This option\n     *                            is automatically supplied when creating routes inside\n     *                            the callback to another invocation of createRoute. You\n     *                            only ever need to use this when declaring routes\n     *                            independently of one another to manually piece together\n     *                            the route hierarchy\n     *\n     * The callback may be used to structure your route hierarchy. Any call to\n     * createRoute, createDefaultRoute, createNotFoundRoute, or createRedirect\n     * inside the callback automatically uses this route as its parent.\n     */\n    value: function createRoute(options, callback) {\n      options = options || {};\n\n      if (typeof options === 'string') options = { path: options };\n\n      var parentRoute = _currentRoute;\n\n      if (parentRoute) {\n        warning(options.parentRoute == null || options.parentRoute === parentRoute, 'You should not use parentRoute with createRoute inside another route\\'s child callback; it is ignored');\n      } else {\n        parentRoute = options.parentRoute;\n      }\n\n      var name = options.name;\n      var path = options.path || name;\n\n      if (path && !(options.isDefault || options.isNotFound)) {\n        if (PathUtils.isAbsolute(path)) {\n          if (parentRoute) {\n            invariant(path === parentRoute.path || parentRoute.paramNames.length === 0, 'You cannot nest path \"%s\" inside \"%s\"; the parent requires URL parameters', path, parentRoute.path);\n          }\n        } else if (parentRoute) {\n          // Relative paths extend their parent.\n          path = PathUtils.join(parentRoute.path, path);\n        } else {\n          path = '/' + path;\n        }\n      } else {\n        path = parentRoute ? parentRoute.path : '/';\n      }\n\n      if (options.isNotFound && !/\\*$/.test(path)) path += '*'; // Auto-append * to the path of not found routes.\n\n      var route = new Route(name, path, options.ignoreScrollBehavior, options.isDefault, options.isNotFound, options.onEnter, options.onLeave, options.handler);\n\n      if (parentRoute) {\n        if (route.isDefault) {\n          invariant(parentRoute.defaultRoute == null, '%s may not have more than one default route', parentRoute);\n\n          parentRoute.defaultRoute = route;\n        } else if (route.isNotFound) {\n          invariant(parentRoute.notFoundRoute == null, '%s may not have more than one not found route', parentRoute);\n\n          parentRoute.notFoundRoute = route;\n        }\n\n        parentRoute.appendChild(route);\n      }\n\n      // Any routes created in the callback\n      // use this route as their parent.\n      if (typeof callback === 'function') {\n        var currentRoute = _currentRoute;\n        _currentRoute = route;\n        callback.call(route, route);\n        _currentRoute = currentRoute;\n      }\n\n      return route;\n    }\n  }, {\n    key: 'createDefaultRoute',\n\n    /**\n     * Creates and returns a route that is rendered when its parent matches\n     * the current URL.\n     */\n    value: function createDefaultRoute(options) {\n      return Route.createRoute(assign({}, options, { isDefault: true }));\n    }\n  }, {\n    key: 'createNotFoundRoute',\n\n    /**\n     * Creates and returns a route that is rendered when its parent matches\n     * the current URL but none of its siblings do.\n     */\n    value: function createNotFoundRoute(options) {\n      return Route.createRoute(assign({}, options, { isNotFound: true }));\n    }\n  }, {\n    key: 'createRedirect',\n\n    /**\n     * Creates and returns a route that automatically redirects the transition\n     * to another route. In addition to the normal options to createRoute, this\n     * function accepts the following options:\n     *\n     * - from         An alias for the `path` option. Defaults to *\n     * - to           The path/route/route name to redirect to\n     * - params       The params to use in the redirect URL. Defaults\n     *                to using the current params\n     * - query        The query to use in the redirect URL. Defaults\n     *                to using the current query\n     */\n    value: function createRedirect(options) {\n      return Route.createRoute(assign({}, options, {\n        path: options.path || options.from || '*',\n        onEnter: function onEnter(transition, params, query) {\n          transition.redirect(options.to, options.params || params, options.query || query);\n        }\n      }));\n    }\n  }]);\n\n  return Route;\n})();\n\nmodule.exports = Route;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/Route.js\n ** module id = 190\n ** module chunks = 0\n **/","'use strict';\n\nvar invariant = require('react/lib/invariant');\nvar assign = require('object-assign');\nvar qs = require('qs');\n\nvar paramCompileMatcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|[*.()\\[\\]\\\\+|{}^$]/g;\nvar paramInjectMatcher = /:([a-zA-Z_$][a-zA-Z0-9_$?]*[?]?)|[*]/g;\nvar paramInjectTrailingSlashMatcher = /\\/\\/\\?|\\/\\?\\/|\\/\\?/g;\nvar queryMatcher = /\\?(.*)$/;\n\nvar _compiledPatterns = {};\n\nfunction compilePattern(pattern) {\n  if (!(pattern in _compiledPatterns)) {\n    var paramNames = [];\n    var source = pattern.replace(paramCompileMatcher, function (match, paramName) {\n      if (paramName) {\n        paramNames.push(paramName);\n        return '([^/?#]+)';\n      } else if (match === '*') {\n        paramNames.push('splat');\n        return '(.*?)';\n      } else {\n        return '\\\\' + match;\n      }\n    });\n\n    _compiledPatterns[pattern] = {\n      matcher: new RegExp('^' + source + '$', 'i'),\n      paramNames: paramNames\n    };\n  }\n\n  return _compiledPatterns[pattern];\n}\n\nvar PathUtils = {\n\n  /**\n   * Returns true if the given path is absolute.\n   */\n  isAbsolute: function isAbsolute(path) {\n    return path.charAt(0) === '/';\n  },\n\n  /**\n   * Joins two URL paths together.\n   */\n  join: function join(a, b) {\n    return a.replace(/\\/*$/, '/') + b;\n  },\n\n  /**\n   * Returns an array of the names of all parameters in the given pattern.\n   */\n  extractParamNames: function extractParamNames(pattern) {\n    return compilePattern(pattern).paramNames;\n  },\n\n  /**\n   * Extracts the portions of the given URL path that match the given pattern\n   * and returns an object of param name => value pairs. Returns null if the\n   * pattern does not match the given path.\n   */\n  extractParams: function extractParams(pattern, path) {\n    var _compilePattern = compilePattern(pattern);\n\n    var matcher = _compilePattern.matcher;\n    var paramNames = _compilePattern.paramNames;\n\n    var match = path.match(matcher);\n\n    if (!match) {\n      return null;\n    }var params = {};\n\n    paramNames.forEach(function (paramName, index) {\n      params[paramName] = match[index + 1];\n    });\n\n    return params;\n  },\n\n  /**\n   * Returns a version of the given route path with params interpolated. Throws\n   * if there is a dynamic segment of the route path for which there is no param.\n   */\n  injectParams: function injectParams(pattern, params) {\n    params = params || {};\n\n    var splatIndex = 0;\n\n    return pattern.replace(paramInjectMatcher, function (match, paramName) {\n      paramName = paramName || 'splat';\n\n      // If param is optional don't check for existence\n      if (paramName.slice(-1) === '?') {\n        paramName = paramName.slice(0, -1);\n\n        if (params[paramName] == null) return '';\n      } else {\n        invariant(params[paramName] != null, 'Missing \"%s\" parameter for path \"%s\"', paramName, pattern);\n      }\n\n      var segment;\n      if (paramName === 'splat' && Array.isArray(params[paramName])) {\n        segment = params[paramName][splatIndex++];\n\n        invariant(segment != null, 'Missing splat # %s for path \"%s\"', splatIndex, pattern);\n      } else {\n        segment = params[paramName];\n      }\n\n      return segment;\n    }).replace(paramInjectTrailingSlashMatcher, '/');\n  },\n\n  /**\n   * Returns an object that is the result of parsing any query string contained\n   * in the given path, null if the path contains no query string.\n   */\n  extractQuery: function extractQuery(path) {\n    var match = path.match(queryMatcher);\n    return match && qs.parse(match[1]);\n  },\n\n  /**\n   * Returns a version of the given path without the query string.\n   */\n  withoutQuery: function withoutQuery(path) {\n    return path.replace(queryMatcher, '');\n  },\n\n  /**\n   * Returns a version of the given path with the parameters in the given\n   * query merged into the query string.\n   */\n  withQuery: function withQuery(path, query) {\n    var existingQuery = PathUtils.extractQuery(path);\n\n    if (existingQuery) query = query ? assign(existingQuery, query) : existingQuery;\n\n    var queryString = qs.stringify(query, { arrayFormat: 'brackets' });\n\n    if (queryString) {\n      return PathUtils.withoutQuery(path) + '?' + queryString;\n    }return PathUtils.withoutQuery(path);\n  }\n\n};\n\nmodule.exports = PathUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/PathUtils.js\n ** module id = 191\n ** module chunks = 0\n **/","'use strict';\n\nfunction ToObject(val) {\n\tif (val == null) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nmodule.exports = Object.assign || function (target, source) {\n\tvar from;\n\tvar keys;\n\tvar to = ToObject(target);\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = arguments[s];\n\t\tkeys = Object.keys(Object(from));\n\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tto[keys[i]] = from[keys[i]];\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/~/object-assign/index.js\n ** module id = 192\n ** module chunks = 0\n **/","module.exports = require('./lib/');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/~/qs/index.js\n ** module id = 193\n ** module chunks = 0\n **/","// Load modules\n\nvar Stringify = require('./stringify');\nvar Parse = require('./parse');\n\n\n// Declare internals\n\nvar internals = {};\n\n\nmodule.exports = {\n    stringify: Stringify,\n    parse: Parse\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/~/qs/lib/index.js\n ** module id = 194\n ** module chunks = 0\n **/","// Load modules\n\nvar Utils = require('./utils');\n\n\n// Declare internals\n\nvar internals = {\n    delimiter: '&',\n    arrayPrefixGenerators: {\n        brackets: function (prefix, key) {\n            return prefix + '[]';\n        },\n        indices: function (prefix, key) {\n            return prefix + '[' + key + ']';\n        },\n        repeat: function (prefix, key) {\n            return prefix;\n        }\n    }\n};\n\n\ninternals.stringify = function (obj, prefix, generateArrayPrefix) {\n\n    if (Utils.isBuffer(obj)) {\n        obj = obj.toString();\n    }\n    else if (obj instanceof Date) {\n        obj = obj.toISOString();\n    }\n    else if (obj === null) {\n        obj = '';\n    }\n\n    if (typeof obj === 'string' ||\n        typeof obj === 'number' ||\n        typeof obj === 'boolean') {\n\n        return [encodeURIComponent(prefix) + '=' + encodeURIComponent(obj)];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys = Object.keys(obj);\n    for (var i = 0, il = objKeys.length; i < il; ++i) {\n        var key = objKeys[i];\n        if (Array.isArray(obj)) {\n            values = values.concat(internals.stringify(obj[key], generateArrayPrefix(prefix, key), generateArrayPrefix));\n        }\n        else {\n            values = values.concat(internals.stringify(obj[key], prefix + '[' + key + ']', generateArrayPrefix));\n        }\n    }\n\n    return values;\n};\n\n\nmodule.exports = function (obj, options) {\n\n    options = options || {};\n    var delimiter = typeof options.delimiter === 'undefined' ? internals.delimiter : options.delimiter;\n\n    var keys = [];\n\n    if (typeof obj !== 'object' ||\n        obj === null) {\n\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in internals.arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    }\n    else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    }\n    else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = internals.arrayPrefixGenerators[arrayFormat];\n\n    var objKeys = Object.keys(obj);\n    for (var i = 0, il = objKeys.length; i < il; ++i) {\n        var key = objKeys[i];\n        keys = keys.concat(internals.stringify(obj[key], key, generateArrayPrefix));\n    }\n\n    return keys.join(delimiter);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/~/qs/lib/stringify.js\n ** module id = 195\n ** module chunks = 0\n **/","// Load modules\n\n\n// Declare internals\n\nvar internals = {};\n\n\nexports.arrayToObject = function (source) {\n\n    var obj = {};\n    for (var i = 0, il = source.length; i < il; ++i) {\n        if (typeof source[i] !== 'undefined') {\n\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\n\nexports.merge = function (target, source) {\n\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        }\n        else {\n            target[source] = true;\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        target = [target].concat(source);\n        return target;\n    }\n\n    if (Array.isArray(target) &&\n        !Array.isArray(source)) {\n\n        target = exports.arrayToObject(target);\n    }\n\n    var keys = Object.keys(source);\n    for (var k = 0, kl = keys.length; k < kl; ++k) {\n        var key = keys[k];\n        var value = source[key];\n\n        if (!target[key]) {\n            target[key] = value;\n        }\n        else {\n            target[key] = exports.merge(target[key], value);\n        }\n    }\n\n    return target;\n};\n\n\nexports.decode = function (str) {\n\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\n\nexports.compact = function (obj, refs) {\n\n    if (typeof obj !== 'object' ||\n        obj === null) {\n\n        return obj;\n    }\n\n    refs = refs || [];\n    var lookup = refs.indexOf(obj);\n    if (lookup !== -1) {\n        return refs[lookup];\n    }\n\n    refs.push(obj);\n\n    if (Array.isArray(obj)) {\n        var compacted = [];\n\n        for (var i = 0, il = obj.length; i < il; ++i) {\n            if (typeof obj[i] !== 'undefined') {\n                compacted.push(obj[i]);\n            }\n        }\n\n        return compacted;\n    }\n\n    var keys = Object.keys(obj);\n    for (i = 0, il = keys.length; i < il; ++i) {\n        var key = keys[i];\n        obj[key] = exports.compact(obj[key], refs);\n    }\n\n    return obj;\n};\n\n\nexports.isRegExp = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\n\nexports.isBuffer = function (obj) {\n\n    if (obj === null ||\n        typeof obj === 'undefined') {\n\n        return false;\n    }\n\n    return !!(obj.constructor &&\n        obj.constructor.isBuffer &&\n        obj.constructor.isBuffer(obj));\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/~/qs/lib/utils.js\n ** module id = 196\n ** module chunks = 0\n **/","// Load modules\n\nvar Utils = require('./utils');\n\n\n// Declare internals\n\nvar internals = {\n    delimiter: '&',\n    depth: 5,\n    arrayLimit: 20,\n    parameterLimit: 1000\n};\n\n\ninternals.parseValues = function (str, options) {\n\n    var obj = {};\n    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);\n\n    for (var i = 0, il = parts.length; i < il; ++i) {\n        var part = parts[i];\n        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;\n\n        if (pos === -1) {\n            obj[Utils.decode(part)] = '';\n        }\n        else {\n            var key = Utils.decode(part.slice(0, pos));\n            var val = Utils.decode(part.slice(pos + 1));\n\n            if (Object.prototype.hasOwnProperty(key)) {\n                continue;\n            }\n\n            if (!obj.hasOwnProperty(key)) {\n                obj[key] = val;\n            }\n            else {\n                obj[key] = [].concat(obj[key]).concat(val);\n            }\n        }\n    }\n\n    return obj;\n};\n\n\ninternals.parseObject = function (chain, val, options) {\n\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj = {};\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(internals.parseObject(chain, val, options));\n    }\n    else {\n        var cleanRoot = root[0] === '[' && root[root.length - 1] === ']' ? root.slice(1, root.length - 1) : root;\n        var index = parseInt(cleanRoot, 10);\n        var indexString = '' + index;\n        if (!isNaN(index) &&\n            root !== cleanRoot &&\n            indexString === cleanRoot &&\n            index >= 0 &&\n            index <= options.arrayLimit) {\n\n            obj = [];\n            obj[index] = internals.parseObject(chain, val, options);\n        }\n        else {\n            obj[cleanRoot] = internals.parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\n\ninternals.parseKeys = function (key, val, options) {\n\n    if (!key) {\n        return;\n    }\n\n    // The regex chunks\n\n    var parent = /^([^\\[\\]]*)/;\n    var child = /(\\[[^\\[\\]]*\\])/g;\n\n    // Get the parent\n\n    var segment = parent.exec(key);\n\n    // Don't allow them to overwrite object prototype properties\n\n    if (Object.prototype.hasOwnProperty(segment[1])) {\n        return;\n    }\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (segment[1]) {\n        keys.push(segment[1]);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n\n        ++i;\n        if (!Object.prototype.hasOwnProperty(segment[1].replace(/\\[|\\]/g, ''))) {\n            keys.push(segment[1]);\n        }\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return internals.parseObject(keys, val, options);\n};\n\n\nmodule.exports = function (str, options) {\n\n    if (str === '' ||\n        str === null ||\n        typeof str === 'undefined') {\n\n        return {};\n    }\n\n    options = options || {};\n    options.delimiter = typeof options.delimiter === 'string' || Utils.isRegExp(options.delimiter) ? options.delimiter : internals.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : internals.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : internals.arrayLimit;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : internals.parameterLimit;\n\n    var tempObj = typeof str === 'string' ? internals.parseValues(str, options) : str;\n    var obj = {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0, il = keys.length; i < il; ++i) {\n        var key = keys[i];\n        var newObj = internals.parseKeys(key, tempObj[key], options);\n        obj = Utils.merge(obj, newObj);\n    }\n\n    return Utils.compact(obj);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/~/qs/lib/parse.js\n ** module id = 197\n ** module chunks = 0\n **/","'use strict';\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar React = require('react');\nvar ContextWrapper = require('./ContextWrapper');\nvar assign = require('react/lib/Object.assign');\nvar PropTypes = require('../PropTypes');\n\nvar REF_NAME = '__routeHandler__';\n\n/**\n * A <RouteHandler> component renders the active child route handler\n * when routes are nested.\n */\n\nvar RouteHandler = (function (_React$Component) {\n  function RouteHandler() {\n    _classCallCheck(this, RouteHandler);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(RouteHandler, _React$Component);\n\n  _createClass(RouteHandler, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        routeDepth: this.context.routeDepth + 1\n      };\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._updateRouteComponent(this.refs[REF_NAME]);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._updateRouteComponent(this.refs[REF_NAME]);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._updateRouteComponent(null);\n    }\n  }, {\n    key: '_updateRouteComponent',\n    value: function _updateRouteComponent(component) {\n      this.context.router.setRouteComponentAtDepth(this.getRouteDepth(), component);\n    }\n  }, {\n    key: 'getRouteDepth',\n    value: function getRouteDepth() {\n      return this.context.routeDepth;\n    }\n  }, {\n    key: 'createChildRouteHandler',\n    value: function createChildRouteHandler(props) {\n      var route = this.context.router.getRouteAtDepth(this.getRouteDepth());\n\n      if (route == null) {\n        return null;\n      }var childProps = assign({}, props || this.props, {\n        ref: REF_NAME,\n        params: this.context.router.getCurrentParams(),\n        query: this.context.router.getCurrentQuery()\n      });\n\n      return React.createElement(route.handler, childProps);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var handler = this.createChildRouteHandler();\n      // <script/> for things like <CSSTransitionGroup/> that don't like null\n      return handler ? React.createElement(\n        ContextWrapper,\n        null,\n        handler\n      ) : React.createElement('script', null);\n    }\n  }]);\n\n  return RouteHandler;\n})(React.Component);\n\n// TODO: Include these in the above class definition\n// once we can use ES7 property initializers.\n// https://github.com/babel/babel/issues/619\n\nRouteHandler.contextTypes = {\n  routeDepth: PropTypes.number.isRequired,\n  router: PropTypes.router.isRequired\n};\n\nRouteHandler.childContextTypes = {\n  routeDepth: PropTypes.number.isRequired\n};\n\nmodule.exports = RouteHandler;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/components/RouteHandler.js\n ** module id = 198\n ** module chunks = 0\n **/","'use strict';\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\n/**\n * This component is necessary to get around a context warning\n * present in React 0.13.0. It sovles this by providing a separation\n * between the \"owner\" and \"parent\" contexts.\n */\n\nvar React = require('react');\n\nvar ContextWrapper = (function (_React$Component) {\n  function ContextWrapper() {\n    _classCallCheck(this, ContextWrapper);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(ContextWrapper, _React$Component);\n\n  _createClass(ContextWrapper, [{\n    key: 'render',\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return ContextWrapper;\n})(React.Component);\n\nmodule.exports = ContextWrapper;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/components/ContextWrapper.js\n ** module id = 199\n ** module chunks = 0\n **/","'use strict';\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar React = require('react');\nvar invariant = require('react/lib/invariant');\nvar PropTypes = require('../PropTypes');\nvar RouteHandler = require('./RouteHandler');\n\n/**\n * <Route> components specify components that are rendered to the page when the\n * URL matches a given pattern.\n *\n * Routes are arranged in a nested tree structure. When a new URL is requested,\n * the tree is searched depth-first to find a route whose path matches the URL.\n * When one is found, all routes in the tree that lead to it are considered\n * \"active\" and their components are rendered into the DOM, nested in the same\n * order as they are in the tree.\n *\n * The preferred way to configure a router is using JSX. The XML-like syntax is\n * a great way to visualize how routes are laid out in an application.\n *\n *   var routes = [\n *     <Route handler={App}>\n *       <Route name=\"login\" handler={Login}/>\n *       <Route name=\"logout\" handler={Logout}/>\n *       <Route name=\"about\" handler={About}/>\n *     </Route>\n *   ];\n *   \n *   Router.run(routes, function (Handler) {\n *     React.render(<Handler/>, document.body);\n *   });\n *\n * Handlers for Route components that contain children can render their active\n * child route using a <RouteHandler> element.\n *\n *   var App = React.createClass({\n *     render: function () {\n *       return (\n *         <div class=\"application\">\n *           <RouteHandler/>\n *         </div>\n *       );\n *     }\n *   });\n *\n * If no handler is provided for the route, it will render a matched child route.\n */\n\nvar Route = (function (_React$Component) {\n  function Route() {\n    _classCallCheck(this, Route);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(Route, _React$Component);\n\n  _createClass(Route, [{\n    key: 'render',\n    value: function render() {\n      invariant(false, '%s elements are for router configuration only and should not be rendered', this.constructor.name);\n    }\n  }]);\n\n  return Route;\n})(React.Component);\n\n// TODO: Include these in the above class definition\n// once we can use ES7 property initializers.\n// https://github.com/babel/babel/issues/619\n\nRoute.propTypes = {\n  name: PropTypes.string,\n  path: PropTypes.string,\n  handler: PropTypes.func,\n  ignoreScrollBehavior: PropTypes.bool\n};\n\nRoute.defaultProps = {\n  handler: RouteHandler\n};\n\nmodule.exports = Route;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/components/Route.js\n ** module id = 200\n ** module chunks = 0\n **/","'use strict';\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar React = require('react');\nvar assign = require('react/lib/Object.assign');\nvar PropTypes = require('../PropTypes');\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\n/**\n * <Link> components are used to create an <a> element that links to a route.\n * When that route is active, the link gets an \"active\" class name (or the\n * value of its `activeClassName` prop).\n *\n * For example, assuming you have the following route:\n *\n *   <Route name=\"showPost\" path=\"/posts/:postID\" handler={Post}/>\n *\n * You could use the following component to link to that route:\n *\n *   <Link to=\"showPost\" params={{ postID: \"123\" }} />\n *\n * In addition to params, links may pass along query string parameters\n * using the `query` prop.\n *\n *   <Link to=\"showPost\" params={{ postID: \"123\" }} query={{ show:true }}/>\n */\n\nvar Link = (function (_React$Component) {\n  function Link() {\n    _classCallCheck(this, Link);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(Link, _React$Component);\n\n  _createClass(Link, [{\n    key: 'handleClick',\n    value: function handleClick(event) {\n      var allowTransition = true;\n      var clickResult;\n\n      if (this.props.onClick) clickResult = this.props.onClick(event);\n\n      if (isModifiedEvent(event) || !isLeftClickEvent(event)) {\n        return;\n      }if (clickResult === false || event.defaultPrevented === true) allowTransition = false;\n\n      event.preventDefault();\n\n      if (allowTransition) this.context.router.transitionTo(this.props.to, this.props.params, this.props.query);\n    }\n  }, {\n    key: 'getHref',\n\n    /**\n     * Returns the value of the \"href\" attribute to use on the DOM element.\n     */\n    value: function getHref() {\n      return this.context.router.makeHref(this.props.to, this.props.params, this.props.query);\n    }\n  }, {\n    key: 'getClassName',\n\n    /**\n     * Returns the value of the \"class\" attribute to use on the DOM element, which contains\n     * the value of the activeClassName property when this <Link> is active.\n     */\n    value: function getClassName() {\n      var className = this.props.className;\n\n      if (this.getActiveState()) className += ' ' + this.props.activeClassName;\n\n      return className;\n    }\n  }, {\n    key: 'getActiveState',\n    value: function getActiveState() {\n      return this.context.router.isActive(this.props.to, this.props.params, this.props.query);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = assign({}, this.props, {\n        href: this.getHref(),\n        className: this.getClassName(),\n        onClick: this.handleClick.bind(this)\n      });\n\n      if (props.activeStyle && this.getActiveState()) props.style = props.activeStyle;\n\n      return React.DOM.a(props, this.props.children);\n    }\n  }]);\n\n  return Link;\n})(React.Component);\n\n// TODO: Include these in the above class definition\n// once we can use ES7 property initializers.\n// https://github.com/babel/babel/issues/619\n\nLink.contextTypes = {\n  router: PropTypes.router.isRequired\n};\n\nLink.propTypes = {\n  activeClassName: PropTypes.string.isRequired,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.route]).isRequired,\n  params: PropTypes.object,\n  query: PropTypes.object,\n  activeStyle: PropTypes.object,\n  onClick: PropTypes.func\n};\n\nLink.defaultProps = {\n  activeClassName: 'active',\n  className: ''\n};\n\nmodule.exports = Link;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/components/Link.js\n ** module id = 201\n ** module chunks = 0\n **/","'use strict';\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar PropTypes = require('../PropTypes');\nvar RouteHandler = require('./RouteHandler');\nvar Route = require('./Route');\n\n/**\n * A <NotFoundRoute> is a special kind of <Route> that\n * renders when the beginning of its parent's path matches\n * but none of its siblings do, including any <DefaultRoute>.\n * Only one such route may be used at any given level in the\n * route hierarchy.\n */\n\nvar NotFoundRoute = (function (_Route) {\n  function NotFoundRoute() {\n    _classCallCheck(this, NotFoundRoute);\n\n    if (_Route != null) {\n      _Route.apply(this, arguments);\n    }\n  }\n\n  _inherits(NotFoundRoute, _Route);\n\n  return NotFoundRoute;\n})(Route);\n\n// TODO: Include these in the above class definition\n// once we can use ES7 property initializers.\n// https://github.com/babel/babel/issues/619\n\nNotFoundRoute.propTypes = {\n  name: PropTypes.string,\n  path: PropTypes.falsy,\n  children: PropTypes.falsy,\n  handler: PropTypes.func.isRequired\n};\n\nNotFoundRoute.defaultProps = {\n  handler: RouteHandler\n};\n\nmodule.exports = NotFoundRoute;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/components/NotFoundRoute.js\n ** module id = 202\n ** module chunks = 0\n **/","'use strict';\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar PropTypes = require('../PropTypes');\nvar Route = require('./Route');\n\n/**\n * A <Redirect> component is a special kind of <Route> that always\n * redirects to another route when it matches.\n */\n\nvar Redirect = (function (_Route) {\n  function Redirect() {\n    _classCallCheck(this, Redirect);\n\n    if (_Route != null) {\n      _Route.apply(this, arguments);\n    }\n  }\n\n  _inherits(Redirect, _Route);\n\n  return Redirect;\n})(Route);\n\n// TODO: Include these in the above class definition\n// once we can use ES7 property initializers.\n// https://github.com/babel/babel/issues/619\n\nRedirect.propTypes = {\n  path: PropTypes.string,\n  from: PropTypes.string, // Alias for path.\n  to: PropTypes.string,\n  handler: PropTypes.falsy\n};\n\n// Redirects should not have a default handler\nRedirect.defaultProps = {};\n\nmodule.exports = Redirect;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/components/Redirect.js\n ** module id = 203\n ** module chunks = 0\n **/","'use strict';\n\nvar LocationActions = require('../actions/LocationActions');\nvar History = require('../History');\n\nvar _listeners = [];\nvar _isListening = false;\nvar _actionType;\n\nfunction notifyChange(type) {\n  if (type === LocationActions.PUSH) History.length += 1;\n\n  var change = {\n    path: HashLocation.getCurrentPath(),\n    type: type\n  };\n\n  _listeners.forEach(function (listener) {\n    listener.call(HashLocation, change);\n  });\n}\n\nfunction ensureSlash() {\n  var path = HashLocation.getCurrentPath();\n\n  if (path.charAt(0) === '/') {\n    return true;\n  }HashLocation.replace('/' + path);\n\n  return false;\n}\n\nfunction onHashChange() {\n  if (ensureSlash()) {\n    // If we don't have an _actionType then all we know is the hash\n    // changed. It was probably caused by the user clicking the Back\n    // button, but may have also been the Forward button or manual\n    // manipulation. So just guess 'pop'.\n    var curActionType = _actionType;\n    _actionType = null;\n    notifyChange(curActionType || LocationActions.POP);\n  }\n}\n\n/**\n * A Location that uses `window.location.hash`.\n */\nvar HashLocation = {\n\n  addChangeListener: function addChangeListener(listener) {\n    _listeners.push(listener);\n\n    // Do this BEFORE listening for hashchange.\n    ensureSlash();\n\n    if (!_isListening) {\n      if (window.addEventListener) {\n        window.addEventListener('hashchange', onHashChange, false);\n      } else {\n        window.attachEvent('onhashchange', onHashChange);\n      }\n\n      _isListening = true;\n    }\n  },\n\n  removeChangeListener: function removeChangeListener(listener) {\n    _listeners = _listeners.filter(function (l) {\n      return l !== listener;\n    });\n\n    if (_listeners.length === 0) {\n      if (window.removeEventListener) {\n        window.removeEventListener('hashchange', onHashChange, false);\n      } else {\n        window.removeEvent('onhashchange', onHashChange);\n      }\n\n      _isListening = false;\n    }\n  },\n\n  push: function push(path) {\n    _actionType = LocationActions.PUSH;\n    window.location.hash = path;\n  },\n\n  replace: function replace(path) {\n    _actionType = LocationActions.REPLACE;\n    window.location.replace(window.location.pathname + window.location.search + '#' + path);\n  },\n\n  pop: function pop() {\n    _actionType = LocationActions.POP;\n    History.back();\n  },\n\n  getCurrentPath: function getCurrentPath() {\n    return decodeURI(\n    // We can't use window.location.hash here because it's not\n    // consistent across browsers - Firefox will pre-decode it!\n    window.location.href.split('#')[1] || '');\n  },\n\n  toString: function toString() {\n    return '<HashLocation>';\n  }\n\n};\n\nmodule.exports = HashLocation;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/locations/HashLocation.js\n ** module id = 204\n ** module chunks = 0\n **/","/**\n * Actions that modify the URL.\n */\n'use strict';\n\nvar LocationActions = {\n\n  /**\n   * Indicates a new location is being pushed to the history stack.\n   */\n  PUSH: 'push',\n\n  /**\n   * Indicates the current location should be replaced.\n   */\n  REPLACE: 'replace',\n\n  /**\n   * Indicates the most recent entry should be removed from the history stack.\n   */\n  POP: 'pop'\n\n};\n\nmodule.exports = LocationActions;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/actions/LocationActions.js\n ** module id = 205\n ** module chunks = 0\n **/","'use strict';\n\nvar invariant = require('react/lib/invariant');\nvar canUseDOM = require('react/lib/ExecutionEnvironment').canUseDOM;\n\nvar History = {\n\n  /**\n   * The current number of entries in the history.\n   *\n   * Note: This property is read-only.\n   */\n  length: 1,\n\n  /**\n   * Sends the browser back one entry in the history.\n   */\n  back: function back() {\n    invariant(canUseDOM, 'Cannot use History.back without a DOM');\n\n    // Do this first so that History.length will\n    // be accurate in location change listeners.\n    History.length -= 1;\n\n    window.history.back();\n  }\n\n};\n\nmodule.exports = History;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/History.js\n ** module id = 206\n ** module chunks = 0\n **/","'use strict';\n\nvar LocationActions = require('../actions/LocationActions');\nvar History = require('../History');\n\nvar _listeners = [];\nvar _isListening = false;\n\nfunction notifyChange(type) {\n  var change = {\n    path: HistoryLocation.getCurrentPath(),\n    type: type\n  };\n\n  _listeners.forEach(function (listener) {\n    listener.call(HistoryLocation, change);\n  });\n}\n\nfunction onPopState(event) {\n  if (event.state === undefined) {\n    return;\n  } // Ignore extraneous popstate events in WebKit.\n\n  notifyChange(LocationActions.POP);\n}\n\n/**\n * A Location that uses HTML5 history.\n */\nvar HistoryLocation = {\n\n  addChangeListener: function addChangeListener(listener) {\n    _listeners.push(listener);\n\n    if (!_isListening) {\n      if (window.addEventListener) {\n        window.addEventListener('popstate', onPopState, false);\n      } else {\n        window.attachEvent('onpopstate', onPopState);\n      }\n\n      _isListening = true;\n    }\n  },\n\n  removeChangeListener: function removeChangeListener(listener) {\n    _listeners = _listeners.filter(function (l) {\n      return l !== listener;\n    });\n\n    if (_listeners.length === 0) {\n      if (window.addEventListener) {\n        window.removeEventListener('popstate', onPopState, false);\n      } else {\n        window.removeEvent('onpopstate', onPopState);\n      }\n\n      _isListening = false;\n    }\n  },\n\n  push: function push(path) {\n    window.history.pushState({ path: path }, '', path);\n    History.length += 1;\n    notifyChange(LocationActions.PUSH);\n  },\n\n  replace: function replace(path) {\n    window.history.replaceState({ path: path }, '', path);\n    notifyChange(LocationActions.REPLACE);\n  },\n\n  pop: History.back,\n\n  getCurrentPath: function getCurrentPath() {\n    return decodeURI(window.location.pathname + window.location.search);\n  },\n\n  toString: function toString() {\n    return '<HistoryLocation>';\n  }\n\n};\n\nmodule.exports = HistoryLocation;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/locations/HistoryLocation.js\n ** module id = 207\n ** module chunks = 0\n **/","'use strict';\n\nvar HistoryLocation = require('./HistoryLocation');\nvar History = require('../History');\n\n/**\n * A Location that uses full page refreshes. This is used as\n * the fallback for HistoryLocation in browsers that do not\n * support the HTML5 history API.\n */\nvar RefreshLocation = {\n\n  push: function push(path) {\n    window.location = path;\n  },\n\n  replace: function replace(path) {\n    window.location.replace(path);\n  },\n\n  pop: History.back,\n\n  getCurrentPath: HistoryLocation.getCurrentPath,\n\n  toString: function toString() {\n    return '<RefreshLocation>';\n  }\n\n};\n\nmodule.exports = RefreshLocation;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/locations/RefreshLocation.js\n ** module id = 208\n ** module chunks = 0\n **/","'use strict';\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar invariant = require('react/lib/invariant');\n\nfunction throwCannotModify() {\n  invariant(false, 'You cannot modify a static location');\n}\n\n/**\n * A location that only ever contains a single path. Useful in\n * stateless environments like servers where there is no path history,\n * only the path that was used in the request.\n */\n\nvar StaticLocation = (function () {\n  function StaticLocation(path) {\n    _classCallCheck(this, StaticLocation);\n\n    this.path = path;\n  }\n\n  _createClass(StaticLocation, [{\n    key: 'getCurrentPath',\n    value: function getCurrentPath() {\n      return this.path;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return '<StaticLocation path=\"' + this.path + '\">';\n    }\n  }]);\n\n  return StaticLocation;\n})();\n\n// TODO: Include these in the above class definition\n// once we can use ES7 property initializers.\n// https://github.com/babel/babel/issues/619\n\nStaticLocation.prototype.push = throwCannotModify;\nStaticLocation.prototype.replace = throwCannotModify;\nStaticLocation.prototype.pop = throwCannotModify;\n\nmodule.exports = StaticLocation;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/locations/StaticLocation.js\n ** module id = 209\n ** module chunks = 0\n **/","'use strict';\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar invariant = require('react/lib/invariant');\nvar LocationActions = require('../actions/LocationActions');\nvar History = require('../History');\n\n/**\n * A location that is convenient for testing and does not require a DOM.\n */\n\nvar TestLocation = (function () {\n  function TestLocation(history) {\n    _classCallCheck(this, TestLocation);\n\n    this.history = history || [];\n    this.listeners = [];\n    this._updateHistoryLength();\n  }\n\n  _createClass(TestLocation, [{\n    key: 'needsDOM',\n    get: function () {\n      return false;\n    }\n  }, {\n    key: '_updateHistoryLength',\n    value: function _updateHistoryLength() {\n      History.length = this.history.length;\n    }\n  }, {\n    key: '_notifyChange',\n    value: function _notifyChange(type) {\n      var change = {\n        path: this.getCurrentPath(),\n        type: type\n      };\n\n      for (var i = 0, len = this.listeners.length; i < len; ++i) this.listeners[i].call(this, change);\n    }\n  }, {\n    key: 'addChangeListener',\n    value: function addChangeListener(listener) {\n      this.listeners.push(listener);\n    }\n  }, {\n    key: 'removeChangeListener',\n    value: function removeChangeListener(listener) {\n      this.listeners = this.listeners.filter(function (l) {\n        return l !== listener;\n      });\n    }\n  }, {\n    key: 'push',\n    value: function push(path) {\n      this.history.push(path);\n      this._updateHistoryLength();\n      this._notifyChange(LocationActions.PUSH);\n    }\n  }, {\n    key: 'replace',\n    value: function replace(path) {\n      invariant(this.history.length, 'You cannot replace the current path with no history');\n\n      this.history[this.history.length - 1] = path;\n\n      this._notifyChange(LocationActions.REPLACE);\n    }\n  }, {\n    key: 'pop',\n    value: function pop() {\n      this.history.pop();\n      this._updateHistoryLength();\n      this._notifyChange(LocationActions.POP);\n    }\n  }, {\n    key: 'getCurrentPath',\n    value: function getCurrentPath() {\n      return this.history[this.history.length - 1];\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return '<TestLocation>';\n    }\n  }]);\n\n  return TestLocation;\n})();\n\nmodule.exports = TestLocation;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/locations/TestLocation.js\n ** module id = 210\n ** module chunks = 0\n **/","'use strict';\n\nvar LocationActions = require('../actions/LocationActions');\n\n/**\n * A scroll behavior that attempts to imitate the default behavior\n * of modern browsers.\n */\nvar ImitateBrowserBehavior = {\n\n  updateScrollPosition: function updateScrollPosition(position, actionType) {\n    switch (actionType) {\n      case LocationActions.PUSH:\n      case LocationActions.REPLACE:\n        window.scrollTo(0, 0);\n        break;\n      case LocationActions.POP:\n        if (position) {\n          window.scrollTo(position.x, position.y);\n        } else {\n          window.scrollTo(0, 0);\n        }\n        break;\n    }\n  }\n\n};\n\nmodule.exports = ImitateBrowserBehavior;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/behaviors/ImitateBrowserBehavior.js\n ** module id = 211\n ** module chunks = 0\n **/","/**\n * A scroll behavior that always scrolls to the top of the page\n * after a transition.\n */\n\"use strict\";\n\nvar ScrollToTopBehavior = {\n\n  updateScrollPosition: function updateScrollPosition() {\n    window.scrollTo(0, 0);\n  }\n\n};\n\nmodule.exports = ScrollToTopBehavior;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/behaviors/ScrollToTopBehavior.js\n ** module id = 212\n ** module chunks = 0\n **/","'use strict';\n\nvar PropTypes = require('./PropTypes');\n\n/**\n * A mixin for components that modify the URL.\n *\n * Example:\n *\n *   var MyLink = React.createClass({\n *     mixins: [ Router.Navigation ],\n *     handleClick(event) {\n *       event.preventDefault();\n *       this.transitionTo('aRoute', { the: 'params' }, { the: 'query' });\n *     },\n *     render() {\n *       return (\n *         <a onClick={this.handleClick}>Click me!</a>\n *       );\n *     }\n *   });\n */\nvar Navigation = {\n\n  contextTypes: {\n    router: PropTypes.router.isRequired\n  },\n\n  /**\n   * Returns an absolute URL path created from the given route\n   * name, URL parameters, and query values.\n   */\n  makePath: function makePath(to, params, query) {\n    return this.context.router.makePath(to, params, query);\n  },\n\n  /**\n   * Returns a string that may safely be used as the href of a\n   * link to the route with the given name.\n   */\n  makeHref: function makeHref(to, params, query) {\n    return this.context.router.makeHref(to, params, query);\n  },\n\n  /**\n   * Transitions to the URL specified in the arguments by pushing\n   * a new URL onto the history stack.\n   */\n  transitionTo: function transitionTo(to, params, query) {\n    this.context.router.transitionTo(to, params, query);\n  },\n\n  /**\n   * Transitions to the URL specified in the arguments by replacing\n   * the current URL in the history stack.\n   */\n  replaceWith: function replaceWith(to, params, query) {\n    this.context.router.replaceWith(to, params, query);\n  },\n\n  /**\n   * Transitions to the previous URL.\n   */\n  goBack: function goBack() {\n    return this.context.router.goBack();\n  }\n\n};\n\nmodule.exports = Navigation;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/Navigation.js\n ** module id = 213\n ** module chunks = 0\n **/","'use strict';\n\nvar PropTypes = require('./PropTypes');\n\n/**\n * A mixin for components that need to know the path, routes, URL\n * params and query that are currently active.\n *\n * Example:\n *\n *   var AboutLink = React.createClass({\n *     mixins: [ Router.State ],\n *     render() {\n *       var className = this.props.className;\n *\n *       if (this.isActive('about'))\n *         className += ' is-active';\n *\n *       return React.DOM.a({ className: className }, this.props.children);\n *     }\n *   });\n */\nvar State = {\n\n  contextTypes: {\n    router: PropTypes.router.isRequired\n  },\n\n  /**\n   * Returns the current URL path.\n   */\n  getPath: function getPath() {\n    return this.context.router.getCurrentPath();\n  },\n\n  /**\n   * Returns the current URL path without the query string.\n   */\n  getPathname: function getPathname() {\n    return this.context.router.getCurrentPathname();\n  },\n\n  /**\n   * Returns an object of the URL params that are currently active.\n   */\n  getParams: function getParams() {\n    return this.context.router.getCurrentParams();\n  },\n\n  /**\n   * Returns an object of the query params that are currently active.\n   */\n  getQuery: function getQuery() {\n    return this.context.router.getCurrentQuery();\n  },\n\n  /**\n   * Returns an array of the routes that are currently active.\n   */\n  getRoutes: function getRoutes() {\n    return this.context.router.getCurrentRoutes();\n  },\n\n  /**\n   * A helper method to determine if a given route, params, and query\n   * are active.\n   */\n  isActive: function isActive(to, params, query) {\n    return this.context.router.isActive(to, params, query);\n  }\n\n};\n\nmodule.exports = State;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/State.js\n ** module id = 214\n ** module chunks = 0\n **/","/* jshint -W084 */\n'use strict';\n\nvar React = require('react');\nvar assign = require('react/lib/Object.assign');\nvar warning = require('react/lib/warning');\nvar DefaultRoute = require('./components/DefaultRoute');\nvar NotFoundRoute = require('./components/NotFoundRoute');\nvar Redirect = require('./components/Redirect');\nvar Route = require('./Route');\n\nfunction checkPropTypes(componentName, propTypes, props) {\n  componentName = componentName || 'UnknownComponent';\n\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error = propTypes[propName](props, propName, componentName);\n\n      if (error instanceof Error) warning(false, error.message);\n    }\n  }\n}\n\nfunction createRouteOptions(props) {\n  var options = assign({}, props);\n  var handler = options.handler;\n\n  if (handler) {\n    options.onEnter = handler.willTransitionTo;\n    options.onLeave = handler.willTransitionFrom;\n  }\n\n  return options;\n}\n\nfunction createRouteFromReactElement(element) {\n  if (!React.isValidElement(element)) {\n    return;\n  }var type = element.type;\n  var props = assign({}, type.defaultProps, element.props);\n\n  if (type.propTypes) checkPropTypes(type.displayName, type.propTypes, props);\n\n  if (type === DefaultRoute) {\n    return Route.createDefaultRoute(createRouteOptions(props));\n  }if (type === NotFoundRoute) {\n    return Route.createNotFoundRoute(createRouteOptions(props));\n  }if (type === Redirect) {\n    return Route.createRedirect(createRouteOptions(props));\n  }return Route.createRoute(createRouteOptions(props), function () {\n    if (props.children) createRoutesFromReactChildren(props.children);\n  });\n}\n\n/**\n * Creates and returns an array of routes created from the given\n * ReactChildren, all of which should be one of <Route>, <DefaultRoute>,\n * <NotFoundRoute>, or <Redirect>, e.g.:\n *\n *   var { createRoutesFromReactChildren, Route, Redirect } = require('react-router');\n *\n *   var routes = createRoutesFromReactChildren(\n *     <Route path=\"/\" handler={App}>\n *       <Route name=\"user\" path=\"/user/:userId\" handler={User}>\n *         <Route name=\"task\" path=\"tasks/:taskId\" handler={Task}/>\n *         <Redirect from=\"todos/:taskId\" to=\"task\"/>\n *       </Route>\n *     </Route>\n *   );\n */\nfunction createRoutesFromReactChildren(children) {\n  var routes = [];\n\n  React.Children.forEach(children, function (child) {\n    if (child = createRouteFromReactElement(child)) routes.push(child);\n  });\n\n  return routes;\n}\n\nmodule.exports = createRoutesFromReactChildren;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/createRoutesFromReactChildren.js\n ** module id = 215\n ** module chunks = 0\n **/","/* jshint -W058 */\n'use strict';\n\nvar React = require('react');\nvar warning = require('react/lib/warning');\nvar invariant = require('react/lib/invariant');\nvar canUseDOM = require('react/lib/ExecutionEnvironment').canUseDOM;\nvar LocationActions = require('./actions/LocationActions');\nvar ImitateBrowserBehavior = require('./behaviors/ImitateBrowserBehavior');\nvar HashLocation = require('./locations/HashLocation');\nvar HistoryLocation = require('./locations/HistoryLocation');\nvar RefreshLocation = require('./locations/RefreshLocation');\nvar StaticLocation = require('./locations/StaticLocation');\nvar ScrollHistory = require('./ScrollHistory');\nvar createRoutesFromReactChildren = require('./createRoutesFromReactChildren');\nvar isReactChildren = require('./isReactChildren');\nvar Transition = require('./Transition');\nvar PropTypes = require('./PropTypes');\nvar Redirect = require('./Redirect');\nvar History = require('./History');\nvar Cancellation = require('./Cancellation');\nvar Match = require('./Match');\nvar Route = require('./Route');\nvar supportsHistory = require('./supportsHistory');\nvar PathUtils = require('./PathUtils');\n\n/**\n * The default location for new routers.\n */\nvar DEFAULT_LOCATION = canUseDOM ? HashLocation : '/';\n\n/**\n * The default scroll behavior for new routers.\n */\nvar DEFAULT_SCROLL_BEHAVIOR = canUseDOM ? ImitateBrowserBehavior : null;\n\nfunction hasProperties(object, properties) {\n  for (var propertyName in properties) if (properties.hasOwnProperty(propertyName) && object[propertyName] !== properties[propertyName]) {\n    return false;\n  }return true;\n}\n\nfunction hasMatch(routes, route, prevParams, nextParams, prevQuery, nextQuery) {\n  return routes.some(function (r) {\n    if (r !== route) return false;\n\n    var paramNames = route.paramNames;\n    var paramName;\n\n    // Ensure that all params the route cares about did not change.\n    for (var i = 0, len = paramNames.length; i < len; ++i) {\n      paramName = paramNames[i];\n\n      if (nextParams[paramName] !== prevParams[paramName]) return false;\n    }\n\n    // Ensure the query hasn't changed.\n    return hasProperties(prevQuery, nextQuery) && hasProperties(nextQuery, prevQuery);\n  });\n}\n\nfunction addRoutesToNamedRoutes(routes, namedRoutes) {\n  var route;\n  for (var i = 0, len = routes.length; i < len; ++i) {\n    route = routes[i];\n\n    if (route.name) {\n      invariant(namedRoutes[route.name] == null, 'You may not have more than one route named \"%s\"', route.name);\n\n      namedRoutes[route.name] = route;\n    }\n\n    if (route.childRoutes) addRoutesToNamedRoutes(route.childRoutes, namedRoutes);\n  }\n}\n\nfunction routeIsActive(activeRoutes, routeName) {\n  return activeRoutes.some(function (route) {\n    return route.name === routeName;\n  });\n}\n\nfunction paramsAreActive(activeParams, params) {\n  for (var property in params) if (String(activeParams[property]) !== String(params[property])) {\n    return false;\n  }return true;\n}\n\nfunction queryIsActive(activeQuery, query) {\n  for (var property in query) if (String(activeQuery[property]) !== String(query[property])) {\n    return false;\n  }return true;\n}\n\n/**\n * Creates and returns a new router using the given options. A router\n * is a ReactComponent class that knows how to react to changes in the\n * URL and keep the contents of the page in sync.\n *\n * Options may be any of the following:\n *\n * - routes           (required) The route config\n * - location         The location to use. Defaults to HashLocation when\n *                    the DOM is available, \"/\" otherwise\n * - scrollBehavior   The scroll behavior to use. Defaults to ImitateBrowserBehavior\n *                    when the DOM is available, null otherwise\n * - onError          A function that is used to handle errors\n * - onAbort          A function that is used to handle aborted transitions\n *\n * When rendering in a server-side environment, the location should simply\n * be the URL path that was used in the request, including the query string.\n */\nfunction createRouter(options) {\n  options = options || {};\n\n  if (isReactChildren(options)) options = { routes: options };\n\n  var mountedComponents = [];\n  var location = options.location || DEFAULT_LOCATION;\n  var scrollBehavior = options.scrollBehavior || DEFAULT_SCROLL_BEHAVIOR;\n  var state = {};\n  var nextState = {};\n  var pendingTransition = null;\n  var dispatchHandler = null;\n\n  if (typeof location === 'string') location = new StaticLocation(location);\n\n  if (location instanceof StaticLocation) {\n    warning(!canUseDOM || process.env.NODE_ENV === 'test', 'You should not use a static location in a DOM environment because ' + 'the router will not be kept in sync with the current URL');\n  } else {\n    invariant(canUseDOM || location.needsDOM === false, 'You cannot use %s without a DOM', location);\n  }\n\n  // Automatically fall back to full page refreshes in\n  // browsers that don't support the HTML history API.\n  if (location === HistoryLocation && !supportsHistory()) location = RefreshLocation;\n\n  var Router = React.createClass({\n\n    displayName: 'Router',\n\n    statics: {\n\n      isRunning: false,\n\n      cancelPendingTransition: function cancelPendingTransition() {\n        if (pendingTransition) {\n          pendingTransition.cancel();\n          pendingTransition = null;\n        }\n      },\n\n      clearAllRoutes: function clearAllRoutes() {\n        Router.cancelPendingTransition();\n        Router.namedRoutes = {};\n        Router.routes = [];\n      },\n\n      /**\n       * Adds routes to this router from the given children object (see ReactChildren).\n       */\n      addRoutes: function addRoutes(routes) {\n        if (isReactChildren(routes)) routes = createRoutesFromReactChildren(routes);\n\n        addRoutesToNamedRoutes(routes, Router.namedRoutes);\n\n        Router.routes.push.apply(Router.routes, routes);\n      },\n\n      /**\n       * Replaces routes of this router from the given children object (see ReactChildren).\n       */\n      replaceRoutes: function replaceRoutes(routes) {\n        Router.clearAllRoutes();\n        Router.addRoutes(routes);\n        Router.refresh();\n      },\n\n      /**\n       * Performs a match of the given path against this router and returns an object\n       * with the { routes, params, pathname, query } that match. Returns null if no\n       * match can be made.\n       */\n      match: function match(path) {\n        return Match.findMatch(Router.routes, path);\n      },\n\n      /**\n       * Returns an absolute URL path created from the given route\n       * name, URL parameters, and query.\n       */\n      makePath: function makePath(to, params, query) {\n        var path;\n        if (PathUtils.isAbsolute(to)) {\n          path = to;\n        } else {\n          var route = to instanceof Route ? to : Router.namedRoutes[to];\n\n          invariant(route instanceof Route, 'Cannot find a route named \"%s\"', to);\n\n          path = route.path;\n        }\n\n        return PathUtils.withQuery(PathUtils.injectParams(path, params), query);\n      },\n\n      /**\n       * Returns a string that may safely be used as the href of a link\n       * to the route with the given name, URL parameters, and query.\n       */\n      makeHref: function makeHref(to, params, query) {\n        var path = Router.makePath(to, params, query);\n        return location === HashLocation ? '#' + path : path;\n      },\n\n      /**\n       * Transitions to the URL specified in the arguments by pushing\n       * a new URL onto the history stack.\n       */\n      transitionTo: function transitionTo(to, params, query) {\n        var path = Router.makePath(to, params, query);\n\n        if (pendingTransition) {\n          // Replace so pending location does not stay in history.\n          location.replace(path);\n        } else {\n          location.push(path);\n        }\n      },\n\n      /**\n       * Transitions to the URL specified in the arguments by replacing\n       * the current URL in the history stack.\n       */\n      replaceWith: function replaceWith(to, params, query) {\n        location.replace(Router.makePath(to, params, query));\n      },\n\n      /**\n       * Transitions to the previous URL if one is available. Returns true if the\n       * router was able to go back, false otherwise.\n       *\n       * Note: The router only tracks history entries in your application, not the\n       * current browser session, so you can safely call this function without guarding\n       * against sending the user back to some other site. However, when using\n       * RefreshLocation (which is the fallback for HistoryLocation in browsers that\n       * don't support HTML5 history) this method will *always* send the client back\n       * because we cannot reliably track history length.\n       */\n      goBack: function goBack() {\n        if (History.length > 1 || location === RefreshLocation) {\n          location.pop();\n          return true;\n        }\n\n        warning(false, 'goBack() was ignored because there is no router history');\n\n        return false;\n      },\n\n      handleAbort: options.onAbort || function (abortReason) {\n        if (location instanceof StaticLocation) throw new Error('Unhandled aborted transition! Reason: ' + abortReason);\n\n        if (abortReason instanceof Cancellation) {\n          return;\n        } else if (abortReason instanceof Redirect) {\n          location.replace(Router.makePath(abortReason.to, abortReason.params, abortReason.query));\n        } else {\n          location.pop();\n        }\n      },\n\n      handleError: options.onError || function (error) {\n        // Throw so we don't silently swallow async errors.\n        throw error; // This error probably originated in a transition hook.\n      },\n\n      handleLocationChange: function handleLocationChange(change) {\n        Router.dispatch(change.path, change.type);\n      },\n\n      /**\n       * Performs a transition to the given path and calls callback(error, abortReason)\n       * when the transition is finished. If both arguments are null the router's state\n       * was updated. Otherwise the transition did not complete.\n       *\n       * In a transition, a router first determines which routes are involved by beginning\n       * with the current route, up the route tree to the first parent route that is shared\n       * with the destination route, and back down the tree to the destination route. The\n       * willTransitionFrom hook is invoked on all route handlers we're transitioning away\n       * from, in reverse nesting order. Likewise, the willTransitionTo hook is invoked on\n       * all route handlers we're transitioning to.\n       *\n       * Both willTransitionFrom and willTransitionTo hooks may either abort or redirect the\n       * transition. To resolve asynchronously, they may use the callback argument. If no\n       * hooks wait, the transition is fully synchronous.\n       */\n      dispatch: function dispatch(path, action) {\n        Router.cancelPendingTransition();\n\n        var prevPath = state.path;\n        var isRefreshing = action == null;\n\n        if (prevPath === path && !isRefreshing) {\n          return;\n        } // Nothing to do!\n\n        // Record the scroll position as early as possible to\n        // get it before browsers try update it automatically.\n        if (prevPath && action === LocationActions.PUSH) Router.recordScrollPosition(prevPath);\n\n        var match = Router.match(path);\n\n        warning(match != null, 'No route matches path \"%s\". Make sure you have <Route path=\"%s\"> somewhere in your routes', path, path);\n\n        if (match == null) match = {};\n\n        var prevRoutes = state.routes || [];\n        var prevParams = state.params || {};\n        var prevQuery = state.query || {};\n\n        var nextRoutes = match.routes || [];\n        var nextParams = match.params || {};\n        var nextQuery = match.query || {};\n\n        var fromRoutes, toRoutes;\n        if (prevRoutes.length) {\n          fromRoutes = prevRoutes.filter(function (route) {\n            return !hasMatch(nextRoutes, route, prevParams, nextParams, prevQuery, nextQuery);\n          });\n\n          toRoutes = nextRoutes.filter(function (route) {\n            return !hasMatch(prevRoutes, route, prevParams, nextParams, prevQuery, nextQuery);\n          });\n        } else {\n          fromRoutes = [];\n          toRoutes = nextRoutes;\n        }\n\n        var transition = new Transition(path, Router.replaceWith.bind(Router, path));\n        pendingTransition = transition;\n\n        var fromComponents = mountedComponents.slice(prevRoutes.length - fromRoutes.length);\n\n        Transition.from(transition, fromRoutes, fromComponents, function (error) {\n          if (error || transition.abortReason) return dispatchHandler.call(Router, error, transition); // No need to continue.\n\n          Transition.to(transition, toRoutes, nextParams, nextQuery, function (error) {\n            dispatchHandler.call(Router, error, transition, {\n              path: path,\n              action: action,\n              pathname: match.pathname,\n              routes: nextRoutes,\n              params: nextParams,\n              query: nextQuery\n            });\n          });\n        });\n      },\n\n      /**\n       * Starts this router and calls callback(router, state) when the route changes.\n       *\n       * If the router's location is static (i.e. a URL path in a server environment)\n       * the callback is called only once. Otherwise, the location should be one of the\n       * Router.*Location objects (e.g. Router.HashLocation or Router.HistoryLocation).\n       */\n      run: function run(callback) {\n        invariant(!Router.isRunning, 'Router is already running');\n\n        dispatchHandler = function (error, transition, newState) {\n          if (error) Router.handleError(error);\n\n          if (pendingTransition !== transition) return;\n\n          pendingTransition = null;\n\n          if (transition.abortReason) {\n            Router.handleAbort(transition.abortReason);\n          } else {\n            callback.call(Router, Router, nextState = newState);\n          }\n        };\n\n        if (!(location instanceof StaticLocation)) {\n          if (location.addChangeListener) location.addChangeListener(Router.handleLocationChange);\n\n          Router.isRunning = true;\n        }\n\n        // Bootstrap using the current path.\n        Router.refresh();\n      },\n\n      refresh: function refresh() {\n        Router.dispatch(location.getCurrentPath(), null);\n      },\n\n      stop: function stop() {\n        Router.cancelPendingTransition();\n\n        if (location.removeChangeListener) location.removeChangeListener(Router.handleLocationChange);\n\n        Router.isRunning = false;\n      },\n\n      getLocation: function getLocation() {\n        return location;\n      },\n\n      getScrollBehavior: function getScrollBehavior() {\n        return scrollBehavior;\n      },\n\n      getRouteAtDepth: function getRouteAtDepth(routeDepth) {\n        var routes = state.routes;\n        return routes && routes[routeDepth];\n      },\n\n      setRouteComponentAtDepth: function setRouteComponentAtDepth(routeDepth, component) {\n        mountedComponents[routeDepth] = component;\n      },\n\n      /**\n       * Returns the current URL path + query string.\n       */\n      getCurrentPath: function getCurrentPath() {\n        return state.path;\n      },\n\n      /**\n       * Returns the current URL path without the query string.\n       */\n      getCurrentPathname: function getCurrentPathname() {\n        return state.pathname;\n      },\n\n      /**\n       * Returns an object of the currently active URL parameters.\n       */\n      getCurrentParams: function getCurrentParams() {\n        return state.params;\n      },\n\n      /**\n       * Returns an object of the currently active query parameters.\n       */\n      getCurrentQuery: function getCurrentQuery() {\n        return state.query;\n      },\n\n      /**\n       * Returns an array of the currently active routes.\n       */\n      getCurrentRoutes: function getCurrentRoutes() {\n        return state.routes;\n      },\n\n      /**\n       * Returns true if the given route, params, and query are active.\n       */\n      isActive: function isActive(to, params, query) {\n        if (PathUtils.isAbsolute(to)) {\n          return to === state.path;\n        }return routeIsActive(state.routes, to) && paramsAreActive(state.params, params) && (query == null || queryIsActive(state.query, query));\n      }\n\n    },\n\n    mixins: [ScrollHistory],\n\n    propTypes: {\n      children: PropTypes.falsy\n    },\n\n    childContextTypes: {\n      routeDepth: PropTypes.number.isRequired,\n      router: PropTypes.router.isRequired\n    },\n\n    getChildContext: function getChildContext() {\n      return {\n        routeDepth: 1,\n        router: Router\n      };\n    },\n\n    getInitialState: function getInitialState() {\n      return state = nextState;\n    },\n\n    componentWillReceiveProps: function componentWillReceiveProps() {\n      this.setState(state = nextState);\n    },\n\n    componentWillUnmount: function componentWillUnmount() {\n      Router.stop();\n    },\n\n    render: function render() {\n      var route = Router.getRouteAtDepth(0);\n      return route ? React.createElement(route.handler, this.props) : null;\n    }\n\n  });\n\n  Router.clearAllRoutes();\n\n  if (options.routes) Router.addRoutes(options.routes);\n\n  return Router;\n}\n\nmodule.exports = createRouter;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/createRouter.js\n ** module id = 216\n ** module chunks = 0\n **/","'use strict';\n\nvar invariant = require('react/lib/invariant');\nvar canUseDOM = require('react/lib/ExecutionEnvironment').canUseDOM;\nvar getWindowScrollPosition = require('./getWindowScrollPosition');\n\nfunction shouldUpdateScroll(state, prevState) {\n  if (!prevState) {\n    return true;\n  } // Don't update scroll position when only the query has changed.\n  if (state.pathname === prevState.pathname) {\n    return false;\n  }var routes = state.routes;\n  var prevRoutes = prevState.routes;\n\n  var sharedAncestorRoutes = routes.filter(function (route) {\n    return prevRoutes.indexOf(route) !== -1;\n  });\n\n  return !sharedAncestorRoutes.some(function (route) {\n    return route.ignoreScrollBehavior;\n  });\n}\n\n/**\n * Provides the router with the ability to manage window scroll position\n * according to its scroll behavior.\n */\nvar ScrollHistory = {\n\n  statics: {\n\n    /**\n     * Records curent scroll position as the last known position for the given URL path.\n     */\n    recordScrollPosition: function recordScrollPosition(path) {\n      if (!this.scrollHistory) this.scrollHistory = {};\n\n      this.scrollHistory[path] = getWindowScrollPosition();\n    },\n\n    /**\n     * Returns the last known scroll position for the given URL path.\n     */\n    getScrollPosition: function getScrollPosition(path) {\n      if (!this.scrollHistory) this.scrollHistory = {};\n\n      return this.scrollHistory[path] || null;\n    }\n\n  },\n\n  componentWillMount: function componentWillMount() {\n    invariant(this.constructor.getScrollBehavior() == null || canUseDOM, 'Cannot use scroll behavior without a DOM');\n  },\n\n  componentDidMount: function componentDidMount() {\n    this._updateScroll();\n  },\n\n  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n    this._updateScroll(prevState);\n  },\n\n  _updateScroll: function _updateScroll(prevState) {\n    if (!shouldUpdateScroll(this.state, prevState)) {\n      return;\n    }var scrollBehavior = this.constructor.getScrollBehavior();\n\n    if (scrollBehavior) scrollBehavior.updateScrollPosition(this.constructor.getScrollPosition(this.state.path), this.state.action);\n  }\n\n};\n\nmodule.exports = ScrollHistory;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/ScrollHistory.js\n ** module id = 217\n ** module chunks = 0\n **/","'use strict';\n\nvar invariant = require('react/lib/invariant');\nvar canUseDOM = require('react/lib/ExecutionEnvironment').canUseDOM;\n\n/**\n * Returns the current scroll position of the window as { x, y }.\n */\nfunction getWindowScrollPosition() {\n  invariant(canUseDOM, 'Cannot get current scroll position without a DOM');\n\n  return {\n    x: window.pageXOffset || document.documentElement.scrollLeft,\n    y: window.pageYOffset || document.documentElement.scrollTop\n  };\n}\n\nmodule.exports = getWindowScrollPosition;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/getWindowScrollPosition.js\n ** module id = 218\n ** module chunks = 0\n **/","'use strict';\n\nvar React = require('react');\n\nfunction isValidChild(object) {\n  return object == null || React.isValidElement(object);\n}\n\nfunction isReactChildren(object) {\n  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);\n}\n\nmodule.exports = isReactChildren;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/isReactChildren.js\n ** module id = 219\n ** module chunks = 0\n **/","/* jshint -W058 */\n\n'use strict';\n\nvar Cancellation = require('./Cancellation');\nvar Redirect = require('./Redirect');\n\n/**\n * Encapsulates a transition to a given path.\n *\n * The willTransitionTo and willTransitionFrom handlers receive\n * an instance of this class as their first argument.\n */\nfunction Transition(path, retry) {\n  this.path = path;\n  this.abortReason = null;\n  // TODO: Change this to router.retryTransition(transition)\n  this.retry = retry.bind(this);\n}\n\nTransition.prototype.abort = function (reason) {\n  if (this.abortReason == null) this.abortReason = reason || 'ABORT';\n};\n\nTransition.prototype.redirect = function (to, params, query) {\n  this.abort(new Redirect(to, params, query));\n};\n\nTransition.prototype.cancel = function () {\n  this.abort(new Cancellation());\n};\n\nTransition.from = function (transition, routes, components, callback) {\n  routes.reduce(function (callback, route, index) {\n    return function (error) {\n      if (error || transition.abortReason) {\n        callback(error);\n      } else if (route.onLeave) {\n        try {\n          route.onLeave(transition, components[index], callback);\n\n          // If there is no callback in the argument list, call it automatically.\n          if (route.onLeave.length < 3) callback();\n        } catch (e) {\n          callback(e);\n        }\n      } else {\n        callback();\n      }\n    };\n  }, callback)();\n};\n\nTransition.to = function (transition, routes, params, query, callback) {\n  routes.reduceRight(function (callback, route) {\n    return function (error) {\n      if (error || transition.abortReason) {\n        callback(error);\n      } else if (route.onEnter) {\n        try {\n          route.onEnter(transition, params, query, callback);\n\n          // If there is no callback in the argument list, call it automatically.\n          if (route.onEnter.length < 4) callback();\n        } catch (e) {\n          callback(e);\n        }\n      } else {\n        callback();\n      }\n    };\n  }, callback)();\n};\n\nmodule.exports = Transition;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/Transition.js\n ** module id = 220\n ** module chunks = 0\n **/","/**\n * Represents a cancellation caused by navigating away\n * before the previous transition has fully resolved.\n */\n\"use strict\";\n\nfunction Cancellation() {}\n\nmodule.exports = Cancellation;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/Cancellation.js\n ** module id = 221\n ** module chunks = 0\n **/","/**\n * Encapsulates a redirect to the given route.\n */\n\"use strict\";\n\nfunction Redirect(to, params, query) {\n  this.to = to;\n  this.params = params;\n  this.query = query;\n}\n\nmodule.exports = Redirect;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/Redirect.js\n ** module id = 222\n ** module chunks = 0\n **/","'use strict';\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n/* jshint -W084 */\nvar PathUtils = require('./PathUtils');\n\nfunction deepSearch(route, pathname, query) {\n  // Check the subtree first to find the most deeply-nested match.\n  var childRoutes = route.childRoutes;\n  if (childRoutes) {\n    var match, childRoute;\n    for (var i = 0, len = childRoutes.length; i < len; ++i) {\n      childRoute = childRoutes[i];\n\n      if (childRoute.isDefault || childRoute.isNotFound) continue; // Check these in order later.\n\n      if (match = deepSearch(childRoute, pathname, query)) {\n        // A route in the subtree matched! Add this route and we're done.\n        match.routes.unshift(route);\n        return match;\n      }\n    }\n  }\n\n  // No child routes matched; try the default route.\n  var defaultRoute = route.defaultRoute;\n  if (defaultRoute && (params = PathUtils.extractParams(defaultRoute.path, pathname))) {\n    return new Match(pathname, params, query, [route, defaultRoute]);\n  } // Does the \"not found\" route match?\n  var notFoundRoute = route.notFoundRoute;\n  if (notFoundRoute && (params = PathUtils.extractParams(notFoundRoute.path, pathname))) {\n    return new Match(pathname, params, query, [route, notFoundRoute]);\n  } // Last attempt: check this route.\n  var params = PathUtils.extractParams(route.path, pathname);\n  if (params) {\n    return new Match(pathname, params, query, [route]);\n  }return null;\n}\n\nvar Match = (function () {\n  function Match(pathname, params, query, routes) {\n    _classCallCheck(this, Match);\n\n    this.pathname = pathname;\n    this.params = params;\n    this.query = query;\n    this.routes = routes;\n  }\n\n  _createClass(Match, null, [{\n    key: 'findMatch',\n\n    /**\n     * Attempts to match depth-first a route in the given route's\n     * subtree against the given path and returns the match if it\n     * succeeds, null if no match can be made.\n     */\n    value: function findMatch(routes, path) {\n      var pathname = PathUtils.withoutQuery(path);\n      var query = PathUtils.extractQuery(path);\n      var match = null;\n\n      for (var i = 0, len = routes.length; match == null && i < len; ++i) match = deepSearch(routes[i], pathname, query);\n\n      return match;\n    }\n  }]);\n\n  return Match;\n})();\n\nmodule.exports = Match;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/Match.js\n ** module id = 223\n ** module chunks = 0\n **/","'use strict';\n\nfunction supportsHistory() {\n  /*! taken from modernizr\n   * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n   * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n   * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586\n   */\n  var ua = navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {\n    return false;\n  }\n  return window.history && 'pushState' in window.history;\n}\n\nmodule.exports = supportsHistory;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/supportsHistory.js\n ** module id = 224\n ** module chunks = 0\n **/","'use strict';\n\nvar createRouter = require('./createRouter');\n\n/**\n * A high-level convenience method that creates, configures, and\n * runs a router in one shot. The method signature is:\n *\n *   Router.run(routes[, location ], callback);\n *\n * Using `window.location.hash` to manage the URL, you could do:\n *\n *   Router.run(routes, function (Handler) {\n *     React.render(<Handler/>, document.body);\n *   });\n * \n * Using HTML5 history and a custom \"cursor\" prop:\n * \n *   Router.run(routes, Router.HistoryLocation, function (Handler) {\n *     React.render(<Handler cursor={cursor}/>, document.body);\n *   });\n *\n * Returns the newly created router.\n *\n * Note: If you need to specify further options for your router such\n * as error/abort handling or custom scroll behavior, use Router.create\n * instead.\n *\n *   var router = Router.create(options);\n *   router.run(function (Handler) {\n *     // ...\n *   });\n */\nfunction runRouter(routes, location, callback) {\n  if (typeof location === 'function') {\n    callback = location;\n    location = null;\n  }\n\n  var router = createRouter({\n    routes: routes,\n    location: location\n  });\n\n  router.run(callback);\n\n  return router;\n}\n\nmodule.exports = runRouter;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-router/lib/runRouter.js\n ** module id = 225\n ** module chunks = 0\n **/","/** @jsx React.DOM */var React = require('react');\nvar MapLogic = require('../map.js');\n// var CalendarLogic = require('../calendar.js');\n\nvar MapPage = React.createClass({\n  componentDidMount: function(){\n    MapLogic();\n    // CalendarLogic();\n  },\n  render: function () {\n\n    return (\n    <div>\n       <div id=\"controls\" className=\"container\">\n           <button id=\"playbutton\" className=\"btn btn-m\">Loading</button>\n           <span id=\"speed\"></span>\n           <span className=\"right l\"><span id=\"date\"></span>, <span id=\"time\"></span></span>\n         </div>\n         <div id=\"calendar\" className=\"container\"></div>\n         <div id=\"timeline\" className=\"container\"></div>\n         \n         <div id=\"map\" className=\"container\">\n           <span className=\"map-tooltip hide\">Tooltip</span>\n           <div id=\"routes-info\"></div>\n         </div>\n     </div>\n    );\n  } \n\n});\n\nmodule.exports = MapPage;\n\n// render: function () {\n\n//     var divStyle = {\n//       width: '50%'\n//     };\n\n//     return (\n//       <div class=\"container\">\n//           <nav class=\"menu right\"><span class=\"active\">Map</span><a href=\"statistics.html\">Statistics</a><a href=\"#\">Predictions</a></nav>\n//           <h1>Data Cycles</h1>\n//           <h3>Bay Area Bike Share data visualization</h3>\n//       </div>\n//       <div id=\"timeline\" class=\"container\">\n//       </div>\n//       <div id=\"controls\" class=\"container\">\n//         <button id=\"playbutton\" class=\"btn btn-m\">Loading</button>\n//         <span id=\"timer\" class=\"right l\"></span>\n//       </div>\n//       <div id=\"map\" class=\"container\">\n//         <span class=\"map-tooltip hide\">Tooltip</span>\n//       </div>\n//     );\n//   },\n\n\n/** WEBPACK FOOTER **\n ** ./client/js/components/MapPage.react.jsx\n **/","var d3geotile = require('d3.geo.tile')();\nvar helperFunctions = require('./buildgeojson');\nvar fetchNewDate = require('./fetchData');\nvar dateStartValue = '2013-12-19';\nvar dateMinValue = '2013-08-29';\nvar dateMaxValue = '2014-09-01';\n\nvar dateFormat = d3.time.format(\"%Y.%m.%d\");\nvar dateServerFormat = d3.time.format(\"%-m/%d/%Y 00:00\");\nvar dateDocksFormat = d3.time.format(\"%Y/%m/%d\");\n\nvar width, height;\nvar second = 1000;\nvar minute = 60 * second;\nvar hour = 60 * minute;\nvar day = 24 * hour;\n\nvar dbJson;\nvar play = false;\nvar realtime;\nvar bikesJson;\nvar bikes = [];\nvar docks = [];\nvar animduration = 15 * minute;\nvar timer, timermemo = 0.313 * animduration;\nvar playmemo = false;\nvar colors = [\"#FF0000\", \"#FF1100\", \"#FF2300\", \"#FF3400\", \"#FF4600\", \"#FF5700\", \"#FF6900\", \"#FF7B00\", \"#FF8C00\", \"#FF9E00\", \"#FFAF00\", \"#FFC100\", \"#FFD300\", \"#FFE400\", \"#FFF600\", \"#F7FF00\", \"#E5FF00\", \"#D4FF00\", \"#C2FF00\", \"#B0FF00\", \"#9FFF00\", \"#8DFF00\", \"#7CFF00\", \"#6AFF00\", \"#58FF00\", \"#47FF00\", \"#35FF00\", \"#24FF00\", \"#12FF00\", \"#00FF00\"];\n\nvar map = function(){\n  var fetchNewDate = function(start_date, end_date){\n    var tripStartDate = start_date ? dateServerFormat(start_date) : \"12/18/2013 00:00\";\n    var tripEndDate = end_date ? dateServerFormat(end_date) : \"12/19/2013 00:00\";\n    var dockStartDate = start_date ? dateDocksFormat(start_date) : \"2013/12/18\";\n\n    d3.json(\"/api/timeline/calendar?start_date=\" + tripStartDate + \"&end_date=\" + tripEndDate, function(error, tripJson) {\n      if (error) {\n        console.log(\"error\", error);\n      }\n      bikesJson = helperFunctions.buildBikesJson(tripJson);\n      console.log(\"elastic successsssss--------->\", bikesJson);\n      d3.json(\"/api/redis?start_date=\" + dockStartDate, function(error, docksJson) {\n        if (error) {\n          console.log(\"error\", error);\n        }\n        var docksHash = helperFunctions.buildDocksHash(tripJson, docksJson);\n        console.log(\"redis successsssss--------->\", docksHash);  \n        drawRoutes(bikesJson);\n        drawDocks(docksHash);\n        loaded();\n      });\n    });\n  };\n\nvar formatMilliseconds = function (d) {\n  var hours = Math.floor(d / hour);\n  var minutes = Math.floor((d % hour) / minute);\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n  return hours + \":\" + minutes;\n};\n\nvar timeToMilliSeconds = function (string) {\n  var values = string.split(\":\");\n  return values[0] * hour + values[1] * minute;\n};\n\nvar animateRing = function (id, color) {\n  d3.select(\"#ring-\" + id)\n    .classed(\"hide\", false)\n    .attr(\"stroke\", color)\n    .transition()\n    .ease(\"elastic\")\n    .duration(800)\n    .attr(\"r\", \"20px\")\n    .each(\"end\", function () {\n      d3.select(this)\n        .attr({\n          r: \"5px\", \n          class: \"hide ring\"\n        });\n    });\n};\n\nvar drawRing = function (id, color) {\n  d3.select(id)\n    .attr({\n      r: \"5px\", \n      class: \"hide ring\"\n    })\n    .classed(\"hide\", false)\n    .attr(\"stroke\", color)\n    .transition()\n    .ease(\"elastic\")\n    .duration(800)\n    .attr(\"r\", \"20px\");\n};\n\nvar drawRoutes = function (data) {\n  var routes = svgAnimations.append(\"svg:g\")\n    .classed(\"routes\", true)\n    .selectAll(\"path\")\n    .data(data.features)\n    .enter()\n    .append(\"svg:path\")\n    .attr({\n      class: \"route\", \n      id: function(d){ return \"route-\" + d.properties.id }, \n      d: path, \n      \"fill-opacity\": 0\n    });\n\n  bikes = svgAnimations.append(\"svg:g\")\n    .classed(\"bikes\", true)\n    .selectAll(\"circle\")\n    .data(data.features)\n    .enter()\n    .append(\"circle\")\n    .attr({\n      r: 8, \n      fill: '#f33', \n      class: \"hide bike\",\n      id: function(d) { return \"bike-\" + d.properties.id }\n    })\n    .on(\"mouseover\", function(d) { showBikeRoute(d, this); })\n    .on(\"mouseout\", function(){ hideBikesRoute(); });\n    // .on(\"mousemove\", function(){ return tooltip.style(\"top\", (event.pageY-10)+\"px\").style(\"left\",(event.pageX+10)+\"px\");})\n\n  renderZoom();\n};\n\nvar hideBikesRoute = function() {\n  tooltip.classed(\"hide\", true);\n  d3.selectAll(\".route\")\n    .transition()\n    .attr({\n      \"stroke-opacity\": 0\n    });\n  d3.selectAll(\".ring\")\n    .attr({\n      class: \"hide ring\"\n    });\n  routesinfo.html(\"\");\n  routesInfolines.html(\"\");\n}\n\nvar showBikeRoute = function (d, bike) {\n  var svgAnimationsPosition = svgAnimations.node().getBoundingClientRect();\n  var position = bike.getBoundingClientRect(); \n  var left = position.left - svgAnimationsPosition.left - 76;\n  var top = position.top - svgAnimationsPosition.top - 80;\n  var trips = [];\n  var id = d.properties.bikeID;\n  var speed = 1;\n  var delay = 0;\n  var delays = [delay];\n  console.log(bikes);\n  for (var i = 0; i < bikesJson.features.length; i++) {\n    if (bikesJson.features[i].properties.bikeID == id) {\n      delay += bikesJson.features[i].properties.duration/speed;\n      bikesJson.features[i].properties.delay = delay;\n      trips.push(bikesJson.features[i].properties);\n    }\n  }\n\n  animateBikeRoute(trips);\n  // tooltip.attr({\n  //     style: \"left:\" + left + \"px;top:\" + top + \"px;\"\n  //   })\n  //   .classed(\"hide\", false)\n  //   .html(id);\n\n}\n\nvar animateBikeRoute = function(trips) {\n  var routeIdsArray = [];\n  var startRingIdsArray = [];\n  var endRingIdsArray = [];\n  var speed = 1;\n  var delay = 0;\n  var delays = [delay];\n  var svgAnimationsPosition = svgAnimations.node().getBoundingClientRect();\n\n  for (var i = 0; i < trips.length; i++) {\n    routeIdsArray.push(\"#route-\" + trips[i].id); \n    startRingIdsArray.push(\"#ring-\" + trips[i].startTerminal);\n    endRingIdsArray.push(\"#ring-\" + trips[i].endTerminal);\n    delay += trips[i].duration/speed;\n    delays.push(delay);\n\n    var routeInfoBlocPosition;\n\n    var routeInfoBloc = routesinfo.append(\"div\")\n      .attr({\n        class: function() {\n          return \"route-info-bloc\";\n        }\n      })\n      .html(\"<p>\" + (i * 2 + 1) + \". \" + trips[i].startTime + \": \" + trips[i].startStation + \"</p><p>\" + (i * 2 + 2) + \". \" + trips[i].endTime + \": \" + trips[i].endStation + \"<p>\");\n\n    var dock = d3.select(\"#dock-\" + trips[i].endTerminal);\n    var infoBlocPosition = routeInfoBloc.node().getBoundingClientRect();\n    var startDockPosition = dock.node().getBoundingClientRect();\n    var endDockPosition = dock.node().getBoundingClientRect();\n    // array of coordinates of the lines between the bloc and their relative docks\n\n    routesInfolines.append(\"line\")          // attach a line\n    .style(\"stroke\", \"red\")  // colour the line\n    .attr({\n      \"x1\": startDockPosition.right - svgAnimationsPosition.left,   \n      \"y1\": startDockPosition.top - svgAnimationsPosition.top,      \n      \"x2\": infoBlocPosition.left - 10 - svgAnimationsPosition.left,     \n      \"y2\": infoBlocPosition.top + 10 - svgAnimationsPosition.top\n    });\n\n    routesInfolines.append(\"line\")          // attach a line\n    .style(\"stroke\", \"blue\")  // colour the line\n    .attr({\n      \"x1\": endDockPosition.right - svgAnimationsPosition.left,   \n      \"y1\": endDockPosition.bottom - svgAnimationsPosition.top,   \n      \"x2\": infoBlocPosition.left - 10 - svgAnimationsPosition.left,   \n      \"y2\": infoBlocPosition.bottom - 10 - svgAnimationsPosition.top\n    });\n\n    var stepNumber = routesStepNumber.append(\"g\")\n      .attr({\"class\": \"step-number\"});\n\n\n    // stepNumber.append(\"circle\")\n    //   .attr({\n    //     r: 5,\n    //     fill: \"black\",\n    //     cx: function (d) { return projection(d.geometry.coordinates)[0]; }, \n    //     cy: function (d) { return projection(d.geometry.coordinates)[1]; }, \n    //   });\n\n    // stepNumber.append(\"text\")\n    //     .attr(\"dx\", function(d){return -10})\n    //     .text(i * 2 + 1);\n\n  }\n  \n  d3.selectAll(routeIdsArray.toString()).attr({\n      \"stroke-width\": 2, \n      \"stroke-linejoin\": \"round\",\n      \"stroke\": \"blue\", \n      \"stroke-opacity\": 1, \n      \"stroke-linecap\": \"round\"\n    })\n    .attr(\"stroke-dasharray\", function(d, i) {\n      var totalLength = d3.select(this).node().getTotalLength();\n      return totalLength + \" \" + totalLength; \n    })\n    .attr(\"stroke-dashoffset\", function() { \n      var totalLength = d3.select(this).node().getTotalLength();\n      return totalLength; \n    })\n    .transition()\n    .delay(function(d, i) { return delays[i]; })\n    .duration(function(d, i) { \n      drawRing(startRingIdsArray[i], \"orange\");\n      drawRing(endRingIdsArray[i], \"blue\");\n      return d.properties.duration/speed; })\n    .ease(\"linear\")\n    .attr(\"stroke-dashoffset\", 0);\n};\n\nvar drawDocks = function (data) {\n  // var c = d3.scale.linear()\n  //   .domain([0, 27])\n  //   .range([0, 1]);\n\n  docks = svgAnimations.append(\"g\")\n    .classed(\"docks hide\", true)\n    .selectAll(\"g\")\n    .data(data.features)\n    .enter()\n    .append(\"g\")\n    .attr({\n      id: function (d) { return \"dock-\" + d.properties.id }, \n      class: \"dock\"\n    });\n\n  docks.append(\"circle\")\n    .attr({\n      cx: function (d) { return projection(d.geometry.coordinates)[0]; }, \n      cy: function (d) { return projection(d.geometry.coordinates)[1]; }, \n      r: \"3px\"\n    });\n    // .attr(\"fill\", function (d) {\n    //   return colorscale(c(d.properties.places))\n    // });\n\n  docks.append(\"rect\")\n    .attr({\n      class: \"gauge-bg\",\n      x: function (d) { return projection(d.geometry.coordinates)[0]; }, \n      y: function (d) { return projection(d.geometry.coordinates)[1]; }, \n      width: \"8px\", \n      transform: function (d) { return \"translate(\" + -4 + \",\" + -(d.properties.places + 6) + \")\"; }, \n      height: function (d) { return d.properties.places + 2 ; }\n    });\n\n  docks.append(\"rect\")\n    .attr({\n      class: \"gauge-qty\",\n      x: function (d) { return projection(d.geometry.coordinates)[0]; }, \n      y: function (d) { return projection(d.geometry.coordinates)[1]; }, \n      width: \"6px\", \n      transform: function (d) { return \"translate(\" + -3 + \",\" + -(d.properties.places + 5) + \")\"; }, \n      height: function (d) { return d.properties.places; }, \n      fill: \"orange\"\n    });\n\n  var rings = svgAnimations.append(\"g\")\n    .attr({class: \"rings\"})\n    .selectAll(\"circle\")\n    .data(data.features)\n    .enter()\n    .append(\"circle\")\n    .attr({\n      id: function (d) { return \"ring-\" + d.properties.id },\n      class: \"ring hide\", \n      fill: \"none\",\n      \"stroke-width\": \"1px\",\n      r: \"5px\",\n      cx: function (d) { return projection(d.geometry.coordinates)[0] }, \n      cy: function (d) { return projection(d.geometry.coordinates)[1] }\n    });\n\n  renderZoom();\n};\n\nvar setHandlePosition = function(t){\n  handle.attr(\"transform\", function (d) { return \"translate(\" + animscale(t) + \")\"; });\n};\n\nvar setTimer = function(t) {\n  realtime = t * day / animduration;\n  var realTimeFormatted = formatMilliseconds(realtime);\n  timerdisplay.html(realTimeFormatted);\n  // console.log(\"timer\", realTimeFormatted, timer);\n}\n\nvar brushstart = function() {\n  playmemo = play;\n  play = false;\n};\n\nvar brushing = function() {\n  if (d3.event.sourceEvent) { \n    timermemo = animscale.invert(d3.mouse(this)[0]);\n    setHandlePosition(timermemo);\n    renderFrame(0);\n  }\n};\n\nvar brushend = function() {\n  if(playmemo) {\n    play = true;\n    d3.timer(animate);\n  } else {\n    button.html(\"Play\");\n  }\n};\n\nvar animate = function (e) {\n  if (!play) {\n    timermemo = timer;\n    button.html(\"Play\");\n    return true;\n  }\n  button.html(\"Stop\");\n  renderFrame(e);\n};\n\nvar renderFrame = function(e) {\n  timer = (timermemo + e) % animduration;\n  setTimer(timer); \n  setHandlePosition(timer);\n\n  for (var i = 0; i < bikes[0].length; i++) {\n    d3.select(bikes[0][i])\n      .attr(\"transform\", function (d) { return moveBike(d, this); });\n  }\n  // console.log(\"docks[0]\", docks[0]);\n  for (var i = 0; i < docks[0].length; i++) {\n    // console.log(\"docks[0][i]\", d3.select(docks[0][i]).select(\".gauge-qty\"));\n    setDockLevel(docks[0][i]);\n  }\n};\n\nvar setDockLevel = function (dock) {\n  var currentQty = 0;\n  \n  d3.select(dock).select(\".gauge-qty\")\n    .attr({\n      transform: function (d) { \n        for (var i = 0; i < d.properties.activity.length; i++) {\n          var changeTime = timeToMilliSeconds(d.properties.activity[i].time);\n          if (changeTime < realtime) {\n            currentQty = d.properties.activity[i].bikes_available;\n          }\n        }\n        return \"translate(\" + -3 + \",\" + -(currentQty + 5) + \")\";\n      }, \n      height: function (d) { return currentQty; }\n    });\n  \n\n};\n\nvar moveBike = function(d, el) {\n  var startTime = timeToMilliSeconds(d.properties.startTime);\n  var endTime = timeToMilliSeconds(d.properties.endTime);\n  if (realtime - startTime > 0 && endTime - realtime > 0) {\n    if (d3.select(el).classed(\"hide\")) {\n      d3.select(el).classed(\"hide\", false);\n      if (play) {\n        animateRing(d.properties.startTerminal, \"red\");\n      }\n    }\n    var path = d3.select(\"#route-\" + d.properties.id).node();\n    var p = path.getPointAtLength(path.getTotalLength() * (realtime - startTime) / (endTime - startTime));\n    return \"translate(\" + [p.x, p.y] + \")\";\n  } else {\n    if (!d3.select(el).classed(\"hide\")) {\n      d3.select(el).classed(\"hide\", true);\n      if (play) {\n        animateRing(d.properties.endTerminal, \"green\");\n      }\n    }\n  } \n};\n\nvar renderZoom = function () {\n  var tiles = tile.scale(zoom.scale())\n    .translate(zoom.translate())();\n\n  projection.scale(zoom.scale() / 2 / Math.PI)\n    .translate(zoom.translate());\n  \n  var image = tilesLayer.style(prefix + \"transform\", matrix3d(tiles.scale, tiles.translate))\n    .selectAll(\".tile\")\n    .data(tiles, function (d) {\n      return d;\n    });\n\n  image.exit()\n    .each(function (d) {\n      this._xhr.abort();\n    })\n    .remove();\n\n  image.enter()\n    .append(\"svg\")\n    .attr(\"class\", \"tile\")\n    .style(\"left\", function (d) {\n      return d[0] * 256 + \"px\";\n    }).style(\"top\", function (d) {\n      return d[1] * 256 + \"px\";\n    }).each(function (d) {\n\n      var svgTile = d3.select(this);\n\n      this._xhr = d3.json(\"http://\" + [\"a\", \"b\", \"c\"][(d[0] * 31 + d[1]) % 3] + \".tile.openstreetmap.us/vectiles-highroad/\" + d[2] + \"/\" + d[0] + \"/\" + d[1] + \".json\", function (error, json) {\n        var k = Math.pow(2, d[2]) * 256; // size of the world in pixels\n        \n        tilePath.projection()\n          .translate([k / 2 - d[0] * 256, k / 2 - d[1] * 256]) // [0°,0°] in pixels\n          .scale(k / 2 / Math.PI);\n        \n        svgTile.selectAll(\"path\")\n          .data(json.features.sort(function (a, b) {\n            return a.properties.sort_key - b.properties.sort_key;\n          }))\n          .enter()\n          .append(\"path\")\n          .attr(\"class\", function (d) { return d.properties.kind; })\n          .attr(\"d\", tilePath);\n      });\n    });\n\n  svgAnimations.selectAll(\".dock circle\")\n    .attr({\n      cx: function (d) { return projection(d.geometry.coordinates)[0]; },\n      cy: function (d) { return projection(d.geometry.coordinates)[1]; }\n    });\n\n  svgAnimations.selectAll(\".gauge-qty\")\n    .attr({\n      x: function (d) { return projection(d.geometry.coordinates)[0]; }, \n      y: function (d) { return projection(d.geometry.coordinates)[1]; }\n    });\n\n  svgAnimations.selectAll(\".gauge-bg\")\n    .attr({\n      x: function (d) { return projection(d.geometry.coordinates)[0]; }, \n      y: function (d) { return projection(d.geometry.coordinates)[1]; }\n    });\n  \n  svgAnimations.selectAll(\".route\")\n    .attr(\"d\", path);\n\n  svgAnimations.selectAll(\".ring\")\n    .attr({\n      cx: function (d) { return projection(d.geometry.coordinates)[0]; }, \n      cy: function (d) { return projection(d.geometry.coordinates)[1]; }\n    });\n\n  svgAnimations.selectAll(\".bike\")\n    .attr({\n      \"transform\": function(d) { return moveBike(d, this); }\n    });\n};\n\nvar mousemoved = function () {\n  info.text(formatLocation(projection.invert(d3.mouse(this)), zoom.scale()));\n};\n\nvar matrix3d = function (scale, translate) {\n  var k = scale / 256,\n    r = scale % 1 ? Number : Math.round;\n  return \"matrix3d(\" + [k, 0, 0, 0, 0, k, 0, 0, 0, 0, k, 0, r(translate[0] * scale), r(translate[1] * scale), 0, 1] + \")\";\n};\n\nvar prefixMatch = function (p) {\n  var i = -1,\n    n = p.length,\n    s = document.body.style;\n  while (++i < n)\n    if (p[i] + \"Transform\" in s) return \"-\" + p[i].toLowerCase() + \"-\";\n  return \"\";\n};\n\nvar formatLocation = function (p, k) {\n  var format = d3.format(\".\" + Math.floor(Math.log(k) / 2 - 2) + \"f\");\n  return (p[1] < 0 ? format(-p[1]) + \"°S\" : format(p[1]) + \"°N\") + \" \" + (p[0] < 0 ? format(-p[0]) + \"°W\" : format(p[0]) + \"°E\");\n};\n\nvar loaded = function () {\n  button.attr(\"disabled\", null);\n  handle.classed(\"hide\", false);\n  svgAnimations.select(\".docks\").classed(\"hide\", false);\n  setHandlePosition(timermemo);\n  setTimer(timermemo); \n  brushend();\n};\n\nvar unload = function () {\n  console.log(\"unload\");\n  button.attr(\"disabled\", true);\n  svgAnimations.selectAll(\"g\").remove();\n  button.html(\"Loading…\");\n};\n\nfunction updateWindow(){\n  width = document.getElementById(\"map\").clientWidth;\n  height = Math.max(500, window.innerHeight);\n};\n\nupdateWindow();\n\nvar prefix = prefixMatch([\"webkit\", \"ms\", \"Moz\", \"O\"]);\n\nvar colorscale = d3.scale.linear()\n  .domain(d3.range(0, 1, 1.0 / (colors.length - 1)))\n  .range(colors);\n\nvar timescale = d3.time.scale()\n  .domain([new Date, new Date])\n  .nice(d3.time.day)\n  .range([0, width]);\n\nvar animscale = d3.scale.linear()\n  .domain([0, animduration])\n  .range([0, width]);\n\nvar brushAction = d3.svg.brush()\n  .x(animscale)\n  .extent([0, 0])\n  .on(\"brushstart\", brushstart)\n  .on(\"brush\", brushing)\n  .on(\"brushend\", brushend);\n\nvar axis = d3.svg.axis()\n  .scale(timescale)\n  .ticks(24)\n  .tickFormat(d3.time.format(\"%H\"))\n  .orient(\"top\");\n\nvar tile = d3.geo.tile()\n  .size([width, height]);\n\nvar projection = d3.geo.mercator()\n  .scale((1 << 22) / 2 / Math.PI)\n  .translate([-width / 2, -height / 2]);\n\nvar path = d3.geo.path()\n  .projection(projection);\n\nvar tilePath = d3.geo.path()\n  .projection(projection);\n\nvar zoom = d3.behavior.zoom()\n  .scale(projection.scale() * 2 * Math.PI).scaleExtent([1 << 20, 1 << 23])\n  .translate(projection([-122.4, 37.785])\n  .map(function (x) {\n    console.log('zoom', x);\n    return -x;\n  }))\n  .on(\"zoom\", renderZoom);\n\nvar map = d3.select(\"#map\")\n  .call(zoom)\n  .on(\"mousemove\", mousemoved);\n\nvar routesinfo = d3.select(\"#routes-info\");\n\nvar tilesLayer = map.append(\"div\")\n  .attr(\"id\", \"tileslayer\");\n\nvar svgAnimations = map.append(\"svg:svg\")\n  .attr(\"id\", 'animations')\n  .style(\"width\", width + \"px\")\n  .style(\"height\", height - 50 + \"px\")\n  .call(zoom);\n\nvar routesInfolines = svgAnimations.append(\"g\")\n  .attr(\"id\", 'routes-info-lines')\n\nvar routesStepNumber = svgAnimations.append(\"g\")\n  .attr(\"id\", 'routes-step-number')\n\nvar info = map.append(\"div\")\n  .attr(\"class\", \"info\");\n\nvar timelineSvg = d3.select(\"#timeline\")\n  .append(\"svg\")\n  .attr(\"width\", width);\n\nvar slider = timelineSvg.append(\"g\")\n  .attr(\"transform\", \"translate(0,20)\")\n  .call(axis)\n  .call(brushAction);\n\nvar handle = slider.append(\"polygon\")\n  .attr(\"points\", \"-15,20 0,0 15,20\")\n  .attr(\"id\", \"handle\")\n  .classed(\"hide\", true);\n\nvar button = d3.select(\"#playbutton\")\n  .attr('disabled', true);\n\nvar tooltip = d3.select(\".map-tooltip\");\n\nvar timerdisplay = d3.select(\"#time\");\n\nprojection.scale(zoom.scale() / 2 / Math.PI)\n  .translate(zoom.translate());\n\n\nbutton.on(\"click\", function () {\n  play = !play;\n  if (play) {\n    d3.timer(animate);\n  } \n});\n\nwindow.onresize = updateWindow;\n\n// speed slider\n\n// var speedMax = \"1\";\n// var speedMin = \"20\";\n// var speedDef = \"10\";\n\n// var speedSliderDisplay = d3.select(\"#speed\");\n\n// var speedScale = d3.scale()\n//   .domain\n\n\n// calendar\n\nvar dateDisplay = d3.select(\"#date\");\n\nvar calendarTimeScale = d3.time.scale()\n  .domain([new Date(dateMinValue), new Date(dateMaxValue)])\n  .range([0, width])\n  .clamp(true);\n\nvar calendarAxis = d3.svg.axis()\n  .scale(calendarTimeScale)\n  .tickFormat(d3.time.format(\"%B\"))\n  .orient(\"top\");\n\nvar calendarBrushAction = d3.svg.brush()\n  .x(calendarTimeScale)\n  .extent([new Date(dateStartValue), new Date(dateStartValue)])\n  .on(\"brushstart\", brushstart)\n  .on(\"brush\", calendarBrushing);\n\nvar calendarSvg = d3.select(\"#calendar\")\n  .append(\"svg\")\n  .attr(\"width\", width);\n\nvar calendarSlider = calendarSvg.append(\"g\")\n  .attr(\"transform\", \"translate(0,20)\")\n  .attr(\"class\", \"calendar-axis\")\n  .call(calendarAxis); \n\ncalendarSlider.selectAll(\".calendar-axis .tick text\")\n  .attr(\"x\", 5)\n  .attr(\"dy\", null)\n  .style(\"text-anchor\", \"start\");\n\ncalendarSlider.selectAll(\".calendar-axis .tick line\")\n    .attr(\"y2\", \"-18\");\n\ncalendarSlider.call(calendarBrushAction);\n\nvar calendarHandle = calendarSlider.append(\"polygon\")\n  .attr(\"points\", \"-15,20 0,0 15,20\")\n  .attr(\"id\", \"calendarhandle\");\n\ndateDisplay.html(new Date(dateStartValue));\n\ncalendarSlider\n  .call(calendarBrushAction.event)\n\nfunction calendarBrushing() {\n  var start_date = calendarBrushAction.extent()[0];\n  unload();\n  if (d3.event.sourceEvent) { // not a programmatic event\n    start_date = calendarTimeScale.invert(d3.mouse(this)[0]);\n    calendarBrushAction.extent([start_date, start_date]);\n    \n    if (d3.event.sourceEvent.type === 'mouseup') {\n      console.log(\"mouseup\");\n      var end_date = calendarTimeScale.invert(d3.mouse(this)[0] + 1);\n      fetchNewDate(start_date, end_date);\n      \n    }\n  }\n\n  calendarHandle.attr(\"transform\", \"translate(\" + calendarTimeScale(start_date) + \",0)\");\n  // calendarHandle.select('text').text(dateFormat(start_date));\n  dateDisplay.html(dateFormat(start_date));\n}\n\nfetchNewDate();\n\n}\n\nmodule.exports = map;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/map.js\n ** module id = 227\n ** module chunks = 0\n **/","module.exports = function() {\n  d3.geo.tile = function() {\n    var size = [960, 500],\n        scale = 256,\n        translate = [size[0] / 2, size[1] / 2],\n        zoomDelta = 0;\n\n    function tile() {\n      var z = Math.max(Math.log(scale) / Math.LN2 - 8, 0),\n          z0 = Math.round(z + zoomDelta),\n          k = Math.pow(2, z - z0 + 8),\n          origin = [(translate[0] - scale / 2) / k, (translate[1] - scale / 2) / k],\n          tiles = [],\n          cols = d3.range(Math.max(0, Math.floor(-origin[0])), Math.max(0, Math.ceil(size[0] / k - origin[0]))),\n          rows = d3.range(Math.max(0, Math.floor(-origin[1])), Math.max(0, Math.ceil(size[1] / k - origin[1])));\n\n      rows.forEach(function(y) {\n        cols.forEach(function(x) {\n          tiles.push([x, y, z0]);\n        });\n      });\n\n      tiles.translate = origin;\n      tiles.scale = k;\n\n      return tiles;\n    }\n\n    tile.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return tile;\n    };\n\n    tile.scale = function(_) {\n      if (!arguments.length) return scale;\n      scale = _;\n      return tile;\n    };\n\n    tile.translate = function(_) {\n      if (!arguments.length) return translate;\n      translate = _;\n      return tile;\n    };\n\n    tile.zoomDelta = function(_) {\n      if (!arguments.length) return zoomDelta;\n      zoomDelta = +_;\n      return tile;\n    };\n\n    return tile;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3.geo.tile/index.js\n ** module id = 228\n ** module chunks = 0\n **/","var bikeRoutes = require('../json/bikeRoutesJson');\nvar Docks = require('../json/docksPositionJson')\nmodule.exports = {\n\ncalcDockHash: function(){\n  var tripHash = {};\n  var mins = 0;\n  var hours = 0;\n  \n  for (var i = 0; i < 1440; i++){\n      var time = this.countTime(hours, mins);\n      hours = time[0];\n      mins = time[1];\n      time = time.join(\":\");\n      tripHash[time] = {\"starting_trips\": [], \"ending_trips\": []};\n  };\n\n  return tripHash;\n},\n\n\n\ncountTime: function(hours, mins){\n  var countHours, countMins;\n  mins++\n  if (mins === 60) {\n    hours++;\n    mins = 0;\n    if (hours === 24){\n      hours = 0;\n    }\n  }\n\n  countHours = hours;\n\n  if (mins < 10) {\n    countMins = \"0\" + mins;\n  }\n  else {\n    countMins = \"\"+ mins;\n  }\n  return [countHours, countMins];\n},\n\nbuildDocksHash: function (tripJson, dockInit) {\n  var hits = tripJson.hits.total;\n  var dockHash = this.calcDockHash();\n  var docks = new Docks();\n\n  for (var i = 0; i < hits; i++) {\n    var trip = tripJson.hits.hits[i][\"_source\"];\n    var startTime = trip.start_date.split(\" \")[1];\n    var endTime = trip.end_date.split(\" \")[1];\n    \n    dockHash[startTime].starting_trips.push(trip.start_terminal);\n    \n    if (trip.start_date.split(\" \")[0] === trip.end_date.split(\" \")[0]){\n      dockHash[endTime].ending_trips.push(trip.end_terminal);\n    }\n  };\n  console.log(dockHash);\n\n  for (var k = 0; k < docks.docksJson.features.length; k++) {\n    if (dockInit[k]){\n      docks.docksJson.features[k].properties.activity.push({\n        \"time\": \"0:00\",\n        \"bikes_available\": parseInt(dockInit[k].bikes_available)\n      });\n    }\n    else {\n      docks.docksJson.features[k].properties.activity.push({\n        \"time\": \"0:00\",\n        \"bikes_available\": parseInt(docks.docksJson.features[k].properties.places)\n      });\n    }\n  };\n\n  for (var key in dockHash) {\n    if (dockHash[key].starting_trips.length) {\n      for (var l = 0; l < dockHash[key].starting_trips.length; l++) {\n        for (var m = 0; m < docks.docksJson.features.length; m++) {\n          if (parseInt(dockHash[key].starting_trips[l]) === docks.docksJson.features[m].properties.id) {\n            var bikes = parseInt(docks.docksJson.features[m].properties.activity[docks.docksJson.features[m].properties.activity.length - 1].bikes_available);\n            bikes = bikes - 1 > 0 ? bikes - 1 : 0\n            docks.docksJson.features[m].properties.activity.push({\n              \"time\": key,\n              \"bikes_available\": bikes\n            })\n          }\n        }\n      }\n    }\n    if (dockHash[key].ending_trips.length) {\n      for (var l = 0; l < dockHash[key].ending_trips.length; l++) {\n        for (var m = 0; m < docks.docksJson.features.length; m++) {\n          if (parseInt(dockHash[key].ending_trips[l]) === docks.docksJson.features[m].properties.id) {\n            docks.docksJson.features[m].properties.activity.push({\n              \"time\": key,\n              \"bikes_available\": parseInt(docks.docksJson.features[m].properties.activity[docks.docksJson.features[m].properties.activity.length - 1].bikes_available) + 1\n            })\n          }\n        }\n      }\n    }\n  };\n  return docks.docksJson;\n},\n\nbuildBikesJson: function (json) {\n  var hits = json.hits.total;\n  var bikesJson = {\n    \"type\": \"FeatureCollection\",\n    \"features\": []\n  };\n  for (var i = 0; i < hits; i++) {\n    var trip = json.hits.hits[i][\"_source\"];  \n    var duration = trip[\"trip_duration\"];\n    var startTerminal = trip[\"start_terminal\"];\n    var startStation = trip[\"start_station\"];\n    var endTerminal = trip[\"end_terminal\"];\n    var endStation = trip[\"end_station\"];\n    var bikeID = trip[\"bike_id\"];\n    var tempStart = trip[\"start_date\"].split(\" \");\n    var tempEnd = trip[\"end_date\"].split(\" \");\n    var startDate = tempStart[0];\n    var startTime = tempStart[1];\n    var endDate = tempEnd[0];\n    var endTime = tempEnd[1];\n    var bikeJson = this.buildBikeJson(duration, startTerminal, startDate, startTime, endTerminal, endDate, endTime, bikeID, i, startStation, endStation);\n    if (bikeJson) {\n      bikesJson.features.push(bikeJson);\n    }\n  };\n  return bikesJson;\n},\nbuildBikeJson: function (duration, startTerminal, startDate, startTime, endTerminal, endDate, endTime, bikeID, tripID, startStation, endStation) {\n  var coordinates = bikeRoutes[startTerminal + \"-\" + endTerminal];\n  var geoJson = null;\n  if (!coordinates) {\n    if (duration <= 240) {\n      var coordinates = bikeRoutes[startTerminal + \"-\" + endTerminal + \"s\"];\n    } else if (duration > 240 && duration <= 600) {\n      var coordinates = bikeRoutes[startTerminal + \"-\" + endTerminal + \"m\"];\n    } else if (duration > 600) {\n      var coordinates = bikeRoutes[startTerminal + \"-\" + endTerminal + \"l\"];\n    }\n  }\n  if (coordinates) {\n    geoJson = {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"duration\": duration,\n        \"id\": tripID,\n        \"bikeID\": bikeID,\n        \"startDate\": startDate,\n        \"startTime\": startTime,\n        \"endDate\": endDate,\n        \"endTime\": endTime,\n        \"startTerminal\": startTerminal,\n        \"endTerminal\": endTerminal, \n        \"startStation\": startStation, \n        \"endStation\": endStation\n      },\n      \"geometry\": {\n        \"type\": \"LineString\",\n        \"coordinates\": coordinates.geometry.coordinates\n      }\n    };\n  } else console.log('coords not found', startTerminal, \" and \", endTerminal)\n  return geoJson;\n}\n\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/buildgeojson.js\n ** module id = 229\n ** module chunks = 0\n **/","var bikeRoutes = {\n  \"41-42\": {\n    \"distance\": 0.6203002822520967,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.396834, 37.795467],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"41-49\": {\n    \"distance\": 1.2916391726432206,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397611, 37.79352],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394077, 37.792542],\n        [-122.393228, 37.791868],\n        [-122.393119, 37.791781],\n        [-122.392525, 37.79131],\n        [-122.391972, 37.79087],\n        [-122.390979, 37.790082],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"41-47\": {\n    \"distance\": 1.3666266037514234,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"41-48\": {\n    \"distance\": 1.246979222990658,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.396834, 37.795467],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399144, 37.800912],\n        [-122.399253, 37.80084],\n        [-122.39918, 37.800768],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"41-45\": {\n    \"distance\": 0.7785930868720814,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.398966, 37.794278],\n        [-122.400141, 37.794129],\n        [-122.401311, 37.793981],\n        [-122.4022, 37.793868],\n        [-122.402282, 37.794314],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"41-50\": {\n    \"distance\": 0.9854321434623146,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.396834, 37.795467],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393362, 37.794385],\n        [-122.393258, 37.794377],\n        [-122.393198, 37.794411],\n        [-122.393177, 37.794466],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"41-51\": {\n    \"distance\": 1.2182376142262261,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.396834, 37.795467],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"41-53\": {\n    \"distance\": 1.8619717104242912,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"41-55\": {\n    \"distance\": 0.9309198499879924,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"41-54\": {\n    \"distance\": 1.7736260018259786,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397611, 37.79352],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394077, 37.792542],\n        [-122.393228, 37.791868],\n        [-122.393119, 37.791781],\n        [-122.392525, 37.79131],\n        [-122.391972, 37.79087],\n        [-122.390979, 37.790082],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"41-57\": {\n    \"distance\": 2.2659063340269467,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"41-56\": {\n    \"distance\": 0.5379716776471141,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"41-58\": {\n    \"distance\": 3.1221004475521896,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"41-59\": {\n    \"distance\": 3.0744097337418714,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.41597, 37.780627],\n        [-122.416859, 37.780507],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"41-60\": {\n    \"distance\": 1.7569747825965911,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.396834, 37.795467],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399165, 37.801123],\n        [-122.399792, 37.801819],\n        [-122.400448, 37.802547],\n        [-122.400903, 37.803058],\n        [-122.401236, 37.80342],\n        [-122.401794, 37.804076],\n        [-122.401904, 37.804165],\n        [-122.40207, 37.804321],\n        [-122.402155, 37.804399],\n        [-122.402206, 37.804441],\n        [-122.402723, 37.804821],\n        [-122.403174, 37.80514],\n        [-122.403268, 37.805142],\n        [-122.403356, 37.805116],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"41-61\": {\n    \"distance\": 2.6172538493666058,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400543, 37.79026],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"41-62\": {\n    \"distance\": 1.872175943268067,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400543, 37.79026],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"41-63\": {\n    \"distance\": 1.3652948524996538,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"41-64\": {\n    \"distance\": 2.3289993489068013,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400543, 37.79026],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"41-65\": {\n    \"distance\": 4.215691735799119,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.401932, 37.782633],\n        [-122.401703, 37.782447],\n        [-122.401175, 37.782025],\n        [-122.400621, 37.781581],\n        [-122.400376, 37.781387],\n        [-122.400158, 37.781211],\n        [-122.399635, 37.780791],\n        [-122.399619, 37.780658],\n        [-122.39963, 37.78056],\n        [-122.399649, 37.780466],\n        [-122.39968, 37.780359],\n        [-122.399726, 37.780249],\n        [-122.399786, 37.78014],\n        [-122.399869, 37.780029],\n        [-122.399974, 37.779903],\n        [-122.400086, 37.779781],\n        [-122.400219, 37.779645],\n        [-122.400369, 37.7795],\n        [-122.400526, 37.779359],\n        [-122.400991, 37.77897],\n        [-122.401106, 37.778873],\n        [-122.40129, 37.778716],\n        [-122.401954, 37.778094],\n        [-122.402207, 37.777903],\n        [-122.402476, 37.777712],\n        [-122.402737, 37.777532],\n        [-122.402994, 37.777365],\n        [-122.403258, 37.777202],\n        [-122.405095, 37.776113],\n        [-122.405315, 37.776008],\n        [-122.405467, 37.775927],\n        [-122.405602, 37.775839],\n        [-122.405758, 37.775723],\n        [-122.405907, 37.775601],\n        [-122.406057, 37.775469],\n        [-122.406219, 37.775314],\n        [-122.406378, 37.775151],\n        [-122.406518, 37.774999],\n        [-122.406654, 37.774836],\n        [-122.406787, 37.774665],\n        [-122.407086, 37.774261],\n        [-122.407156, 37.774174],\n        [-122.407231, 37.774093],\n        [-122.407311, 37.774021],\n        [-122.407407, 37.773944],\n        [-122.407502, 37.773872],\n        [-122.407736, 37.77371],\n        [-122.407792, 37.77365],\n        [-122.407832, 37.773582],\n        [-122.407859, 37.773513],\n        [-122.407872, 37.773448],\n        [-122.407866, 37.773373],\n        [-122.407848, 37.773298],\n        [-122.407773, 37.773152],\n        [-122.407267, 37.77272],\n        [-122.407044, 37.772488],\n        [-122.406939, 37.772376],\n        [-122.406797, 37.772255],\n        [-122.406473, 37.771951],\n        [-122.405964, 37.771631],\n        [-122.405569, 37.77135],\n        [-122.405451, 37.771303],\n        [-122.405357, 37.771232],\n        [-122.404957, 37.770906],\n        [-122.404749, 37.770735],\n        [-122.404014, 37.770133],\n        [-122.403939, 37.770055],\n        [-122.404048, 37.770007],\n        [-122.404085, 37.769951],\n        [-122.404078, 37.769861],\n        [-122.404031, 37.769808],\n        [-122.40396, 37.769777],\n        [-122.403881, 37.769773],\n        [-122.403774, 37.76982],\n        [-122.403733, 37.769886],\n        [-122.403758, 37.769991],\n        [-122.403857, 37.77005],\n        [-122.403807, 37.770119],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"41-66\": {\n    \"distance\": 3.834416817393993,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416945, 37.777652],\n        [-122.417475, 37.777584],\n        [-122.417586, 37.777568],\n        [-122.418049, 37.777505],\n        [-122.417916, 37.776859],\n        [-122.417889, 37.776816],\n        [-122.417839, 37.77677],\n        [-122.417784, 37.776729],\n        [-122.417677, 37.776665],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.416447, 37.775699],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"41-67\": {\n    \"distance\": 2.9882153646235565,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"41-68\": {\n    \"distance\": 1.788816561641902,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400543, 37.79026],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.399975, 37.787011],\n        [-122.399502, 37.786634],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"41-69\": {\n    \"distance\": 3.349225650643202,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"41-70\": {\n    \"distance\": 3.24586947048121,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400543, 37.79026],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"41-71\": {\n    \"distance\": 1.7851723872587155,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"41-72\": {\n    \"distance\": 2.4168984739720645,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"41-73\": {\n    \"distance\": 1.4587248007921954,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.396834, 37.795467],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.398168, 37.796167],\n        [-122.398587, 37.796104],\n        [-122.400492, 37.795867],\n        [-122.40111, 37.795793],\n        [-122.401674, 37.795719],\n        [-122.40238, 37.795641],\n        [-122.402741, 37.795597],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.404507, 37.796369],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"41-74\": {\n    \"distance\": 0.777680820885413,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397611, 37.79352],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"41-75\": {\n    \"distance\": 0.6945275857998316,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"41-76\": {\n    \"distance\": 1.4565588164068568,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"41-77\": {\n    \"distance\": 0.9360271456972942,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"41-82\": {\n    \"distance\": 0.994632128373909,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.396834, 37.795467],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"42-45\": {\n    \"distance\": 0.930149525554598,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.398168, 37.796167],\n        [-122.398587, 37.796104],\n        [-122.400492, 37.795867],\n        [-122.40111, 37.795793],\n        [-122.401674, 37.795719],\n        [-122.401582, 37.795306],\n        [-122.401491, 37.794864],\n        [-122.401404, 37.794427],\n        [-122.402282, 37.794314],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"42-47\": {\n    \"distance\": 1.567830145614489,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"42-48\": {\n    \"distance\": 0.6676520683522738,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398615, 37.798906],\n        [-122.398334, 37.798957],\n        [-122.398222, 37.798989],\n        [-122.398097, 37.799039],\n        [-122.398026, 37.799069],\n        [-122.397961, 37.799103],\n        [-122.397882, 37.799145],\n        [-122.397792, 37.799184],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399144, 37.800912],\n        [-122.399253, 37.80084],\n        [-122.39918, 37.800768],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"42-49\": {\n    \"distance\": 1.3419059695033848,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394077, 37.792542],\n        [-122.393228, 37.791868],\n        [-122.393119, 37.791781],\n        [-122.392525, 37.79131],\n        [-122.391972, 37.79087],\n        [-122.390979, 37.790082],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"42-50\": {\n    \"distance\": 0.8459474385061303,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393362, 37.794385],\n        [-122.393258, 37.794377],\n        [-122.393198, 37.794411],\n        [-122.393177, 37.794466],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"42-51\": {\n    \"distance\": 1.0787529092700419,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"42-53\": {\n    \"distance\": 2.063175252287356,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"42-54\": {\n    \"distance\": 1.6508408171970623,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390907, 37.791534],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"42-55\": {\n    \"distance\": 1.183110559286576,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.396649, 37.794578],\n        [-122.396732, 37.794568],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793494],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"42-56\": {\n    \"distance\": 0.7901623869456977,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.396649, 37.794578],\n        [-122.396732, 37.794568],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793494],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"42-57\": {\n    \"distance\": 2.4671098758900123,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"42-58\": {\n    \"distance\": 3.3233039894152547,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"42-59\": {\n    \"distance\": 3.2756132756049365,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.41597, 37.780627],\n        [-122.416859, 37.780507],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"42-60\": {\n    \"distance\": 1.1776476279582067,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398615, 37.798906],\n        [-122.398334, 37.798957],\n        [-122.398222, 37.798989],\n        [-122.398097, 37.799039],\n        [-122.398026, 37.799069],\n        [-122.397961, 37.799103],\n        [-122.397882, 37.799145],\n        [-122.397792, 37.799184],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399165, 37.801123],\n        [-122.399792, 37.801819],\n        [-122.400448, 37.802547],\n        [-122.400903, 37.803058],\n        [-122.401236, 37.80342],\n        [-122.401794, 37.804076],\n        [-122.401904, 37.804165],\n        [-122.40207, 37.804321],\n        [-122.402155, 37.804399],\n        [-122.402206, 37.804441],\n        [-122.402723, 37.804821],\n        [-122.403174, 37.80514],\n        [-122.403268, 37.805142],\n        [-122.403356, 37.805116],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"42-61\": {\n    \"distance\": 2.8184573912296713,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400543, 37.79026],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"42-62\": {\n    \"distance\": 2.0733794851311327,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400543, 37.79026],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"42-65\": {\n    \"distance\": 4.416895277662184,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.401932, 37.782633],\n        [-122.401703, 37.782447],\n        [-122.401175, 37.782025],\n        [-122.400621, 37.781581],\n        [-122.400376, 37.781387],\n        [-122.400158, 37.781211],\n        [-122.399635, 37.780791],\n        [-122.399619, 37.780658],\n        [-122.39963, 37.78056],\n        [-122.399649, 37.780466],\n        [-122.39968, 37.780359],\n        [-122.399726, 37.780249],\n        [-122.399786, 37.78014],\n        [-122.399869, 37.780029],\n        [-122.399974, 37.779903],\n        [-122.400086, 37.779781],\n        [-122.400219, 37.779645],\n        [-122.400369, 37.7795],\n        [-122.400526, 37.779359],\n        [-122.400991, 37.77897],\n        [-122.401106, 37.778873],\n        [-122.40129, 37.778716],\n        [-122.401954, 37.778094],\n        [-122.402207, 37.777903],\n        [-122.402476, 37.777712],\n        [-122.402737, 37.777532],\n        [-122.402994, 37.777365],\n        [-122.403258, 37.777202],\n        [-122.405095, 37.776113],\n        [-122.405315, 37.776008],\n        [-122.405467, 37.775927],\n        [-122.405602, 37.775839],\n        [-122.405758, 37.775723],\n        [-122.405907, 37.775601],\n        [-122.406057, 37.775469],\n        [-122.406219, 37.775314],\n        [-122.406378, 37.775151],\n        [-122.406518, 37.774999],\n        [-122.406654, 37.774836],\n        [-122.406787, 37.774665],\n        [-122.407086, 37.774261],\n        [-122.407156, 37.774174],\n        [-122.407231, 37.774093],\n        [-122.407311, 37.774021],\n        [-122.407407, 37.773944],\n        [-122.407502, 37.773872],\n        [-122.407736, 37.77371],\n        [-122.407792, 37.77365],\n        [-122.407832, 37.773582],\n        [-122.407859, 37.773513],\n        [-122.407872, 37.773448],\n        [-122.407866, 37.773373],\n        [-122.407848, 37.773298],\n        [-122.407773, 37.773152],\n        [-122.407267, 37.77272],\n        [-122.407044, 37.772488],\n        [-122.406939, 37.772376],\n        [-122.406797, 37.772255],\n        [-122.406473, 37.771951],\n        [-122.405964, 37.771631],\n        [-122.405569, 37.77135],\n        [-122.405451, 37.771303],\n        [-122.405357, 37.771232],\n        [-122.404957, 37.770906],\n        [-122.404749, 37.770735],\n        [-122.404014, 37.770133],\n        [-122.403939, 37.770055],\n        [-122.404048, 37.770007],\n        [-122.404085, 37.769951],\n        [-122.404078, 37.769861],\n        [-122.404031, 37.769808],\n        [-122.40396, 37.769777],\n        [-122.403881, 37.769773],\n        [-122.403774, 37.76982],\n        [-122.403733, 37.769886],\n        [-122.403758, 37.769991],\n        [-122.403857, 37.77005],\n        [-122.403807, 37.770119],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"42-63\": {\n    \"distance\": 1.7153058730662896,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.397552, 37.792541],\n        [-122.398588, 37.792408],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"42-64\": {\n    \"distance\": 2.530202890769867,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400543, 37.79026],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"42-66\": {\n    \"distance\": 4.035620359257058,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416945, 37.777652],\n        [-122.417475, 37.777584],\n        [-122.417586, 37.777568],\n        [-122.418049, 37.777505],\n        [-122.417916, 37.776859],\n        [-122.417889, 37.776816],\n        [-122.417839, 37.77677],\n        [-122.417784, 37.776729],\n        [-122.417677, 37.776665],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.416447, 37.775699],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"42-67\": {\n    \"distance\": 3.1894189064866216,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"42-68\": {\n    \"distance\": 1.9900201035049676,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400543, 37.79026],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.399975, 37.787011],\n        [-122.399502, 37.786634],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"42-69\": {\n    \"distance\": 3.5504291925062677,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"42-71\": {\n    \"distance\": 1.986375929121781,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"42-70\": {\n    \"distance\": 3.4470730123442754,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400543, 37.79026],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"42-72\": {\n    \"distance\": 2.6181020158351296,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"42-73\": {\n    \"distance\": 0.9873433238076929,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.406256, 37.79792],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"42-74\": {\n    \"distance\": 0.8279476177455769,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"42-75\": {\n    \"distance\": 0.8957311276628975,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"42-76\": {\n    \"distance\": 1.6577623582699224,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"42-77\": {\n    \"distance\": 1.13723068756036,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"42-82\": {\n    \"distance\": 0.3743336480929386,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"45-47\": {\n    \"distance\": 0.9122632606979216,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"45-48\": {\n    \"distance\": 1.633127320078912,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.404012, 37.79364],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.399891, 37.798833],\n        [-122.400061, 37.799678],\n        [-122.400249, 37.800617],\n        [-122.39954, 37.800707],\n        [-122.399475, 37.800725],\n        [-122.399427, 37.800744],\n        [-122.399337, 37.800794],\n        [-122.399253, 37.80084],\n        [-122.39918, 37.800768],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"45-49\": {\n    \"distance\": 1.534254066284642,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.401958, 37.792954],\n        [-122.401128, 37.793073],\n        [-122.399959, 37.793209],\n        [-122.398903, 37.79335],\n        [-122.398783, 37.793366],\n        [-122.398706, 37.793376],\n        [-122.397611, 37.79352],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394077, 37.792542],\n        [-122.393228, 37.791868],\n        [-122.393119, 37.791781],\n        [-122.392525, 37.79131],\n        [-122.391972, 37.79087],\n        [-122.390979, 37.790082],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"45-50\": {\n    \"distance\": 1.723260401748784,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.404012, 37.79364],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401337, 37.794864],\n        [-122.400335, 37.795029],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.396834, 37.795467],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393362, 37.794385],\n        [-122.393258, 37.794377],\n        [-122.393198, 37.794411],\n        [-122.393177, 37.794466],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"45-51\": {\n    \"distance\": 1.5361987445808896,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.401958, 37.792954],\n        [-122.401128, 37.793073],\n        [-122.399959, 37.793209],\n        [-122.398903, 37.79335],\n        [-122.398783, 37.793366],\n        [-122.398706, 37.793376],\n        [-122.397611, 37.79352],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"45-53\": {\n    \"distance\": 1.4076083673707893,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"45-54\": {\n    \"distance\": 2.0162408954674,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.401958, 37.792954],\n        [-122.401128, 37.793073],\n        [-122.399959, 37.793209],\n        [-122.398903, 37.79335],\n        [-122.398783, 37.793366],\n        [-122.398706, 37.793376],\n        [-122.397611, 37.79352],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394077, 37.792542],\n        [-122.393228, 37.791868],\n        [-122.393119, 37.791781],\n        [-122.392525, 37.79131],\n        [-122.391972, 37.79087],\n        [-122.390979, 37.790082],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"45-55\": {\n    \"distance\": 1.173534369486135,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.401958, 37.792954],\n        [-122.401128, 37.793073],\n        [-122.399959, 37.793209],\n        [-122.398903, 37.79335],\n        [-122.398783, 37.793366],\n        [-122.398706, 37.793376],\n        [-122.397611, 37.79352],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"45-56\": {\n    \"distance\": 0.7805861971452568,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.401958, 37.792954],\n        [-122.401128, 37.793073],\n        [-122.399959, 37.793209],\n        [-122.398903, 37.79335],\n        [-122.398783, 37.793366],\n        [-122.398706, 37.793376],\n        [-122.397611, 37.79352],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"45-57\": {\n    \"distance\": 1.8115429909734446,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"45-58\": {\n    \"distance\": 2.6677371044986877,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"45-59\": {\n    \"distance\": 2.6200463906883686,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.41597, 37.780627],\n        [-122.416859, 37.780507],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"45-60\": {\n    \"distance\": 1.8019724998090139,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.404012, 37.79364],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.402419, 37.799377],\n        [-122.40261, 37.800315],\n        [-122.402804, 37.801267],\n        [-122.402891, 37.801696],\n        [-122.402989, 37.802174],\n        [-122.403156, 37.803014],\n        [-122.403174, 37.803104],\n        [-122.403189, 37.803176],\n        [-122.403345, 37.803964],\n        [-122.403358, 37.804032],\n        [-122.403376, 37.804122],\n        [-122.403525, 37.804897],\n        [-122.403542, 37.804989],\n        [-122.403561, 37.805122],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"45-61\": {\n    \"distance\": 2.074865466512417,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"45-62\": {\n    \"distance\": 1.3297875604138782,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"45-63\": {\n    \"distance\": 1.3191081610526474,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.402005, 37.791016],\n        [-122.40113, 37.791128],\n        [-122.400744, 37.791177],\n        [-122.399707, 37.791309],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"45-64\": {\n    \"distance\": 1.786610966052613,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"45-65\": {\n    \"distance\": 3.7613283927456167,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.401932, 37.782633],\n        [-122.401703, 37.782447],\n        [-122.401175, 37.782025],\n        [-122.400621, 37.781581],\n        [-122.400376, 37.781387],\n        [-122.400158, 37.781211],\n        [-122.399635, 37.780791],\n        [-122.399619, 37.780658],\n        [-122.39963, 37.78056],\n        [-122.399649, 37.780466],\n        [-122.39968, 37.780359],\n        [-122.399726, 37.780249],\n        [-122.399786, 37.78014],\n        [-122.399869, 37.780029],\n        [-122.399974, 37.779903],\n        [-122.400086, 37.779781],\n        [-122.400219, 37.779645],\n        [-122.400369, 37.7795],\n        [-122.400526, 37.779359],\n        [-122.400991, 37.77897],\n        [-122.401106, 37.778873],\n        [-122.40129, 37.778716],\n        [-122.401954, 37.778094],\n        [-122.402207, 37.777903],\n        [-122.402476, 37.777712],\n        [-122.402737, 37.777532],\n        [-122.402994, 37.777365],\n        [-122.403258, 37.777202],\n        [-122.405095, 37.776113],\n        [-122.405315, 37.776008],\n        [-122.405467, 37.775927],\n        [-122.405602, 37.775839],\n        [-122.405758, 37.775723],\n        [-122.405907, 37.775601],\n        [-122.406057, 37.775469],\n        [-122.406219, 37.775314],\n        [-122.406378, 37.775151],\n        [-122.406518, 37.774999],\n        [-122.406654, 37.774836],\n        [-122.406787, 37.774665],\n        [-122.407086, 37.774261],\n        [-122.407156, 37.774174],\n        [-122.407231, 37.774093],\n        [-122.407311, 37.774021],\n        [-122.407407, 37.773944],\n        [-122.407502, 37.773872],\n        [-122.407736, 37.77371],\n        [-122.407792, 37.77365],\n        [-122.407832, 37.773582],\n        [-122.407859, 37.773513],\n        [-122.407872, 37.773448],\n        [-122.407866, 37.773373],\n        [-122.407848, 37.773298],\n        [-122.407773, 37.773152],\n        [-122.407267, 37.77272],\n        [-122.407044, 37.772488],\n        [-122.406939, 37.772376],\n        [-122.406797, 37.772255],\n        [-122.406473, 37.771951],\n        [-122.405964, 37.771631],\n        [-122.405569, 37.77135],\n        [-122.405451, 37.771303],\n        [-122.405357, 37.771232],\n        [-122.404957, 37.770906],\n        [-122.404749, 37.770735],\n        [-122.404014, 37.770133],\n        [-122.403939, 37.770055],\n        [-122.404048, 37.770007],\n        [-122.404085, 37.769951],\n        [-122.404078, 37.769861],\n        [-122.404031, 37.769808],\n        [-122.40396, 37.769777],\n        [-122.403881, 37.769773],\n        [-122.403774, 37.76982],\n        [-122.403733, 37.769886],\n        [-122.403758, 37.769991],\n        [-122.403857, 37.77005],\n        [-122.403807, 37.770119],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"45-66\": {\n    \"distance\": 3.380053474340491,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416945, 37.777652],\n        [-122.417475, 37.777584],\n        [-122.417586, 37.777568],\n        [-122.418049, 37.777505],\n        [-122.417916, 37.776859],\n        [-122.417889, 37.776816],\n        [-122.417839, 37.77677],\n        [-122.417784, 37.776729],\n        [-122.417677, 37.776665],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.416447, 37.775699],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"45-67\": {\n    \"distance\": 2.5338520215700546,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"45-68\": {\n    \"distance\": 1.2464281787877132,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.399975, 37.787011],\n        [-122.399502, 37.786634],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"45-69\": {\n    \"distance\": 2.7303336076098628,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"45-70\": {\n    \"distance\": 2.7034810876270217,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"45-71\": {\n    \"distance\": 1.1405005941778625,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402552, 37.789995],\n        [-122.40303, 37.789932],\n        [-122.403866, 37.789826],\n        [-122.404208, 37.789783],\n        [-122.40459, 37.789735],\n        [-122.405404, 37.78962],\n        [-122.406986, 37.789429],\n        [-122.407752, 37.789333],\n        [-122.408615, 37.789226],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"45-72\": {\n    \"distance\": 1.9625351309185626,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"45-73\": {\n    \"distance\": 0.8464594310519477,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.404012, 37.79364],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"45-74\": {\n    \"distance\": 1.0202957145268343,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.401958, 37.792954],\n        [-122.401128, 37.793073],\n        [-122.399959, 37.793209],\n        [-122.398903, 37.79335],\n        [-122.398783, 37.793366],\n        [-122.398706, 37.793376],\n        [-122.397611, 37.79352],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"45-75\": {\n    \"distance\": 0.7015359939384717,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.402005, 37.791016],\n        [-122.40113, 37.791128],\n        [-122.400744, 37.791177],\n        [-122.399707, 37.791309],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"45-76\": {\n    \"distance\": 1.002195473353355,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"45-77\": {\n    \"distance\": 0.7594231363760793,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"45-82\": {\n    \"distance\": 1.120763005972831,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.404012, 37.79364],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"47-48\": {\n    \"distance\": 2.0695308939177877,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399144, 37.800912],\n        [-122.399253, 37.80084],\n        [-122.39918, 37.800768],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"47-49\": {\n    \"distance\": 1.6175484137187524,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394077, 37.792542],\n        [-122.393228, 37.791868],\n        [-122.393119, 37.791781],\n        [-122.392525, 37.79131],\n        [-122.391972, 37.79087],\n        [-122.390979, 37.790082],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"47-50\": {\n    \"distance\": 1.5758556860713497,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.392595, 37.793719],\n        [-122.392512, 37.793786],\n        [-122.392443, 37.793844],\n        [-122.392777, 37.794156],\n        [-122.393072, 37.79443],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"47-51\": {\n    \"distance\": 1.6194930920149995,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"47-53\": {\n    \"distance\": 0.9495567719947818,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"47-54\": {\n    \"distance\": 2.0995352429015104,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394077, 37.792542],\n        [-122.393228, 37.791868],\n        [-122.393119, 37.791781],\n        [-122.392525, 37.79131],\n        [-122.391972, 37.79087],\n        [-122.390979, 37.790082],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"47-55\": {\n    \"distance\": 1.162734114768857,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"47-56\": {\n    \"distance\": 0.7697859424279788,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"47-57\": {\n    \"distance\": 1.3534913955974373,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"47-58\": {\n    \"distance\": 2.2096855091226804,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"47-59\": {\n    \"distance\": 2.161994795312362,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.41597, 37.780627],\n        [-122.416859, 37.780507],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"47-60\": {\n    \"distance\": 2.552452932100622,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.402419, 37.799377],\n        [-122.40261, 37.800315],\n        [-122.402804, 37.801267],\n        [-122.402891, 37.801696],\n        [-122.402989, 37.802174],\n        [-122.403156, 37.803014],\n        [-122.403174, 37.803104],\n        [-122.403189, 37.803176],\n        [-122.403345, 37.803964],\n        [-122.403358, 37.804032],\n        [-122.403376, 37.804122],\n        [-122.403525, 37.804897],\n        [-122.403542, 37.804989],\n        [-122.403561, 37.805122],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"47-61\": {\n    \"distance\": 1.6168138711364104,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"47-62\": {\n    \"distance\": 0.8717359650378713,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"47-63\": {\n    \"distance\": 1.160443969132221,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"47-65\": {\n    \"distance\": 3.3032767973696098,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.401932, 37.782633],\n        [-122.401703, 37.782447],\n        [-122.401175, 37.782025],\n        [-122.400621, 37.781581],\n        [-122.400376, 37.781387],\n        [-122.400158, 37.781211],\n        [-122.399635, 37.780791],\n        [-122.399619, 37.780658],\n        [-122.39963, 37.78056],\n        [-122.399649, 37.780466],\n        [-122.39968, 37.780359],\n        [-122.399726, 37.780249],\n        [-122.399786, 37.78014],\n        [-122.399869, 37.780029],\n        [-122.399974, 37.779903],\n        [-122.400086, 37.779781],\n        [-122.400219, 37.779645],\n        [-122.400369, 37.7795],\n        [-122.400526, 37.779359],\n        [-122.400991, 37.77897],\n        [-122.401106, 37.778873],\n        [-122.40129, 37.778716],\n        [-122.401954, 37.778094],\n        [-122.402207, 37.777903],\n        [-122.402476, 37.777712],\n        [-122.402737, 37.777532],\n        [-122.402994, 37.777365],\n        [-122.403258, 37.777202],\n        [-122.405095, 37.776113],\n        [-122.405315, 37.776008],\n        [-122.405467, 37.775927],\n        [-122.405602, 37.775839],\n        [-122.405758, 37.775723],\n        [-122.405907, 37.775601],\n        [-122.406057, 37.775469],\n        [-122.406219, 37.775314],\n        [-122.406378, 37.775151],\n        [-122.406518, 37.774999],\n        [-122.406654, 37.774836],\n        [-122.406787, 37.774665],\n        [-122.407086, 37.774261],\n        [-122.407156, 37.774174],\n        [-122.407231, 37.774093],\n        [-122.407311, 37.774021],\n        [-122.407407, 37.773944],\n        [-122.407502, 37.773872],\n        [-122.407736, 37.77371],\n        [-122.407792, 37.77365],\n        [-122.407832, 37.773582],\n        [-122.407859, 37.773513],\n        [-122.407872, 37.773448],\n        [-122.407866, 37.773373],\n        [-122.407848, 37.773298],\n        [-122.407773, 37.773152],\n        [-122.407267, 37.77272],\n        [-122.407044, 37.772488],\n        [-122.406939, 37.772376],\n        [-122.406797, 37.772255],\n        [-122.406473, 37.771951],\n        [-122.405964, 37.771631],\n        [-122.405569, 37.77135],\n        [-122.405451, 37.771303],\n        [-122.405357, 37.771232],\n        [-122.404957, 37.770906],\n        [-122.404749, 37.770735],\n        [-122.404014, 37.770133],\n        [-122.403939, 37.770055],\n        [-122.404048, 37.770007],\n        [-122.404085, 37.769951],\n        [-122.404078, 37.769861],\n        [-122.404031, 37.769808],\n        [-122.40396, 37.769777],\n        [-122.403881, 37.769773],\n        [-122.403774, 37.76982],\n        [-122.403733, 37.769886],\n        [-122.403758, 37.769991],\n        [-122.403857, 37.77005],\n        [-122.403807, 37.770119],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"47-66\": {\n    \"distance\": 2.9220018789644837,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416945, 37.777652],\n        [-122.417475, 37.777584],\n        [-122.417586, 37.777568],\n        [-122.418049, 37.777505],\n        [-122.417916, 37.776859],\n        [-122.417889, 37.776816],\n        [-122.417839, 37.77677],\n        [-122.417784, 37.776729],\n        [-122.417677, 37.776665],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.416447, 37.775699],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"47-64\": {\n    \"distance\": 1.328559370676606,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"47-67\": {\n    \"distance\": 2.0758004261940477,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"47-68\": {\n    \"distance\": 0.7883765834117058,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.399975, 37.787011],\n        [-122.399502, 37.786634],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"47-69\": {\n    \"distance\": 2.2722820122338563,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"47-71\": {\n    \"distance\": 0.8727574488292067,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"47-70\": {\n    \"distance\": 2.245429492251015,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"47-72\": {\n    \"distance\": 1.5044835355425552,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"47-73\": {\n    \"distance\": 1.596939863343556,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"47-74\": {\n    \"distance\": 1.1035900619609442,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"47-77\": {\n    \"distance\": 0.3013715410000719,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"47-76\": {\n    \"distance\": 0.5441438779773475,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"47-75\": {\n    \"distance\": 0.5428718020180452,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"47-82\": {\n    \"distance\": 1.8712434382644396,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"48-49\": {\n    \"distance\": 1.459109427537849,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395523, 37.7966],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390907, 37.791534],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"48-50\": {\n    \"distance\": 0.9338776812012866,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395523, 37.7966],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393362, 37.794385],\n        [-122.393258, 37.794377],\n        [-122.393198, 37.794411],\n        [-122.393177, 37.794466],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"48-51\": {\n    \"distance\": 1.1666869713211794,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"48-53\": {\n    \"distance\": 2.414983277722015,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"48-54\": {\n    \"distance\": 1.7387748792481998,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390907, 37.791534],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"48-55\": {\n    \"distance\": 1.534918584721234,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.396649, 37.794578],\n        [-122.396732, 37.794568],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793494],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"48-56\": {\n    \"distance\": 1.141970412380356,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.396649, 37.794578],\n        [-122.396732, 37.794568],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793494],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"48-57\": {\n    \"distance\": 2.818917901324671,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"48-58\": {\n    \"distance\": 3.6751120148499137,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"48-59\": {\n    \"distance\": 3.6274213010395955,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.41597, 37.780627],\n        [-122.416859, 37.780507],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"48-60\": {\n    \"distance\": 1.0165841501620871,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399165, 37.801123],\n        [-122.399792, 37.801819],\n        [-122.400448, 37.802547],\n        [-122.400903, 37.803058],\n        [-122.401236, 37.80342],\n        [-122.401794, 37.804076],\n        [-122.401904, 37.804165],\n        [-122.40207, 37.804321],\n        [-122.402155, 37.804399],\n        [-122.402206, 37.804441],\n        [-122.402723, 37.804821],\n        [-122.403174, 37.80514],\n        [-122.403268, 37.805142],\n        [-122.403356, 37.805116],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"48-61\": {\n    \"distance\": 2.6679754849298223,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390907, 37.791534],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388309, 37.783373],\n        [-122.388376, 37.782545],\n        [-122.388424, 37.781908],\n        [-122.388431, 37.781791],\n        [-122.388464, 37.781351],\n        [-122.388485, 37.781222],\n        [-122.388522, 37.781102],\n        [-122.388573, 37.780974],\n        [-122.388646, 37.780845],\n        [-122.388733, 37.780723],\n        [-122.388854, 37.780588],\n        [-122.388991, 37.780472],\n        [-122.389683, 37.779916],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"48-62\": {\n    \"distance\": 2.179403100324523,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397882, 37.799145],\n        [-122.397961, 37.799103],\n        [-122.398026, 37.799069],\n        [-122.398097, 37.799039],\n        [-122.398222, 37.798989],\n        [-122.398334, 37.798957],\n        [-122.398615, 37.798906],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"48-63\": {\n    \"distance\": 1.9131140729277132,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397882, 37.799145],\n        [-122.397961, 37.799103],\n        [-122.398026, 37.799069],\n        [-122.398097, 37.799039],\n        [-122.398222, 37.798989],\n        [-122.398334, 37.798957],\n        [-122.398615, 37.798906],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"48-64\": {\n    \"distance\": 2.636226625785063,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397882, 37.799145],\n        [-122.397961, 37.799103],\n        [-122.398026, 37.799069],\n        [-122.398097, 37.799039],\n        [-122.398222, 37.798989],\n        [-122.398334, 37.798957],\n        [-122.398615, 37.798906],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"48-65\": {\n    \"distance\": 4.768703303096844,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.401932, 37.782633],\n        [-122.401703, 37.782447],\n        [-122.401175, 37.782025],\n        [-122.400621, 37.781581],\n        [-122.400376, 37.781387],\n        [-122.400158, 37.781211],\n        [-122.399635, 37.780791],\n        [-122.399619, 37.780658],\n        [-122.39963, 37.78056],\n        [-122.399649, 37.780466],\n        [-122.39968, 37.780359],\n        [-122.399726, 37.780249],\n        [-122.399786, 37.78014],\n        [-122.399869, 37.780029],\n        [-122.399974, 37.779903],\n        [-122.400086, 37.779781],\n        [-122.400219, 37.779645],\n        [-122.400369, 37.7795],\n        [-122.400526, 37.779359],\n        [-122.400991, 37.77897],\n        [-122.401106, 37.778873],\n        [-122.40129, 37.778716],\n        [-122.401954, 37.778094],\n        [-122.402207, 37.777903],\n        [-122.402476, 37.777712],\n        [-122.402737, 37.777532],\n        [-122.402994, 37.777365],\n        [-122.403258, 37.777202],\n        [-122.405095, 37.776113],\n        [-122.405315, 37.776008],\n        [-122.405467, 37.775927],\n        [-122.405602, 37.775839],\n        [-122.405758, 37.775723],\n        [-122.405907, 37.775601],\n        [-122.406057, 37.775469],\n        [-122.406219, 37.775314],\n        [-122.406378, 37.775151],\n        [-122.406518, 37.774999],\n        [-122.406654, 37.774836],\n        [-122.406787, 37.774665],\n        [-122.407086, 37.774261],\n        [-122.407156, 37.774174],\n        [-122.407231, 37.774093],\n        [-122.407311, 37.774021],\n        [-122.407407, 37.773944],\n        [-122.407502, 37.773872],\n        [-122.407736, 37.77371],\n        [-122.407792, 37.77365],\n        [-122.407832, 37.773582],\n        [-122.407859, 37.773513],\n        [-122.407872, 37.773448],\n        [-122.407866, 37.773373],\n        [-122.407848, 37.773298],\n        [-122.407773, 37.773152],\n        [-122.407267, 37.77272],\n        [-122.407044, 37.772488],\n        [-122.406939, 37.772376],\n        [-122.406797, 37.772255],\n        [-122.406473, 37.771951],\n        [-122.405964, 37.771631],\n        [-122.405569, 37.77135],\n        [-122.405451, 37.771303],\n        [-122.405357, 37.771232],\n        [-122.404957, 37.770906],\n        [-122.404749, 37.770735],\n        [-122.404014, 37.770133],\n        [-122.403939, 37.770055],\n        [-122.404048, 37.770007],\n        [-122.404085, 37.769951],\n        [-122.404078, 37.769861],\n        [-122.404031, 37.769808],\n        [-122.40396, 37.769777],\n        [-122.403881, 37.769773],\n        [-122.403774, 37.76982],\n        [-122.403733, 37.769886],\n        [-122.403758, 37.769991],\n        [-122.403857, 37.77005],\n        [-122.403807, 37.770119],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"48-66\": {\n    \"distance\": 4.3874283846917175,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416945, 37.777652],\n        [-122.417475, 37.777584],\n        [-122.417586, 37.777568],\n        [-122.418049, 37.777505],\n        [-122.417916, 37.776859],\n        [-122.417889, 37.776816],\n        [-122.417839, 37.77677],\n        [-122.417784, 37.776729],\n        [-122.417677, 37.776665],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.416447, 37.775699],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"48-67\": {\n    \"distance\": 3.5412269319212806,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"48-68\": {\n    \"distance\": 2.341828128939625,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400543, 37.79026],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.399975, 37.787011],\n        [-122.399502, 37.786634],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"48-69\": {\n    \"distance\": 3.3520033113729637,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390907, 37.791534],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"48-70\": {\n    \"distance\": 3.3251507913901226,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390907, 37.791534],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"48-71\": {\n    \"distance\": 2.33818395455644,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"48-72\": {\n    \"distance\": 2.9699100412697885,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"48-73\": {\n    \"distance\": 1.0011472472215381,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397882, 37.799145],\n        [-122.397961, 37.799103],\n        [-122.398026, 37.799069],\n        [-122.398097, 37.799039],\n        [-122.398222, 37.798989],\n        [-122.398334, 37.798957],\n        [-122.398615, 37.798906],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.406256, 37.79792],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"48-74\": {\n    \"distance\": 1.0960533155075791,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"48-75\": {\n    \"distance\": 1.247539153097556,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"48-76\": {\n    \"distance\": 2.009570383704581,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"48-77\": {\n    \"distance\": 1.4890387129950182,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"48-82\": {\n    \"distance\": 0.3881375715067839,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397882, 37.799145],\n        [-122.397961, 37.799103],\n        [-122.398026, 37.799069],\n        [-122.398097, 37.799039],\n        [-122.398222, 37.798989],\n        [-122.398334, 37.798957],\n        [-122.398615, 37.798906],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"49-50\": {\n    \"distance\": 1.0610941227988975,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388411, 37.78964],\n        [-122.388512, 37.789741],\n        [-122.388623, 37.789839],\n        [-122.389433, 37.790495],\n        [-122.389827, 37.790813],\n        [-122.389934, 37.790912],\n        [-122.39002, 37.791001],\n        [-122.390133, 37.791127],\n        [-122.390237, 37.791261],\n        [-122.390326, 37.791396],\n        [-122.39041, 37.791547],\n        [-122.390482, 37.791701],\n        [-122.390594, 37.791942],\n        [-122.390661, 37.792078],\n        [-122.390735, 37.79221],\n        [-122.390811, 37.792323],\n        [-122.390901, 37.792437],\n        [-122.390976, 37.792533],\n        [-122.391053, 37.792627],\n        [-122.391192, 37.792766],\n        [-122.391994, 37.793441],\n        [-122.39218, 37.793603],\n        [-122.392341, 37.793754],\n        [-122.392443, 37.793844],\n        [-122.392777, 37.794156],\n        [-122.393072, 37.79443],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"49-51\": {\n    \"distance\": 0.7610112027779683,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388411, 37.78964],\n        [-122.388512, 37.789741],\n        [-122.388623, 37.789839],\n        [-122.389433, 37.790495],\n        [-122.389827, 37.790813],\n        [-122.389934, 37.790912],\n        [-122.39002, 37.791001],\n        [-122.390133, 37.791127],\n        [-122.390237, 37.791261],\n        [-122.390326, 37.791396],\n        [-122.39041, 37.791547],\n        [-122.390482, 37.791701],\n        [-122.390594, 37.791942],\n        [-122.390661, 37.792078],\n        [-122.390735, 37.79221],\n        [-122.390811, 37.792323],\n        [-122.390901, 37.792437],\n        [-122.390976, 37.792533],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"49-53\": {\n    \"distance\": 2.4898109482213315,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"49-54\": {\n    \"distance\": 0.4819872650875055,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"49-55\": {\n    \"distance\": 0.8981644022818197,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.390971, 37.787643],\n        [-122.391407, 37.787297],\n        [-122.39207, 37.786773],\n        [-122.392994, 37.787515],\n        [-122.393616, 37.788003],\n        [-122.393758, 37.788167],\n        [-122.394094, 37.788442],\n        [-122.394207, 37.788531],\n        [-122.394467, 37.788691],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"49-56\": {\n    \"distance\": 1.3294418798470382,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.39648, 37.793664],\n        [-122.397611, 37.79352],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"49-57\": {\n    \"distance\": 2.0735072773808265,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.390971, 37.787643],\n        [-122.391407, 37.787297],\n        [-122.39207, 37.786773],\n        [-122.392949, 37.786077],\n        [-122.393426, 37.7857],\n        [-122.394038, 37.785216],\n        [-122.394414, 37.784922],\n        [-122.394809, 37.784606],\n        [-122.395178, 37.784312],\n        [-122.395714, 37.78389],\n        [-122.396301, 37.783425],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"49-58\": {\n    \"distance\": 3.74993968534923,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"49-59\": {\n    \"distance\": 3.702248971538912,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.41597, 37.780627],\n        [-122.416859, 37.780507],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"49-60\": {\n    \"distance\": 2.4673535963398967,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388411, 37.78964],\n        [-122.388512, 37.789741],\n        [-122.388623, 37.789839],\n        [-122.389433, 37.790495],\n        [-122.389827, 37.790813],\n        [-122.389934, 37.790912],\n        [-122.39002, 37.791001],\n        [-122.390133, 37.791127],\n        [-122.390237, 37.791261],\n        [-122.390326, 37.791396],\n        [-122.39041, 37.791547],\n        [-122.390482, 37.791701],\n        [-122.390594, 37.791942],\n        [-122.390661, 37.792078],\n        [-122.390735, 37.79221],\n        [-122.390811, 37.792323],\n        [-122.390901, 37.792437],\n        [-122.390976, 37.792533],\n        [-122.391053, 37.792627],\n        [-122.391192, 37.792766],\n        [-122.391994, 37.793441],\n        [-122.39218, 37.793603],\n        [-122.392341, 37.793754],\n        [-122.392443, 37.793844],\n        [-122.392777, 37.794156],\n        [-122.393072, 37.79443],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399165, 37.801123],\n        [-122.399792, 37.801819],\n        [-122.400448, 37.802547],\n        [-122.400903, 37.803058],\n        [-122.401236, 37.80342],\n        [-122.401794, 37.804076],\n        [-122.401904, 37.804165],\n        [-122.40207, 37.804321],\n        [-122.402155, 37.804399],\n        [-122.402206, 37.804441],\n        [-122.402723, 37.804821],\n        [-122.403174, 37.80514],\n        [-122.403268, 37.805142],\n        [-122.403356, 37.805116],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"49-61\": {\n    \"distance\": 1.4111878707691288,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388309, 37.783373],\n        [-122.388376, 37.782545],\n        [-122.388424, 37.781908],\n        [-122.388431, 37.781791],\n        [-122.388464, 37.781351],\n        [-122.388485, 37.781222],\n        [-122.388522, 37.781102],\n        [-122.388573, 37.780974],\n        [-122.388646, 37.780845],\n        [-122.388733, 37.780723],\n        [-122.388854, 37.780588],\n        [-122.388991, 37.780472],\n        [-122.389683, 37.779916],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"49-62\": {\n    \"distance\": 0.9705334756546821,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.390971, 37.787643],\n        [-122.391407, 37.787297],\n        [-122.39207, 37.786773],\n        [-122.392949, 37.786077],\n        [-122.393426, 37.7857],\n        [-122.394038, 37.785216],\n        [-122.394414, 37.784922],\n        [-122.394809, 37.784606],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"49-63\": {\n    \"distance\": 1.1865922295329132,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.390971, 37.787643],\n        [-122.391407, 37.787297],\n        [-122.39207, 37.786773],\n        [-122.392994, 37.787515],\n        [-122.393616, 37.788003],\n        [-122.393758, 37.788167],\n        [-122.394094, 37.788442],\n        [-122.394207, 37.788531],\n        [-122.394467, 37.788691],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"49-64\": {\n    \"distance\": 1.1397907160295568,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.390971, 37.787643],\n        [-122.391407, 37.787297],\n        [-122.39207, 37.786773],\n        [-122.392949, 37.786077],\n        [-122.393426, 37.7857],\n        [-122.394038, 37.785216],\n        [-122.394414, 37.784922],\n        [-122.394809, 37.784606],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"49-65\": {\n    \"distance\": 2.926384388658131,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"49-66\": {\n    \"distance\": 3.964648138757473,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.390971, 37.787643],\n        [-122.391407, 37.787297],\n        [-122.39207, 37.786773],\n        [-122.392949, 37.786077],\n        [-122.393426, 37.7857],\n        [-122.394038, 37.785216],\n        [-122.394414, 37.784922],\n        [-122.394809, 37.784606],\n        [-122.395178, 37.784312],\n        [-122.395714, 37.78389],\n        [-122.396301, 37.783425],\n        [-122.3974, 37.782556],\n        [-122.398365, 37.781794],\n        [-122.399635, 37.780791],\n        [-122.399619, 37.780658],\n        [-122.39963, 37.78056],\n        [-122.399649, 37.780466],\n        [-122.39968, 37.780359],\n        [-122.399726, 37.780249],\n        [-122.399786, 37.78014],\n        [-122.399869, 37.780029],\n        [-122.399974, 37.779903],\n        [-122.400086, 37.779781],\n        [-122.400219, 37.779645],\n        [-122.400369, 37.7795],\n        [-122.400526, 37.779359],\n        [-122.400991, 37.77897],\n        [-122.401106, 37.778873],\n        [-122.40129, 37.778716],\n        [-122.401954, 37.778094],\n        [-122.402207, 37.777903],\n        [-122.402476, 37.777712],\n        [-122.402737, 37.777532],\n        [-122.402994, 37.777365],\n        [-122.403258, 37.777202],\n        [-122.405095, 37.776113],\n        [-122.405315, 37.776008],\n        [-122.405467, 37.775927],\n        [-122.405602, 37.775839],\n        [-122.405758, 37.775723],\n        [-122.405907, 37.775601],\n        [-122.406057, 37.775469],\n        [-122.406219, 37.775314],\n        [-122.406378, 37.775151],\n        [-122.406518, 37.774999],\n        [-122.406654, 37.774836],\n        [-122.406787, 37.774665],\n        [-122.407086, 37.774261],\n        [-122.407156, 37.774174],\n        [-122.407231, 37.774093],\n        [-122.407311, 37.774021],\n        [-122.407407, 37.773944],\n        [-122.407502, 37.773872],\n        [-122.407609, 37.773817],\n        [-122.40771, 37.773783],\n        [-122.407822, 37.773761],\n        [-122.408286, 37.773712],\n        [-122.408445, 37.773688],\n        [-122.408666, 37.773656],\n        [-122.408922, 37.773454],\n        [-122.409693, 37.772845],\n        [-122.410083, 37.772537],\n        [-122.410692, 37.773024],\n        [-122.411074, 37.77333],\n        [-122.411627, 37.773773],\n        [-122.412165, 37.774203],\n        [-122.412622, 37.774568],\n        [-122.413157, 37.774996],\n        [-122.413714, 37.775439],\n        [-122.414171, 37.775802],\n        [-122.414716, 37.776233],\n        [-122.415145, 37.775891],\n        [-122.415508, 37.775602],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"49-67\": {\n    \"distance\": 3.616054602420597,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"49-68\": {\n    \"distance\": 1.5312468563946653,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.390971, 37.787643],\n        [-122.391407, 37.787297],\n        [-122.39207, 37.786773],\n        [-122.392949, 37.786077],\n        [-122.393426, 37.7857],\n        [-122.394038, 37.785216],\n        [-122.394414, 37.784922],\n        [-122.394809, 37.784606],\n        [-122.395178, 37.784312],\n        [-122.395714, 37.78389],\n        [-122.396301, 37.783425],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"49-69\": {\n    \"distance\": 2.09521569721227,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"49-70\": {\n    \"distance\": 2.068363177229429,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"49-71\": {\n    \"distance\": 2.413011625055757,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"49-72\": {\n    \"distance\": 3.044737711769105,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"49-74\": {\n    \"distance\": 1.166886243513381,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.394077, 37.792542],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"49-73\": {\n    \"distance\": 2.460682381579206,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388411, 37.78964],\n        [-122.388512, 37.789741],\n        [-122.388623, 37.789839],\n        [-122.389433, 37.790495],\n        [-122.389827, 37.790813],\n        [-122.389934, 37.790912],\n        [-122.39002, 37.791001],\n        [-122.390133, 37.791127],\n        [-122.390237, 37.791261],\n        [-122.390326, 37.791396],\n        [-122.39041, 37.791547],\n        [-122.390482, 37.791701],\n        [-122.390594, 37.791942],\n        [-122.390661, 37.792078],\n        [-122.390735, 37.79221],\n        [-122.390811, 37.792323],\n        [-122.390901, 37.792437],\n        [-122.390976, 37.792533],\n        [-122.391053, 37.792627],\n        [-122.391192, 37.792766],\n        [-122.391994, 37.793441],\n        [-122.39218, 37.793603],\n        [-122.392341, 37.793754],\n        [-122.392443, 37.793844],\n        [-122.392777, 37.794156],\n        [-122.393072, 37.79443],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.398168, 37.796167],\n        [-122.398587, 37.796104],\n        [-122.400492, 37.795867],\n        [-122.40111, 37.795793],\n        [-122.401674, 37.795719],\n        [-122.40238, 37.795641],\n        [-122.402741, 37.795597],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.404507, 37.796369],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"49-75\": {\n    \"distance\": 1.3223668235968726,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"49-76\": {\n    \"distance\": 2.0843980542038976,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"49-77\": {\n    \"distance\": 1.563866383494335,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"49-82\": {\n    \"distance\": 1.8907326429412532,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388411, 37.78964],\n        [-122.388512, 37.789741],\n        [-122.388623, 37.789839],\n        [-122.389433, 37.790495],\n        [-122.389827, 37.790813],\n        [-122.389934, 37.790912],\n        [-122.39002, 37.791001],\n        [-122.390133, 37.791127],\n        [-122.390237, 37.791261],\n        [-122.390326, 37.791396],\n        [-122.39041, 37.791547],\n        [-122.390482, 37.791701],\n        [-122.390594, 37.791942],\n        [-122.390661, 37.792078],\n        [-122.390735, 37.79221],\n        [-122.390811, 37.792323],\n        [-122.390901, 37.792437],\n        [-122.390976, 37.792533],\n        [-122.391053, 37.792627],\n        [-122.391192, 37.792766],\n        [-122.391994, 37.793441],\n        [-122.39218, 37.793603],\n        [-122.392341, 37.793754],\n        [-122.392443, 37.793844],\n        [-122.392777, 37.794156],\n        [-122.393072, 37.79443],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397792, 37.799184],\n        [-122.397882, 37.799145],\n        [-122.397961, 37.799103],\n        [-122.398026, 37.799069],\n        [-122.398097, 37.799039],\n        [-122.398222, 37.798989],\n        [-122.398334, 37.798957],\n        [-122.398615, 37.798906],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"50-53\": {\n    \"distance\": 2.174974791962126,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"50-51\": {\n    \"distance\": 0.7232407822470183,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.394751, 37.796031],\n        [-122.394811, 37.796018],\n        [-122.394849, 37.795943],\n        [-122.394822, 37.795875],\n        [-122.39474, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"50-54\": {\n    \"distance\": 1.295328690174039,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.394751, 37.796031],\n        [-122.394811, 37.796018],\n        [-122.394849, 37.795943],\n        [-122.394822, 37.795875],\n        [-122.39474, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390907, 37.791534],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"50-55\": {\n    \"distance\": 1.059794882584231,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.394751, 37.796031],\n        [-122.394811, 37.796018],\n        [-122.394849, 37.795943],\n        [-122.394822, 37.795875],\n        [-122.39474, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.393203, 37.793241],\n        [-122.394077, 37.792542],\n        [-122.394951, 37.791852],\n        [-122.395023, 37.791767],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"50-56\": {\n    \"distance\": 0.9019619266204677,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.396649, 37.794578],\n        [-122.396732, 37.794568],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793494],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"50-57\": {\n    \"distance\": 2.5789094155647816,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"50-58\": {\n    \"distance\": 3.4351035290900245,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"50-59\": {\n    \"distance\": 3.387412815279706,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.41597, 37.780627],\n        [-122.416859, 37.780507],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"50-60\": {\n    \"distance\": 1.406259582794958,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399165, 37.801123],\n        [-122.399792, 37.801819],\n        [-122.400448, 37.802547],\n        [-122.400903, 37.803058],\n        [-122.401236, 37.80342],\n        [-122.401794, 37.804076],\n        [-122.401904, 37.804165],\n        [-122.40207, 37.804321],\n        [-122.402155, 37.804399],\n        [-122.402206, 37.804441],\n        [-122.402723, 37.804821],\n        [-122.403174, 37.80514],\n        [-122.403268, 37.805142],\n        [-122.403356, 37.805116],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"50-61\": {\n    \"distance\": 2.2245292958556617,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.394751, 37.796031],\n        [-122.394811, 37.796018],\n        [-122.394849, 37.795943],\n        [-122.394822, 37.795875],\n        [-122.39474, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390907, 37.791534],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388309, 37.783373],\n        [-122.388376, 37.782545],\n        [-122.388424, 37.781908],\n        [-122.388431, 37.781791],\n        [-122.388464, 37.781351],\n        [-122.388485, 37.781222],\n        [-122.388522, 37.781102],\n        [-122.388573, 37.780974],\n        [-122.388646, 37.780845],\n        [-122.388733, 37.780723],\n        [-122.388854, 37.780588],\n        [-122.388991, 37.780472],\n        [-122.389683, 37.779916],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"50-62\": {\n    \"distance\": 1.760458912492702,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.394751, 37.796031],\n        [-122.394811, 37.796018],\n        [-122.394849, 37.795943],\n        [-122.394822, 37.795875],\n        [-122.39474, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.393203, 37.793241],\n        [-122.394077, 37.792542],\n        [-122.394951, 37.791852],\n        [-122.395023, 37.791767],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"50-63\": {\n    \"distance\": 1.4941698850958922,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.394751, 37.796031],\n        [-122.394811, 37.796018],\n        [-122.394849, 37.795943],\n        [-122.394822, 37.795875],\n        [-122.39474, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.393203, 37.793241],\n        [-122.394077, 37.792542],\n        [-122.394951, 37.791852],\n        [-122.395023, 37.791767],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"50-64\": {\n    \"distance\": 2.109359578281155,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.394751, 37.796031],\n        [-122.394811, 37.796018],\n        [-122.394849, 37.795943],\n        [-122.394822, 37.795875],\n        [-122.39474, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390907, 37.791534],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"50-65\": {\n    \"distance\": 4.5286948173369534,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.401932, 37.782633],\n        [-122.401703, 37.782447],\n        [-122.401175, 37.782025],\n        [-122.400621, 37.781581],\n        [-122.400376, 37.781387],\n        [-122.400158, 37.781211],\n        [-122.399635, 37.780791],\n        [-122.399619, 37.780658],\n        [-122.39963, 37.78056],\n        [-122.399649, 37.780466],\n        [-122.39968, 37.780359],\n        [-122.399726, 37.780249],\n        [-122.399786, 37.78014],\n        [-122.399869, 37.780029],\n        [-122.399974, 37.779903],\n        [-122.400086, 37.779781],\n        [-122.400219, 37.779645],\n        [-122.400369, 37.7795],\n        [-122.400526, 37.779359],\n        [-122.400991, 37.77897],\n        [-122.401106, 37.778873],\n        [-122.40129, 37.778716],\n        [-122.401954, 37.778094],\n        [-122.402207, 37.777903],\n        [-122.402476, 37.777712],\n        [-122.402737, 37.777532],\n        [-122.402994, 37.777365],\n        [-122.403258, 37.777202],\n        [-122.405095, 37.776113],\n        [-122.405315, 37.776008],\n        [-122.405467, 37.775927],\n        [-122.405602, 37.775839],\n        [-122.405758, 37.775723],\n        [-122.405907, 37.775601],\n        [-122.406057, 37.775469],\n        [-122.406219, 37.775314],\n        [-122.406378, 37.775151],\n        [-122.406518, 37.774999],\n        [-122.406654, 37.774836],\n        [-122.406787, 37.774665],\n        [-122.407086, 37.774261],\n        [-122.407156, 37.774174],\n        [-122.407231, 37.774093],\n        [-122.407311, 37.774021],\n        [-122.407407, 37.773944],\n        [-122.407502, 37.773872],\n        [-122.407736, 37.77371],\n        [-122.407792, 37.77365],\n        [-122.407832, 37.773582],\n        [-122.407859, 37.773513],\n        [-122.407872, 37.773448],\n        [-122.407866, 37.773373],\n        [-122.407848, 37.773298],\n        [-122.407773, 37.773152],\n        [-122.407267, 37.77272],\n        [-122.407044, 37.772488],\n        [-122.406939, 37.772376],\n        [-122.406797, 37.772255],\n        [-122.406473, 37.771951],\n        [-122.405964, 37.771631],\n        [-122.405569, 37.77135],\n        [-122.405451, 37.771303],\n        [-122.405357, 37.771232],\n        [-122.404957, 37.770906],\n        [-122.404749, 37.770735],\n        [-122.404014, 37.770133],\n        [-122.403939, 37.770055],\n        [-122.404048, 37.770007],\n        [-122.404085, 37.769951],\n        [-122.404078, 37.769861],\n        [-122.404031, 37.769808],\n        [-122.40396, 37.769777],\n        [-122.403881, 37.769773],\n        [-122.403774, 37.76982],\n        [-122.403733, 37.769886],\n        [-122.403758, 37.769991],\n        [-122.403857, 37.77005],\n        [-122.403807, 37.770119],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"50-66\": {\n    \"distance\": 4.147419898931828,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416945, 37.777652],\n        [-122.417475, 37.777584],\n        [-122.417586, 37.777568],\n        [-122.418049, 37.777505],\n        [-122.417916, 37.776859],\n        [-122.417889, 37.776816],\n        [-122.417839, 37.77677],\n        [-122.417784, 37.776729],\n        [-122.417677, 37.776665],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.416447, 37.775699],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"50-67\": {\n    \"distance\": 3.3012184461613914,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"50-68\": {\n    \"distance\": 2.101819643179737,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400543, 37.79026],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.399975, 37.787011],\n        [-122.399502, 37.786634],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"50-69\": {\n    \"distance\": 2.9085571222988036,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.394751, 37.796031],\n        [-122.394811, 37.796018],\n        [-122.394849, 37.795943],\n        [-122.394822, 37.795875],\n        [-122.39474, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390907, 37.791534],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"50-70\": {\n    \"distance\": 2.8817046023159625,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.394751, 37.796031],\n        [-122.394811, 37.796018],\n        [-122.394849, 37.795943],\n        [-122.394822, 37.795875],\n        [-122.39474, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390907, 37.791534],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"50-71\": {\n    \"distance\": 2.0981754687965504,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"50-72\": {\n    \"distance\": 2.7299015555098993,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"50-73\": {\n    \"distance\": 1.3995883680342658,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.398168, 37.796167],\n        [-122.398587, 37.796104],\n        [-122.400492, 37.795867],\n        [-122.40111, 37.795793],\n        [-122.401674, 37.795719],\n        [-122.40238, 37.795641],\n        [-122.402741, 37.795597],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.404507, 37.796369],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"50-74\": {\n    \"distance\": 0.6526071264334179,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.394751, 37.796031],\n        [-122.394811, 37.796018],\n        [-122.394849, 37.795943],\n        [-122.394822, 37.795875],\n        [-122.39474, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"50-75\": {\n    \"distance\": 1.0075306673376674,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"50-77\": {\n    \"distance\": 1.2490302272351297,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"50-76\": {\n    \"distance\": 1.769561897944692,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"51-53\": {\n    \"distance\": 2.3956711681058187,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"50-82\": {\n    \"distance\": 0.829638629396313,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397792, 37.799184],\n        [-122.397882, 37.799145],\n        [-122.397961, 37.799103],\n        [-122.398026, 37.799069],\n        [-122.398097, 37.799039],\n        [-122.398222, 37.798989],\n        [-122.398334, 37.798957],\n        [-122.398615, 37.798906],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"51-58\": {\n    \"distance\": 3.6557999052337173,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"51-54\": {\n    \"distance\": 0.572079519809044,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"51-57\": {\n    \"distance\": 1.9809069523944676,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391895, 37.789356],\n        [-122.392739, 37.788691],\n        [-122.393209, 37.788323],\n        [-122.393333, 37.788225],\n        [-122.393616, 37.788003],\n        [-122.393758, 37.788167],\n        [-122.394094, 37.788442],\n        [-122.394207, 37.788531],\n        [-122.394467, 37.788691],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"51-55\": {\n    \"distance\": 0.8046517632862871,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391895, 37.789356],\n        [-122.392739, 37.788691],\n        [-122.393209, 37.788323],\n        [-122.393333, 37.788225],\n        [-122.393616, 37.788003],\n        [-122.393758, 37.788167],\n        [-122.394094, 37.788442],\n        [-122.394207, 37.788531],\n        [-122.394467, 37.788691],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"51-56\": {\n    \"distance\": 1.2353020997315256,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.39648, 37.793664],\n        [-122.397611, 37.79352],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"51-59\": {\n    \"distance\": 3.608109191423399,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.41597, 37.780627],\n        [-122.416859, 37.780507],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"51-60\": {\n    \"distance\": 2.6363799251268145,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399165, 37.801123],\n        [-122.399792, 37.801819],\n        [-122.400448, 37.802547],\n        [-122.400903, 37.803058],\n        [-122.401236, 37.80342],\n        [-122.401794, 37.804076],\n        [-122.401904, 37.804165],\n        [-122.40207, 37.804321],\n        [-122.402155, 37.804399],\n        [-122.402206, 37.804441],\n        [-122.402723, 37.804821],\n        [-122.403174, 37.80514],\n        [-122.403268, 37.805142],\n        [-122.403356, 37.805116],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"51-63\": {\n    \"distance\": 1.0930795905373805,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391895, 37.789356],\n        [-122.392739, 37.788691],\n        [-122.393209, 37.788323],\n        [-122.393333, 37.788225],\n        [-122.393616, 37.788003],\n        [-122.393758, 37.788167],\n        [-122.394094, 37.788442],\n        [-122.394207, 37.788531],\n        [-122.394467, 37.788691],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"51-61\": {\n    \"distance\": 1.5012801254906674,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388309, 37.783373],\n        [-122.388376, 37.782545],\n        [-122.388424, 37.781908],\n        [-122.388431, 37.781791],\n        [-122.388464, 37.781351],\n        [-122.388485, 37.781222],\n        [-122.388522, 37.781102],\n        [-122.388573, 37.780974],\n        [-122.388646, 37.780845],\n        [-122.388733, 37.780723],\n        [-122.388854, 37.780588],\n        [-122.388991, 37.780472],\n        [-122.389683, 37.779916],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"51-62\": {\n    \"distance\": 1.2629509272046098,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.390971, 37.787643],\n        [-122.391407, 37.787297],\n        [-122.39207, 37.786773],\n        [-122.392949, 37.786077],\n        [-122.393426, 37.7857],\n        [-122.394038, 37.785216],\n        [-122.394414, 37.784922],\n        [-122.394809, 37.784606],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"51-64\": {\n    \"distance\": 1.38611040791616,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"51-65\": {\n    \"distance\": 3.016476643379671,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"51-67\": {\n    \"distance\": 3.5219148223050842,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"51-66\": {\n    \"distance\": 3.832123699508958,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.395023, 37.791767],\n        [-122.395815, 37.791151],\n        [-122.396238, 37.790817],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402156, 37.786195],\n        [-122.402493, 37.785928],\n        [-122.402608, 37.785836],\n        [-122.402768, 37.785709],\n        [-122.403264, 37.785321],\n        [-122.403515, 37.785123],\n        [-122.404156, 37.784618],\n        [-122.404256, 37.784489],\n        [-122.404868, 37.783999],\n        [-122.405437, 37.783556],\n        [-122.406041, 37.783085],\n        [-122.406495, 37.782729],\n        [-122.407177, 37.782192],\n        [-122.40727, 37.782119],\n        [-122.408721, 37.780977],\n        [-122.410944, 37.779218],\n        [-122.412205, 37.77822],\n        [-122.412419, 37.77805],\n        [-122.413171, 37.777454],\n        [-122.414119, 37.776705],\n        [-122.414716, 37.776233],\n        [-122.415145, 37.775891],\n        [-122.415508, 37.775602],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"51-68\": {\n    \"distance\": 1.4386465314083063,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391895, 37.789356],\n        [-122.392739, 37.788691],\n        [-122.393209, 37.788323],\n        [-122.393333, 37.788225],\n        [-122.393616, 37.788003],\n        [-122.393758, 37.788167],\n        [-122.394094, 37.788442],\n        [-122.394207, 37.788531],\n        [-122.394467, 37.788691],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"51-69\": {\n    \"distance\": 2.18530795193381,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"51-70\": {\n    \"distance\": 2.158455431950969,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390033, 37.790645],\n        [-122.389257, 37.790028],\n        [-122.388824, 37.789684],\n        [-122.388714, 37.789582],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"51-71\": {\n    \"distance\": 2.3188718449402437,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"51-72\": {\n    \"distance\": 2.950597931653592,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"51-73\": {\n    \"distance\": 2.338129943322419,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.398168, 37.796167],\n        [-122.398587, 37.796104],\n        [-122.400492, 37.795867],\n        [-122.40111, 37.795793],\n        [-122.401674, 37.795719],\n        [-122.40238, 37.795641],\n        [-122.402741, 37.795597],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.404507, 37.796369],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"51-74\": {\n    \"distance\": 1.0727464633978685,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.394077, 37.792542],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"51-75\": {\n    \"distance\": 1.2282270434813598,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"51-76\": {\n    \"distance\": 1.9902582740883845,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"51-77\": {\n    \"distance\": 1.469726603378822,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"51-82\": {\n    \"distance\": 1.8740372709041326,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"53-54\": {\n    \"distance\": 2.7241086186526244,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394077, 37.792542],\n        [-122.393228, 37.791868],\n        [-122.393119, 37.791781],\n        [-122.392525, 37.79131],\n        [-122.391972, 37.79087],\n        [-122.390979, 37.790082],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"53-55\": {\n    \"distance\": 1.7873074905199713,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"53-56\": {\n    \"distance\": 1.3943593181790932,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"53-57\": {\n    \"distance\": 0.3919612492920002,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"53-58\": {\n    \"distance\": 1.2601310671907893,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"53-59\": {\n    \"distance\": 1.2124403533804706,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.41597, 37.780627],\n        [-122.416859, 37.780507],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"53-60\": {\n    \"distance\": 3.2040998292748335,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399165, 37.801123],\n        [-122.399792, 37.801819],\n        [-122.400448, 37.802547],\n        [-122.400903, 37.803058],\n        [-122.401236, 37.80342],\n        [-122.401794, 37.804076],\n        [-122.401904, 37.804165],\n        [-122.40207, 37.804321],\n        [-122.402155, 37.804399],\n        [-122.402206, 37.804441],\n        [-122.402723, 37.804821],\n        [-122.403174, 37.80514],\n        [-122.403268, 37.805142],\n        [-122.403356, 37.805116],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"53-61\": {\n    \"distance\": 2.2413872468875247,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"53-62\": {\n    \"distance\": 1.4963093407889858,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"53-63\": {\n    \"distance\": 1.7850173448833353,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"53-64\": {\n    \"distance\": 1.9531327464277204,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"53-65\": {\n    \"distance\": 2.0654131161035236,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"53-66\": {\n    \"distance\": 1.9724474370325915,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416945, 37.777652],\n        [-122.417475, 37.777584],\n        [-122.417586, 37.777568],\n        [-122.418049, 37.777505],\n        [-122.417916, 37.776859],\n        [-122.417889, 37.776816],\n        [-122.417839, 37.77677],\n        [-122.417784, 37.776729],\n        [-122.417677, 37.776665],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.416447, 37.775699],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"53-67\": {\n    \"distance\": 1.1262459842621564,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"53-68\": {\n    \"distance\": 1.4129499591628205,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.399975, 37.787011],\n        [-122.399502, 37.786634],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"53-69\": {\n    \"distance\": 1.5396736207213089,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"53-70\": {\n    \"distance\": 1.5665263368745004,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"53-71\": {\n    \"distance\": 1.0649262253566787,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.408802, 37.78347],\n        [-122.408849, 37.783458],\n        [-122.409144, 37.78342],\n        [-122.410765, 37.783214],\n        [-122.410953, 37.784148],\n        [-122.41114, 37.785075],\n        [-122.411334, 37.78601],\n        [-122.411516, 37.78694],\n        [-122.411572, 37.78722],\n        [-122.411642, 37.787567],\n        [-122.411699, 37.787873],\n        [-122.410071, 37.78808],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"53-72\": {\n    \"distance\": 0.5549290936106641,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"53-73\": {\n    \"distance\": 2.6854767286998142,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"53-74\": {\n    \"distance\": 1.7281634377120587,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"53-75\": {\n    \"distance\": 1.1674451777691595,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"53-76\": {\n    \"distance\": 0.4054128940174343,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"53-77\": {\n    \"distance\": 0.9259449167511866,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"53-82\": {\n    \"distance\": 2.4417571750521523,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"54-55\": {\n    \"distance\": 0.9463650321672957,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.390985, 37.787632],\n        [-122.391407, 37.787297],\n        [-122.39207, 37.786773],\n        [-122.392994, 37.787515],\n        [-122.393616, 37.788003],\n        [-122.393758, 37.788167],\n        [-122.394094, 37.788442],\n        [-122.394207, 37.788531],\n        [-122.394467, 37.788691],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"54-56\": {\n    \"distance\": 1.3776424935503895,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.39648, 37.793664],\n        [-122.397611, 37.79352],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"54-57\": {\n    \"distance\": 2.1217079072663028,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.390985, 37.787632],\n        [-122.391407, 37.787297],\n        [-122.39207, 37.786773],\n        [-122.392949, 37.786077],\n        [-122.393426, 37.7857],\n        [-122.394038, 37.785216],\n        [-122.394414, 37.784922],\n        [-122.394809, 37.784606],\n        [-122.395178, 37.784312],\n        [-122.395714, 37.78389],\n        [-122.396301, 37.783425],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"54-58\": {\n    \"distance\": 3.7981402990525814,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"54-59\": {\n    \"distance\": 3.750449585242263,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.41597, 37.780627],\n        [-122.416859, 37.780507],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"54-60\": {\n    \"distance\": 2.5580604401098883,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.387737, 37.78708],\n        [-122.387728, 37.787179],\n        [-122.387716, 37.787311],\n        [-122.38771, 37.787469],\n        [-122.387712, 37.787615],\n        [-122.387722, 37.787775],\n        [-122.387741, 37.787933],\n        [-122.387769, 37.788101],\n        [-122.387807, 37.788262],\n        [-122.38796, 37.788838],\n        [-122.38801, 37.788993],\n        [-122.388079, 37.789155],\n        [-122.388158, 37.789301],\n        [-122.388231, 37.789419],\n        [-122.388321, 37.789534],\n        [-122.388411, 37.78964],\n        [-122.388512, 37.789741],\n        [-122.388623, 37.789839],\n        [-122.389433, 37.790495],\n        [-122.389827, 37.790813],\n        [-122.389934, 37.790912],\n        [-122.39002, 37.791001],\n        [-122.390133, 37.791127],\n        [-122.390237, 37.791261],\n        [-122.390326, 37.791396],\n        [-122.39041, 37.791547],\n        [-122.390482, 37.791701],\n        [-122.390594, 37.791942],\n        [-122.390661, 37.792078],\n        [-122.390735, 37.79221],\n        [-122.390811, 37.792323],\n        [-122.390901, 37.792437],\n        [-122.390976, 37.792533],\n        [-122.391053, 37.792627],\n        [-122.391192, 37.792766],\n        [-122.391994, 37.793441],\n        [-122.39218, 37.793603],\n        [-122.392341, 37.793754],\n        [-122.392443, 37.793844],\n        [-122.392777, 37.794156],\n        [-122.393072, 37.79443],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399165, 37.801123],\n        [-122.399792, 37.801819],\n        [-122.400448, 37.802547],\n        [-122.400903, 37.803058],\n        [-122.401236, 37.80342],\n        [-122.401794, 37.804076],\n        [-122.401904, 37.804165],\n        [-122.40207, 37.804321],\n        [-122.402155, 37.804399],\n        [-122.402206, 37.804441],\n        [-122.402723, 37.804821],\n        [-122.403174, 37.80514],\n        [-122.403268, 37.805142],\n        [-122.403356, 37.805116],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"54-61\": {\n    \"distance\": 0.9292339411335342,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388309, 37.783373],\n        [-122.388376, 37.782545],\n        [-122.388424, 37.781908],\n        [-122.388431, 37.781791],\n        [-122.388464, 37.781351],\n        [-122.388485, 37.781222],\n        [-122.388522, 37.781102],\n        [-122.388573, 37.780974],\n        [-122.388646, 37.780845],\n        [-122.388733, 37.780723],\n        [-122.388854, 37.780588],\n        [-122.388991, 37.780472],\n        [-122.389683, 37.779916],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"54-62\": {\n    \"distance\": 1.0187340893580332,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.390971, 37.787643],\n        [-122.391407, 37.787297],\n        [-122.39207, 37.786773],\n        [-122.392949, 37.786077],\n        [-122.393426, 37.7857],\n        [-122.394038, 37.785216],\n        [-122.394414, 37.784922],\n        [-122.394809, 37.784606],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"54-63\": {\n    \"distance\": 1.2347928594183892,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.390985, 37.787632],\n        [-122.391407, 37.787297],\n        [-122.39207, 37.786773],\n        [-122.392994, 37.787515],\n        [-122.393616, 37.788003],\n        [-122.393758, 37.788167],\n        [-122.394094, 37.788442],\n        [-122.394207, 37.788531],\n        [-122.394467, 37.788691],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"54-65\": {\n    \"distance\": 2.4444304590225365,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"54-66\": {\n    \"distance\": 4.012848752460823,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.390971, 37.787643],\n        [-122.391407, 37.787297],\n        [-122.39207, 37.786773],\n        [-122.392949, 37.786077],\n        [-122.393426, 37.7857],\n        [-122.394038, 37.785216],\n        [-122.394414, 37.784922],\n        [-122.394809, 37.784606],\n        [-122.395178, 37.784312],\n        [-122.395714, 37.78389],\n        [-122.396301, 37.783425],\n        [-122.3974, 37.782556],\n        [-122.398365, 37.781794],\n        [-122.399635, 37.780791],\n        [-122.399619, 37.780658],\n        [-122.39963, 37.78056],\n        [-122.399649, 37.780466],\n        [-122.39968, 37.780359],\n        [-122.399726, 37.780249],\n        [-122.399786, 37.78014],\n        [-122.399869, 37.780029],\n        [-122.399974, 37.779903],\n        [-122.400086, 37.779781],\n        [-122.400219, 37.779645],\n        [-122.400369, 37.7795],\n        [-122.400526, 37.779359],\n        [-122.400991, 37.77897],\n        [-122.401106, 37.778873],\n        [-122.40129, 37.778716],\n        [-122.401954, 37.778094],\n        [-122.402207, 37.777903],\n        [-122.402476, 37.777712],\n        [-122.402737, 37.777532],\n        [-122.402994, 37.777365],\n        [-122.403258, 37.777202],\n        [-122.405095, 37.776113],\n        [-122.405315, 37.776008],\n        [-122.405467, 37.775927],\n        [-122.405602, 37.775839],\n        [-122.405758, 37.775723],\n        [-122.405907, 37.775601],\n        [-122.406057, 37.775469],\n        [-122.406219, 37.775314],\n        [-122.406378, 37.775151],\n        [-122.406518, 37.774999],\n        [-122.406654, 37.774836],\n        [-122.406787, 37.774665],\n        [-122.407086, 37.774261],\n        [-122.407156, 37.774174],\n        [-122.407231, 37.774093],\n        [-122.407311, 37.774021],\n        [-122.407407, 37.773944],\n        [-122.407502, 37.773872],\n        [-122.407609, 37.773817],\n        [-122.40771, 37.773783],\n        [-122.407822, 37.773761],\n        [-122.408286, 37.773712],\n        [-122.408445, 37.773688],\n        [-122.408666, 37.773656],\n        [-122.408922, 37.773454],\n        [-122.409693, 37.772845],\n        [-122.410083, 37.772537],\n        [-122.410692, 37.773024],\n        [-122.411074, 37.77333],\n        [-122.411627, 37.773773],\n        [-122.412165, 37.774203],\n        [-122.412622, 37.774568],\n        [-122.413157, 37.774996],\n        [-122.413714, 37.775439],\n        [-122.414171, 37.775802],\n        [-122.414716, 37.776233],\n        [-122.415145, 37.775891],\n        [-122.415508, 37.775602],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"54-64\": {\n    \"distance\": 0.8140642235590267,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"54-67\": {\n    \"distance\": 3.6642552161239483,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"54-68\": {\n    \"distance\": 1.5794474862801415,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.390985, 37.787632],\n        [-122.391407, 37.787297],\n        [-122.39207, 37.786773],\n        [-122.392949, 37.786077],\n        [-122.393426, 37.7857],\n        [-122.394038, 37.785216],\n        [-122.394414, 37.784922],\n        [-122.394809, 37.784606],\n        [-122.395178, 37.784312],\n        [-122.395714, 37.78389],\n        [-122.396301, 37.783425],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"54-69\": {\n    \"distance\": 1.6132617675766756,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"54-70\": {\n    \"distance\": 1.5864092475938343,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388043, 37.786995],\n        [-122.388177, 37.785055],\n        [-122.388186, 37.784917],\n        [-122.388198, 37.784748],\n        [-122.388318, 37.784753],\n        [-122.388408, 37.784743],\n        [-122.388483, 37.784703],\n        [-122.389855, 37.783619],\n        [-122.39131, 37.782469],\n        [-122.391673, 37.782182],\n        [-122.391988, 37.781933],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"54-71\": {\n    \"distance\": 2.461212238759108,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"54-74\": {\n    \"distance\": 1.2150868572167324,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.394077, 37.792542],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"54-72\": {\n    \"distance\": 3.0929383254724563,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"54-73\": {\n    \"distance\": 2.5513892253491974,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.387737, 37.78708],\n        [-122.387728, 37.787179],\n        [-122.387716, 37.787311],\n        [-122.38771, 37.787469],\n        [-122.387712, 37.787615],\n        [-122.387722, 37.787775],\n        [-122.387741, 37.787933],\n        [-122.387769, 37.788101],\n        [-122.387807, 37.788262],\n        [-122.38796, 37.788838],\n        [-122.38801, 37.788993],\n        [-122.388079, 37.789155],\n        [-122.388158, 37.789301],\n        [-122.388231, 37.789419],\n        [-122.388321, 37.789534],\n        [-122.388411, 37.78964],\n        [-122.388512, 37.789741],\n        [-122.388623, 37.789839],\n        [-122.389433, 37.790495],\n        [-122.389827, 37.790813],\n        [-122.389934, 37.790912],\n        [-122.39002, 37.791001],\n        [-122.390133, 37.791127],\n        [-122.390237, 37.791261],\n        [-122.390326, 37.791396],\n        [-122.39041, 37.791547],\n        [-122.390482, 37.791701],\n        [-122.390594, 37.791942],\n        [-122.390661, 37.792078],\n        [-122.390735, 37.79221],\n        [-122.390811, 37.792323],\n        [-122.390901, 37.792437],\n        [-122.390976, 37.792533],\n        [-122.391053, 37.792627],\n        [-122.391192, 37.792766],\n        [-122.391994, 37.793441],\n        [-122.39218, 37.793603],\n        [-122.392341, 37.793754],\n        [-122.392443, 37.793844],\n        [-122.392777, 37.794156],\n        [-122.393072, 37.79443],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.398168, 37.796167],\n        [-122.398587, 37.796104],\n        [-122.400492, 37.795867],\n        [-122.40111, 37.795793],\n        [-122.401674, 37.795719],\n        [-122.40238, 37.795641],\n        [-122.402741, 37.795597],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.404507, 37.796369],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"54-75\": {\n    \"distance\": 1.370567437300224,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"54-76\": {\n    \"distance\": 2.132598667907249,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"54-77\": {\n    \"distance\": 1.6120669971976862,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"54-82\": {\n    \"distance\": 1.9814405441405814,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388036, 37.787094],\n        [-122.387737, 37.78708],\n        [-122.387728, 37.787179],\n        [-122.387716, 37.787311],\n        [-122.38771, 37.787469],\n        [-122.387712, 37.787615],\n        [-122.387722, 37.787775],\n        [-122.387741, 37.787933],\n        [-122.387769, 37.788101],\n        [-122.387807, 37.788262],\n        [-122.38796, 37.788838],\n        [-122.38801, 37.788993],\n        [-122.388079, 37.789155],\n        [-122.388158, 37.789301],\n        [-122.388231, 37.789419],\n        [-122.388321, 37.789534],\n        [-122.388411, 37.78964],\n        [-122.388512, 37.789741],\n        [-122.388623, 37.789839],\n        [-122.389433, 37.790495],\n        [-122.389827, 37.790813],\n        [-122.389934, 37.790912],\n        [-122.39002, 37.791001],\n        [-122.390133, 37.791127],\n        [-122.390237, 37.791261],\n        [-122.390326, 37.791396],\n        [-122.39041, 37.791547],\n        [-122.390482, 37.791701],\n        [-122.390594, 37.791942],\n        [-122.390661, 37.792078],\n        [-122.390735, 37.79221],\n        [-122.390811, 37.792323],\n        [-122.390901, 37.792437],\n        [-122.390976, 37.792533],\n        [-122.391053, 37.792627],\n        [-122.391192, 37.792766],\n        [-122.392024, 37.793466],\n        [-122.39218, 37.793603],\n        [-122.392341, 37.793754],\n        [-122.392443, 37.793844],\n        [-122.392777, 37.794156],\n        [-122.393072, 37.79443],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397792, 37.799184],\n        [-122.397882, 37.799145],\n        [-122.397961, 37.799103],\n        [-122.398026, 37.799069],\n        [-122.398097, 37.799039],\n        [-122.398222, 37.798989],\n        [-122.398334, 37.798957],\n        [-122.398615, 37.798906],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"55-57\": {\n    \"distance\": 1.3222029239548292,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"55-56\": {\n    \"distance\": 0.6117877798535523,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.395361, 37.789402],\n        [-122.395702, 37.789671],\n        [-122.396038, 37.789941],\n        [-122.39617, 37.790047],\n        [-122.396297, 37.790148],\n        [-122.396688, 37.790461],\n        [-122.397159, 37.790837],\n        [-122.397244, 37.790905],\n        [-122.397548, 37.791147],\n        [-122.398234, 37.791694],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"55-58\": {\n    \"distance\": 3.0048542360522696,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.395361, 37.789402],\n        [-122.395702, 37.789671],\n        [-122.396038, 37.789941],\n        [-122.39617, 37.790047],\n        [-122.396297, 37.790148],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"55-59\": {\n    \"distance\": 2.957163522241951,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.395361, 37.789402],\n        [-122.395702, 37.789671],\n        [-122.396038, 37.789941],\n        [-122.39617, 37.790047],\n        [-122.396297, 37.790148],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.41597, 37.780627],\n        [-122.416859, 37.780507],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"55-60\": {\n    \"distance\": 2.2661450024682197,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394277, 37.78992],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399165, 37.801123],\n        [-122.399792, 37.801819],\n        [-122.400448, 37.802547],\n        [-122.400903, 37.803058],\n        [-122.401236, 37.80342],\n        [-122.401794, 37.804076],\n        [-122.401904, 37.804165],\n        [-122.40207, 37.804321],\n        [-122.402155, 37.804399],\n        [-122.402206, 37.804441],\n        [-122.402723, 37.804821],\n        [-122.403174, 37.80514],\n        [-122.403268, 37.805142],\n        [-122.403356, 37.805116],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"55-61\": {\n    \"distance\": 1.4457426154148976,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"55-62\": {\n    \"distance\": 0.7006645894945523,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"55-63\": {\n    \"distance\": 0.43437556209774236,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"55-64\": {\n    \"distance\": 1.157488114955093,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"55-65\": {\n    \"distance\": 2.932379447958204,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"55-66\": {\n    \"distance\": 3.172397802687818,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.395361, 37.789402],\n        [-122.395702, 37.789671],\n        [-122.396038, 37.789941],\n        [-122.39617, 37.790047],\n        [-122.396297, 37.790148],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402156, 37.786195],\n        [-122.402493, 37.785928],\n        [-122.402608, 37.785836],\n        [-122.402768, 37.785709],\n        [-122.403264, 37.785321],\n        [-122.403515, 37.785123],\n        [-122.404156, 37.784618],\n        [-122.404256, 37.784489],\n        [-122.404868, 37.783999],\n        [-122.405437, 37.783556],\n        [-122.406041, 37.783085],\n        [-122.406495, 37.782729],\n        [-122.407177, 37.782192],\n        [-122.40727, 37.782119],\n        [-122.408721, 37.780977],\n        [-122.410944, 37.779218],\n        [-122.412205, 37.77822],\n        [-122.412419, 37.77805],\n        [-122.413171, 37.777454],\n        [-122.414119, 37.776705],\n        [-122.414716, 37.776233],\n        [-122.415145, 37.775891],\n        [-122.415508, 37.775602],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"55-68\": {\n    \"distance\": 0.779942502968668,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"55-67\": {\n    \"distance\": 2.8709691531236365,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.395361, 37.789402],\n        [-122.395702, 37.789671],\n        [-122.396038, 37.789941],\n        [-122.39617, 37.790047],\n        [-122.396297, 37.790148],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"55-69\": {\n    \"distance\": 2.101210756512343,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"55-70\": {\n    \"distance\": 2.074358236529502,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"55-71\": {\n    \"distance\": 1.7111373794095277,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.395361, 37.789402],\n        [-122.395702, 37.789671],\n        [-122.396038, 37.789941],\n        [-122.39617, 37.790047],\n        [-122.396297, 37.790148],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"55-72\": {\n    \"distance\": 2.2996522624721445,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.395361, 37.789402],\n        [-122.395702, 37.789671],\n        [-122.396038, 37.789941],\n        [-122.39617, 37.790047],\n        [-122.396297, 37.790148],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"55-74\": {\n    \"distance\": 0.7025115407392745,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394277, 37.78992],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.394077, 37.792542],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"55-73\": {\n    \"distance\": 1.8996494747800767,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.395361, 37.789402],\n        [-122.395702, 37.789671],\n        [-122.396038, 37.789941],\n        [-122.39617, 37.790047],\n        [-122.396297, 37.790148],\n        [-122.396688, 37.790461],\n        [-122.397159, 37.790837],\n        [-122.397244, 37.790905],\n        [-122.397548, 37.791147],\n        [-122.398234, 37.791694],\n        [-122.398297, 37.791734],\n        [-122.398375, 37.791778],\n        [-122.398423, 37.79181],\n        [-122.398482, 37.79189],\n        [-122.398588, 37.792408],\n        [-122.399763, 37.792258],\n        [-122.400933, 37.792108],\n        [-122.401638, 37.792018],\n        [-122.401769, 37.792001],\n        [-122.401885, 37.791986],\n        [-122.402196, 37.791946],\n        [-122.402571, 37.791899],\n        [-122.40388, 37.791733],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"55-75\": {\n    \"distance\": 0.8323941884031351,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.395361, 37.789402],\n        [-122.395702, 37.789671],\n        [-122.396038, 37.789941],\n        [-122.39617, 37.790047],\n        [-122.396297, 37.790148],\n        [-122.396688, 37.790461],\n        [-122.397159, 37.790837],\n        [-122.397244, 37.790905],\n        [-122.397548, 37.791147],\n        [-122.398234, 37.791694],\n        [-122.398297, 37.791734],\n        [-122.398375, 37.791778],\n        [-122.398423, 37.79181],\n        [-122.398482, 37.79189],\n        [-122.398588, 37.792408],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"55-77\": {\n    \"distance\": 0.9142890715265019,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.395361, 37.789402],\n        [-122.395702, 37.789671],\n        [-122.396038, 37.789941],\n        [-122.39617, 37.790047],\n        [-122.396297, 37.790148],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"55-76\": {\n    \"distance\": 1.3393126049069373,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.395361, 37.789402],\n        [-122.395702, 37.789671],\n        [-122.396038, 37.789941],\n        [-122.39617, 37.790047],\n        [-122.396297, 37.790148],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"55-82\": {\n    \"distance\": 1.5038023482455387,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394277, 37.78992],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"56-57\": {\n    \"distance\": 1.787927358098714,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.396238, 37.790817],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402156, 37.786195],\n        [-122.402493, 37.785928],\n        [-122.402608, 37.785836],\n        [-122.402768, 37.785709],\n        [-122.403264, 37.785321],\n        [-122.403515, 37.785123],\n        [-122.404156, 37.784618],\n        [-122.404256, 37.784489],\n        [-122.404868, 37.783999],\n        [-122.405437, 37.783556],\n        [-122.406041, 37.783085],\n        [-122.406579, 37.783514],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"56-58\": {\n    \"distance\": 3.0132435235766843,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.396238, 37.790817],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"56-59\": {\n    \"distance\": 2.965552809766366,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.396238, 37.790817],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.41597, 37.780627],\n        [-122.416859, 37.780507],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"56-60\": {\n    \"distance\": 2.2030857980217755,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395023, 37.791767],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399165, 37.801123],\n        [-122.399792, 37.801819],\n        [-122.400448, 37.802547],\n        [-122.400903, 37.803058],\n        [-122.401236, 37.80342],\n        [-122.401794, 37.804076],\n        [-122.401904, 37.804165],\n        [-122.40207, 37.804321],\n        [-122.402155, 37.804399],\n        [-122.402206, 37.804441],\n        [-122.402723, 37.804821],\n        [-122.403174, 37.80514],\n        [-122.403268, 37.805142],\n        [-122.403356, 37.805116],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"56-61\": {\n    \"distance\": 1.8386919121899326,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"56-62\": {\n    \"distance\": 1.0936138862695874,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"56-63\": {\n    \"distance\": 0.8273248588727774,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"56-64\": {\n    \"distance\": 1.550437411730128,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"56-65\": {\n    \"distance\": 3.3253287447332394,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"56-66\": {\n    \"distance\": 3.1807870902122333,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.396238, 37.790817],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402156, 37.786195],\n        [-122.402493, 37.785928],\n        [-122.402608, 37.785836],\n        [-122.402768, 37.785709],\n        [-122.403264, 37.785321],\n        [-122.403515, 37.785123],\n        [-122.404156, 37.784618],\n        [-122.404256, 37.784489],\n        [-122.404868, 37.783999],\n        [-122.405437, 37.783556],\n        [-122.406041, 37.783085],\n        [-122.406495, 37.782729],\n        [-122.407177, 37.782192],\n        [-122.40727, 37.782119],\n        [-122.408721, 37.780977],\n        [-122.410944, 37.779218],\n        [-122.412205, 37.77822],\n        [-122.412419, 37.77805],\n        [-122.413171, 37.777454],\n        [-122.414119, 37.776705],\n        [-122.414716, 37.776233],\n        [-122.415145, 37.775891],\n        [-122.415508, 37.775602],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"56-67\": {\n    \"distance\": 2.8793584406480512,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.396238, 37.790817],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"56-68\": {\n    \"distance\": 1.1728917997437032,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"56-69\": {\n    \"distance\": 2.4941600532873784,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"56-70\": {\n    \"distance\": 2.4673075333045373,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"56-71\": {\n    \"distance\": 1.7195266669339422,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.396238, 37.790817],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"56-72\": {\n    \"distance\": 2.308041549996559,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.396238, 37.790817],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"56-73\": {\n    \"distance\": 1.9048358162173806,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395023, 37.791767],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.398168, 37.796167],\n        [-122.398587, 37.796104],\n        [-122.400492, 37.795867],\n        [-122.40111, 37.795793],\n        [-122.401674, 37.795719],\n        [-122.40238, 37.795641],\n        [-122.402741, 37.795597],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.404507, 37.796369],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"56-74\": {\n    \"distance\": 0.6394523362928304,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395023, 37.791767],\n        [-122.394951, 37.791852],\n        [-122.394077, 37.792542],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"56-75\": {\n    \"distance\": 0.7949329163763215,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395023, 37.791767],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"56-76\": {\n    \"distance\": 1.3477018924313517,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.396238, 37.790817],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"56-77\": {\n    \"distance\": 0.9226783590509167,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.396238, 37.790817],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"56-82\": {\n    \"distance\": 1.4407431437990945,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395023, 37.791767],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"57-58\": {\n    \"distance\": 1.6527347796520484,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406731, 37.781691],\n        [-122.40727, 37.782119],\n        [-122.408721, 37.780977],\n        [-122.410944, 37.779218],\n        [-122.411484, 37.779648],\n        [-122.41194, 37.780011],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"57-59\": {\n    \"distance\": 1.6050440658417298,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406731, 37.781691],\n        [-122.40727, 37.782119],\n        [-122.408721, 37.780977],\n        [-122.410944, 37.779218],\n        [-122.411484, 37.779648],\n        [-122.41194, 37.780011],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.41597, 37.780627],\n        [-122.416859, 37.780507],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"57-61\": {\n    \"distance\": 1.8496551230303542,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.398087, 37.779565],\n        [-122.39755, 37.779134],\n        [-122.397068, 37.778752],\n        [-122.396953, 37.77866],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"57-60\": {\n    \"distance\": 3.5331995281196966,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399165, 37.801123],\n        [-122.399792, 37.801819],\n        [-122.400448, 37.802547],\n        [-122.400903, 37.803058],\n        [-122.401236, 37.80342],\n        [-122.401794, 37.804076],\n        [-122.401904, 37.804165],\n        [-122.40207, 37.804321],\n        [-122.402155, 37.804399],\n        [-122.402206, 37.804441],\n        [-122.402723, 37.804821],\n        [-122.403174, 37.80514],\n        [-122.403268, 37.805142],\n        [-122.403356, 37.805116],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"57-62\": {\n    \"distance\": 1.1032864331694945,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.401175, 37.782025],\n        [-122.401004, 37.782162],\n        [-122.4007, 37.7824],\n        [-122.400382, 37.782651],\n        [-122.399117, 37.78365],\n        [-122.398943, 37.783787],\n        [-122.398748, 37.783941],\n        [-122.397841, 37.784657],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"57-63\": {\n    \"distance\": 1.7168621377815139,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.406041, 37.783085],\n        [-122.405437, 37.783556],\n        [-122.404868, 37.783999],\n        [-122.404256, 37.784489],\n        [-122.404091, 37.784559],\n        [-122.403448, 37.785072],\n        [-122.403196, 37.785269],\n        [-122.402704, 37.785659],\n        [-122.402094, 37.786142],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"57-64\": {\n    \"distance\": 1.560109958630035,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.401175, 37.782025],\n        [-122.401004, 37.782162],\n        [-122.4007, 37.7824],\n        [-122.400382, 37.782651],\n        [-122.399117, 37.78365],\n        [-122.398943, 37.783787],\n        [-122.398748, 37.783941],\n        [-122.397841, 37.784657],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"57-65\": {\n    \"distance\": 1.6734531560470816,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"57-66\": {\n    \"distance\": 1.8511787130893873,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406731, 37.781691],\n        [-122.40727, 37.782119],\n        [-122.408721, 37.780977],\n        [-122.410944, 37.779218],\n        [-122.412205, 37.77822],\n        [-122.412419, 37.77805],\n        [-122.413171, 37.777454],\n        [-122.414119, 37.776705],\n        [-122.414716, 37.776233],\n        [-122.415145, 37.775891],\n        [-122.415508, 37.775602],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"57-67\": {\n    \"distance\": 1.5188496967234155,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406731, 37.781691],\n        [-122.40727, 37.782119],\n        [-122.408721, 37.780977],\n        [-122.410944, 37.779218],\n        [-122.411484, 37.779648],\n        [-122.41194, 37.780011],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"57-68\": {\n    \"distance\": 1.0139257523353553,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.401175, 37.782025],\n        [-122.401004, 37.782162],\n        [-122.4007, 37.7824],\n        [-122.400382, 37.782651],\n        [-122.399117, 37.78365],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"57-69\": {\n    \"distance\": 1.1477136606648666,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"57-70\": {\n    \"distance\": 1.174566376818058,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"57-71\": {\n    \"distance\": 0.9436266435516089,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408207, 37.784092],\n        [-122.408459, 37.784306],\n        [-122.40851, 37.784397],\n        [-122.408525, 37.78446],\n        [-122.408538, 37.784536],\n        [-122.408678, 37.785392],\n        [-122.408697, 37.785481],\n        [-122.408723, 37.785545],\n        [-122.408843, 37.785847],\n        [-122.408951, 37.786313],\n        [-122.408052, 37.786428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"57-72\": {\n    \"distance\": 0.9475328060719229,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406731, 37.781691],\n        [-122.40727, 37.782119],\n        [-122.408721, 37.780977],\n        [-122.410944, 37.779218],\n        [-122.411484, 37.779648],\n        [-122.41194, 37.780011],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"57-73\": {\n    \"distance\": 2.510220062009856,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408207, 37.784092],\n        [-122.408459, 37.784306],\n        [-122.40851, 37.784397],\n        [-122.408525, 37.78446],\n        [-122.408538, 37.784536],\n        [-122.408678, 37.785392],\n        [-122.408697, 37.785481],\n        [-122.408723, 37.785545],\n        [-122.408843, 37.785847],\n        [-122.408951, 37.786313],\n        [-122.408034, 37.786431],\n        [-122.406409, 37.786637],\n        [-122.405363, 37.786769],\n        [-122.404855, 37.786835],\n        [-122.404972, 37.787418],\n        [-122.405045, 37.787766],\n        [-122.405132, 37.788238],\n        [-122.405221, 37.788694],\n        [-122.404371, 37.788802],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"57-74\": {\n    \"distance\": 2.057263136556922,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"57-75\": {\n    \"distance\": 1.4965448766140228,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"57-77\": {\n    \"distance\": 1.2550446155960497,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"57-76\": {\n    \"distance\": 0.7345125928622978,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"57-82\": {\n    \"distance\": 2.784523636930739,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408207, 37.784092],\n        [-122.408459, 37.784306],\n        [-122.40851, 37.784397],\n        [-122.408525, 37.78446],\n        [-122.408538, 37.784536],\n        [-122.408678, 37.785392],\n        [-122.408697, 37.785481],\n        [-122.408723, 37.785545],\n        [-122.408843, 37.785847],\n        [-122.408951, 37.786313],\n        [-122.408034, 37.786431],\n        [-122.406409, 37.786637],\n        [-122.405363, 37.786769],\n        [-122.404855, 37.786835],\n        [-122.404972, 37.787418],\n        [-122.405045, 37.787766],\n        [-122.405132, 37.788238],\n        [-122.405221, 37.788694],\n        [-122.404371, 37.788802],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"58-59\": {\n    \"distance\": 0.3109687071831879,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418419, 37.779388],\n        [-122.418567, 37.780129],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"58-60\": {\n    \"distance\": 4.3400203528083265,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399165, 37.801123],\n        [-122.399792, 37.801819],\n        [-122.400448, 37.802547],\n        [-122.400903, 37.803058],\n        [-122.401236, 37.80342],\n        [-122.401794, 37.804076],\n        [-122.401904, 37.804165],\n        [-122.40207, 37.804321],\n        [-122.402155, 37.804399],\n        [-122.402206, 37.804441],\n        [-122.402723, 37.804821],\n        [-122.403174, 37.80514],\n        [-122.403268, 37.805142],\n        [-122.403356, 37.805116],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"58-61\": {\n    \"distance\": 3.377307770421015,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"58-62\": {\n    \"distance\": 2.632229864322477,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"58-63\": {\n    \"distance\": 2.9209378684168263,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"58-64\": {\n    \"distance\": 3.0890532699612105,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"58-65\": {\n    \"distance\": 1.9356050750063083,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.414157, 37.778244],\n        [-122.413171, 37.777454],\n        [-122.412625, 37.777019],\n        [-122.412166, 37.776654],\n        [-122.411614, 37.776214],\n        [-122.411078, 37.775786],\n        [-122.410619, 37.775421],\n        [-122.410082, 37.774993],\n        [-122.409524, 37.774548],\n        [-122.409093, 37.774203],\n        [-122.408535, 37.77376],\n        [-122.408445, 37.773688],\n        [-122.407773, 37.773152],\n        [-122.407267, 37.77272],\n        [-122.407044, 37.772488],\n        [-122.406939, 37.772376],\n        [-122.406797, 37.772255],\n        [-122.406473, 37.771951],\n        [-122.405964, 37.771631],\n        [-122.405569, 37.77135],\n        [-122.405451, 37.771303],\n        [-122.405357, 37.771232],\n        [-122.404957, 37.770906],\n        [-122.404749, 37.770735],\n        [-122.404014, 37.770133],\n        [-122.403939, 37.770055],\n        [-122.404048, 37.770007],\n        [-122.404085, 37.769951],\n        [-122.404078, 37.769861],\n        [-122.404031, 37.769808],\n        [-122.40396, 37.769777],\n        [-122.403881, 37.769773],\n        [-122.403774, 37.76982],\n        [-122.403733, 37.769886],\n        [-122.403758, 37.769991],\n        [-122.403857, 37.77005],\n        [-122.403807, 37.770119],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"58-66\": {\n    \"distance\": 0.9677278779801884,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.418139, 37.777971],\n        [-122.418049, 37.777505],\n        [-122.417916, 37.776859],\n        [-122.417889, 37.776816],\n        [-122.417839, 37.77677],\n        [-122.417784, 37.776729],\n        [-122.417677, 37.776665],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.416447, 37.775699],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"58-67\": {\n    \"distance\": 0.6670566923735765,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"58-68\": {\n    \"distance\": 2.5488704826963104,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.399975, 37.787011],\n        [-122.399502, 37.786634],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"58-69\": {\n    \"distance\": 2.6755941442547986,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"58-71\": {\n    \"distance\": 1.9625959748019586,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418419, 37.779388],\n        [-122.418567, 37.780129],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416982, 37.780604],\n        [-122.417147, 37.781446],\n        [-122.417337, 37.782379],\n        [-122.417527, 37.78331],\n        [-122.417622, 37.783777],\n        [-122.417715, 37.784234],\n        [-122.417812, 37.784709],\n        [-122.417907, 37.785176],\n        [-122.416261, 37.785382],\n        [-122.415916, 37.785426],\n        [-122.415675, 37.785457],\n        [-122.415024, 37.78554],\n        [-122.414619, 37.785591],\n        [-122.412979, 37.7858],\n        [-122.412147, 37.785909],\n        [-122.411334, 37.78601],\n        [-122.411516, 37.78694],\n        [-122.411572, 37.78722],\n        [-122.411642, 37.787567],\n        [-122.411699, 37.787873],\n        [-122.410071, 37.78808],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"58-70\": {\n    \"distance\": 2.70244686040799,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"58-72\": {\n    \"distance\": 0.5809938459789856,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"58-73\": {\n    \"distance\": 3.5289081638688926,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418419, 37.779388],\n        [-122.418567, 37.780129],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416982, 37.780604],\n        [-122.417147, 37.781446],\n        [-122.417337, 37.782379],\n        [-122.417527, 37.78331],\n        [-122.417622, 37.783777],\n        [-122.417715, 37.784234],\n        [-122.417812, 37.784709],\n        [-122.417907, 37.785176],\n        [-122.416261, 37.785382],\n        [-122.415916, 37.785426],\n        [-122.415675, 37.785457],\n        [-122.415024, 37.78554],\n        [-122.414619, 37.785591],\n        [-122.412979, 37.7858],\n        [-122.412147, 37.785909],\n        [-122.411334, 37.78601],\n        [-122.409848, 37.786199],\n        [-122.409701, 37.786218],\n        [-122.409335, 37.786264],\n        [-122.408951, 37.786313],\n        [-122.408068, 37.786425],\n        [-122.406409, 37.786637],\n        [-122.405363, 37.786769],\n        [-122.404855, 37.786835],\n        [-122.404972, 37.787418],\n        [-122.405045, 37.787766],\n        [-122.405132, 37.788238],\n        [-122.405221, 37.788694],\n        [-122.404371, 37.788802],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"58-74\": {\n    \"distance\": 2.8640839612455506,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"58-75\": {\n    \"distance\": 2.3033657013026505,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"58-76\": {\n    \"distance\": 1.5413334175509246,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"58-77\": {\n    \"distance\": 2.061865440284677,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"58-82\": {\n    \"distance\": 3.577677698585644,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"59-60\": {\n    \"distance\": 4.376904786473483,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399165, 37.801123],\n        [-122.399792, 37.801819],\n        [-122.400448, 37.802547],\n        [-122.400903, 37.803058],\n        [-122.401236, 37.80342],\n        [-122.401794, 37.804076],\n        [-122.401904, 37.804165],\n        [-122.40207, 37.804321],\n        [-122.402155, 37.804399],\n        [-122.402206, 37.804441],\n        [-122.402723, 37.804821],\n        [-122.403174, 37.80514],\n        [-122.403268, 37.805142],\n        [-122.403356, 37.805116],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"59-61\": {\n    \"distance\": 3.4141922040861727,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"59-62\": {\n    \"distance\": 2.6691142979876346,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"59-63\": {\n    \"distance\": 2.957822302081984,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"59-64\": {\n    \"distance\": 3.1259377036263682,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"59-65\": {\n    \"distance\": 2.2073846644795925,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.415167, 37.779959],\n        [-122.415133, 37.779795],\n        [-122.415102, 37.77964],\n        [-122.414964, 37.778942],\n        [-122.414902, 37.778846],\n        [-122.414757, 37.778725],\n        [-122.414157, 37.778244],\n        [-122.413171, 37.777454],\n        [-122.412625, 37.777019],\n        [-122.412166, 37.776654],\n        [-122.411614, 37.776214],\n        [-122.411078, 37.775786],\n        [-122.410619, 37.775421],\n        [-122.410082, 37.774993],\n        [-122.409524, 37.774548],\n        [-122.409093, 37.774203],\n        [-122.408535, 37.77376],\n        [-122.408445, 37.773688],\n        [-122.407773, 37.773152],\n        [-122.407267, 37.77272],\n        [-122.407044, 37.772488],\n        [-122.406939, 37.772376],\n        [-122.406797, 37.772255],\n        [-122.406473, 37.771951],\n        [-122.405964, 37.771631],\n        [-122.405569, 37.77135],\n        [-122.405451, 37.771303],\n        [-122.405357, 37.771232],\n        [-122.404957, 37.770906],\n        [-122.404749, 37.770735],\n        [-122.404014, 37.770133],\n        [-122.403939, 37.770055],\n        [-122.404048, 37.770007],\n        [-122.404085, 37.769951],\n        [-122.404078, 37.769861],\n        [-122.404031, 37.769808],\n        [-122.40396, 37.769777],\n        [-122.403881, 37.769773],\n        [-122.403774, 37.76982],\n        [-122.403733, 37.769886],\n        [-122.403758, 37.769991],\n        [-122.403857, 37.77005],\n        [-122.403807, 37.770119],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"59-66\": {\n    \"distance\": 1.6680101641975997,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.415167, 37.779959],\n        [-122.415133, 37.779795],\n        [-122.415102, 37.77964],\n        [-122.414964, 37.778942],\n        [-122.414902, 37.778846],\n        [-122.414757, 37.778725],\n        [-122.414157, 37.778244],\n        [-122.413171, 37.777454],\n        [-122.414119, 37.776705],\n        [-122.414716, 37.776233],\n        [-122.415145, 37.775891],\n        [-122.415508, 37.775602],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"59-67\": {\n    \"distance\": 0.9388362818468604,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.415167, 37.779959],\n        [-122.415133, 37.779795],\n        [-122.415102, 37.77964],\n        [-122.414964, 37.778942],\n        [-122.414902, 37.778846],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"59-68\": {\n    \"distance\": 2.585754916361468,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.399975, 37.787011],\n        [-122.399502, 37.786634],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"59-69\": {\n    \"distance\": 2.7124785779199563,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"59-70\": {\n    \"distance\": 2.7393312940731476,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"59-71\": {\n    \"distance\": 1.6536280649501807,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.417337, 37.782379],\n        [-122.417527, 37.78331],\n        [-122.417622, 37.783777],\n        [-122.417715, 37.784234],\n        [-122.417812, 37.784709],\n        [-122.417907, 37.785176],\n        [-122.416261, 37.785382],\n        [-122.415916, 37.785426],\n        [-122.415675, 37.785457],\n        [-122.415024, 37.78554],\n        [-122.414619, 37.785591],\n        [-122.412979, 37.7858],\n        [-122.412147, 37.785909],\n        [-122.411334, 37.78601],\n        [-122.411516, 37.78694],\n        [-122.411572, 37.78722],\n        [-122.411642, 37.787567],\n        [-122.411699, 37.787873],\n        [-122.410071, 37.78808],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"59-72\": {\n    \"distance\": 0.6869017894745546,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"59-73\": {\n    \"distance\": 3.2199402540171147,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.417337, 37.782379],\n        [-122.417527, 37.78331],\n        [-122.417622, 37.783777],\n        [-122.417715, 37.784234],\n        [-122.417812, 37.784709],\n        [-122.417907, 37.785176],\n        [-122.416261, 37.785382],\n        [-122.415916, 37.785426],\n        [-122.415675, 37.785457],\n        [-122.415024, 37.78554],\n        [-122.414619, 37.785591],\n        [-122.412979, 37.7858],\n        [-122.412147, 37.785909],\n        [-122.411334, 37.78601],\n        [-122.409848, 37.786199],\n        [-122.409701, 37.786218],\n        [-122.409335, 37.786264],\n        [-122.408951, 37.786313],\n        [-122.408068, 37.786425],\n        [-122.406409, 37.786637],\n        [-122.405363, 37.786769],\n        [-122.404855, 37.786835],\n        [-122.404972, 37.787418],\n        [-122.405045, 37.787766],\n        [-122.405132, 37.788238],\n        [-122.405221, 37.788694],\n        [-122.404371, 37.788802],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"59-74\": {\n    \"distance\": 2.9009683949107083,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"59-76\": {\n    \"distance\": 1.5782178512160823,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"59-75\": {\n    \"distance\": 2.340250134967808,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"59-77\": {\n    \"distance\": 2.098749873949835,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"59-82\": {\n    \"distance\": 3.494243828937998,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.417337, 37.782379],\n        [-122.417527, 37.78331],\n        [-122.417622, 37.783777],\n        [-122.417715, 37.784234],\n        [-122.417812, 37.784709],\n        [-122.417907, 37.785176],\n        [-122.416261, 37.785382],\n        [-122.415916, 37.785426],\n        [-122.415675, 37.785457],\n        [-122.415024, 37.78554],\n        [-122.414619, 37.785591],\n        [-122.412979, 37.7858],\n        [-122.412147, 37.785909],\n        [-122.411334, 37.78601],\n        [-122.409848, 37.786199],\n        [-122.409701, 37.786218],\n        [-122.409335, 37.786264],\n        [-122.408951, 37.786313],\n        [-122.408068, 37.786425],\n        [-122.406409, 37.786637],\n        [-122.405363, 37.786769],\n        [-122.404855, 37.786835],\n        [-122.404972, 37.787418],\n        [-122.405045, 37.787766],\n        [-122.405132, 37.788238],\n        [-122.405221, 37.788694],\n        [-122.404371, 37.788802],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"60-61\": {\n    \"distance\": 3.2683636300649432,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"60-62\": {\n    \"distance\": 2.523285604144599,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"60-63\": {\n    \"distance\": 2.2569965767477886,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"60-64\": {\n    \"distance\": 2.9801091296051387,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"60-65\": {\n    \"distance\": 5.075946471028847,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399608, 37.791203],\n        [-122.399557, 37.790909],\n        [-122.399541, 37.790817],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.401932, 37.782633],\n        [-122.401703, 37.782447],\n        [-122.401175, 37.782025],\n        [-122.400621, 37.781581],\n        [-122.400376, 37.781387],\n        [-122.400158, 37.781211],\n        [-122.399635, 37.780791],\n        [-122.399619, 37.780658],\n        [-122.39963, 37.78056],\n        [-122.399649, 37.780466],\n        [-122.39968, 37.780359],\n        [-122.399726, 37.780249],\n        [-122.399786, 37.78014],\n        [-122.399869, 37.780029],\n        [-122.399974, 37.779903],\n        [-122.400086, 37.779781],\n        [-122.400219, 37.779645],\n        [-122.400369, 37.7795],\n        [-122.400526, 37.779359],\n        [-122.400991, 37.77897],\n        [-122.401106, 37.778873],\n        [-122.40129, 37.778716],\n        [-122.401954, 37.778094],\n        [-122.402207, 37.777903],\n        [-122.402476, 37.777712],\n        [-122.402737, 37.777532],\n        [-122.402994, 37.777365],\n        [-122.403258, 37.777202],\n        [-122.405095, 37.776113],\n        [-122.405315, 37.776008],\n        [-122.405467, 37.775927],\n        [-122.405602, 37.775839],\n        [-122.405758, 37.775723],\n        [-122.405907, 37.775601],\n        [-122.406057, 37.775469],\n        [-122.406219, 37.775314],\n        [-122.406378, 37.775151],\n        [-122.406518, 37.774999],\n        [-122.406654, 37.774836],\n        [-122.406787, 37.774665],\n        [-122.407086, 37.774261],\n        [-122.407156, 37.774174],\n        [-122.407231, 37.774093],\n        [-122.407311, 37.774021],\n        [-122.407407, 37.773944],\n        [-122.407502, 37.773872],\n        [-122.407736, 37.77371],\n        [-122.407792, 37.77365],\n        [-122.407832, 37.773582],\n        [-122.407859, 37.773513],\n        [-122.407872, 37.773448],\n        [-122.407866, 37.773373],\n        [-122.407848, 37.773298],\n        [-122.407773, 37.773152],\n        [-122.407267, 37.77272],\n        [-122.407044, 37.772488],\n        [-122.406939, 37.772376],\n        [-122.406797, 37.772255],\n        [-122.406473, 37.771951],\n        [-122.405964, 37.771631],\n        [-122.405569, 37.77135],\n        [-122.405451, 37.771303],\n        [-122.405357, 37.771232],\n        [-122.404957, 37.770906],\n        [-122.404749, 37.770735],\n        [-122.404014, 37.770133],\n        [-122.403939, 37.770055],\n        [-122.404048, 37.770007],\n        [-122.404085, 37.769951],\n        [-122.404078, 37.769861],\n        [-122.404031, 37.769808],\n        [-122.40396, 37.769777],\n        [-122.403881, 37.769773],\n        [-122.403774, 37.76982],\n        [-122.403733, 37.769886],\n        [-122.403758, 37.769991],\n        [-122.403857, 37.77005],\n        [-122.403807, 37.770119],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"60-66\": {\n    \"distance\": 4.6946715526237215,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399608, 37.791203],\n        [-122.399557, 37.790909],\n        [-122.399541, 37.790817],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416945, 37.777652],\n        [-122.417475, 37.777584],\n        [-122.417586, 37.777568],\n        [-122.418049, 37.777505],\n        [-122.417916, 37.776859],\n        [-122.417889, 37.776816],\n        [-122.417839, 37.77677],\n        [-122.417784, 37.776729],\n        [-122.417677, 37.776665],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.416447, 37.775699],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"60-67\": {\n    \"distance\": 3.848470099853285,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399608, 37.791203],\n        [-122.399557, 37.790909],\n        [-122.399541, 37.790817],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"60-68\": {\n    \"distance\": 2.6883190549275047,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.40111, 37.795793],\n        [-122.401674, 37.795719],\n        [-122.40238, 37.795641],\n        [-122.402741, 37.795597],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.399975, 37.787011],\n        [-122.399502, 37.786634],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"60-69\": {\n    \"distance\": 3.9238317711623885,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"60-70\": {\n    \"distance\": 3.8969792511795474,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"60-71\": {\n    \"distance\": 2.6454271224884445,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399608, 37.791203],\n        [-122.399557, 37.790909],\n        [-122.399541, 37.790817],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"60-72\": {\n    \"distance\": 3.277153209201793,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399608, 37.791203],\n        [-122.399557, 37.790909],\n        [-122.399541, 37.790817],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"60-73\": {\n    \"distance\": 1.3450297510416134,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.406256, 37.79792],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"60-74\": {\n    \"distance\": 1.7763535500938472,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.401927, 37.803854],\n        [-122.401465, 37.803332],\n        [-122.401022, 37.802851],\n        [-122.400705, 37.802491],\n        [-122.400371, 37.802109],\n        [-122.40008, 37.801777],\n        [-122.39932, 37.800915],\n        [-122.399253, 37.80084],\n        [-122.39918, 37.800768],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"60-75\": {\n    \"distance\": 1.6394244096336128,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"60-76\": {\n    \"distance\": 2.3168135516365855,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399608, 37.791203],\n        [-122.399557, 37.790909],\n        [-122.399541, 37.790817],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"60-77\": {\n    \"distance\": 1.7962818809270227,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399608, 37.791203],\n        [-122.399557, 37.790909],\n        [-122.399541, 37.790817],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"60-82\": {\n    \"distance\": 0.7633323782611868,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"61-62\": {\n    \"distance\": 0.7450781430942388,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"61-63\": {\n    \"distance\": 1.9018553076201756,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"61-64\": {\n    \"distance\": 0.2882550879075677,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"61-65\": {\n    \"distance\": 1.5295772842624706,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.390632, 37.780548],\n        [-122.39108, 37.780194],\n        [-122.391662, 37.779735],\n        [-122.392231, 37.779287],\n        [-122.392679, 37.778932],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"61-67\": {\n    \"distance\": 3.400933001644084,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"61-66\": {\n    \"distance\": 3.7402992414577114,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.398365, 37.781794],\n        [-122.399635, 37.780791],\n        [-122.399619, 37.780658],\n        [-122.39963, 37.78056],\n        [-122.399649, 37.780466],\n        [-122.39968, 37.780359],\n        [-122.399726, 37.780249],\n        [-122.399786, 37.78014],\n        [-122.399869, 37.780029],\n        [-122.399974, 37.779903],\n        [-122.400086, 37.779781],\n        [-122.400219, 37.779645],\n        [-122.400369, 37.7795],\n        [-122.400526, 37.779359],\n        [-122.400991, 37.77897],\n        [-122.401106, 37.778873],\n        [-122.40129, 37.778716],\n        [-122.401954, 37.778094],\n        [-122.402207, 37.777903],\n        [-122.402476, 37.777712],\n        [-122.402737, 37.777532],\n        [-122.402994, 37.777365],\n        [-122.403258, 37.777202],\n        [-122.405095, 37.776113],\n        [-122.405315, 37.776008],\n        [-122.405467, 37.775927],\n        [-122.405602, 37.775839],\n        [-122.405758, 37.775723],\n        [-122.405907, 37.775601],\n        [-122.406057, 37.775469],\n        [-122.406219, 37.775314],\n        [-122.406378, 37.775151],\n        [-122.406518, 37.774999],\n        [-122.406654, 37.774836],\n        [-122.406787, 37.774665],\n        [-122.407086, 37.774261],\n        [-122.407156, 37.774174],\n        [-122.407231, 37.774093],\n        [-122.407311, 37.774021],\n        [-122.407407, 37.773944],\n        [-122.407502, 37.773872],\n        [-122.407609, 37.773817],\n        [-122.40771, 37.773783],\n        [-122.407822, 37.773761],\n        [-122.408286, 37.773712],\n        [-122.408445, 37.773688],\n        [-122.408666, 37.773656],\n        [-122.408922, 37.773454],\n        [-122.409693, 37.772845],\n        [-122.410083, 37.772537],\n        [-122.410692, 37.773024],\n        [-122.411074, 37.77333],\n        [-122.411627, 37.773773],\n        [-122.412165, 37.774203],\n        [-122.412622, 37.774568],\n        [-122.413157, 37.774996],\n        [-122.413714, 37.775439],\n        [-122.414171, 37.775802],\n        [-122.414716, 37.776233],\n        [-122.415145, 37.775891],\n        [-122.415508, 37.775602],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"61-68\": {\n    \"distance\": 1.3068979590949037,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"61-69\": {\n    \"distance\": 0.6984085928166098,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.390632, 37.780548],\n        [-122.39108, 37.780194],\n        [-122.391662, 37.779735],\n        [-122.392231, 37.779287],\n        [-122.392679, 37.778932],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"61-70\": {\n    \"distance\": 0.6715560728337687,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.390632, 37.780548],\n        [-122.39108, 37.780194],\n        [-122.391662, 37.779735],\n        [-122.392231, 37.779287],\n        [-122.392679, 37.778932],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"61-71\": {\n    \"distance\": 2.241101227929976,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"61-72\": {\n    \"distance\": 2.829616110992592,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"61-73\": {\n    \"distance\": 2.965283642444325,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"61-74\": {\n    \"distance\": 2.244098696475578,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"61-75\": {\n    \"distance\": 1.683380436532678,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"61-76\": {\n    \"distance\": 1.869276453427385,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"61-77\": {\n    \"distance\": 1.441880175514705,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"61-82\": {\n    \"distance\": 2.957692433815671,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"62-63\": {\n    \"distance\": 1.156777401521637,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"62-64\": {\n    \"distance\": 0.45682364263443453,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"62-65\": {\n    \"distance\": 2.2317149756375447,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"62-66\": {\n    \"distance\": 2.9549110005774826,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402156, 37.786195],\n        [-122.402493, 37.785928],\n        [-122.402608, 37.785836],\n        [-122.402768, 37.785709],\n        [-122.403264, 37.785321],\n        [-122.403515, 37.785123],\n        [-122.404156, 37.784618],\n        [-122.404256, 37.784489],\n        [-122.404868, 37.783999],\n        [-122.405437, 37.783556],\n        [-122.406041, 37.783085],\n        [-122.406495, 37.782729],\n        [-122.407177, 37.782192],\n        [-122.40727, 37.782119],\n        [-122.408721, 37.780977],\n        [-122.410944, 37.779218],\n        [-122.412205, 37.77822],\n        [-122.412419, 37.77805],\n        [-122.413171, 37.777454],\n        [-122.414119, 37.776705],\n        [-122.414716, 37.776233],\n        [-122.415145, 37.775891],\n        [-122.415508, 37.775602],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"62-67\": {\n    \"distance\": 2.653482351013301,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"62-68\": {\n    \"distance\": 0.5615029260769977,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"62-69\": {\n    \"distance\": 1.4005462841916838,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"62-70\": {\n    \"distance\": 1.3736937642088425,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"62-72\": {\n    \"distance\": 2.082165460361809,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"62-73\": {\n    \"distance\": 2.2178329918135424,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"62-74\": {\n    \"distance\": 1.4990207903770385,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"62-75\": {\n    \"distance\": 0.9383025304341396,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"62-76\": {\n    \"distance\": 1.1218258027966015,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"62-77\": {\n    \"distance\": 0.6968022694161664,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"62-82\": {\n    \"distance\": 2.2126145277171325,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"63-64\": {\n    \"distance\": 0.7231144989008096,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"63-65\": {\n    \"distance\": 2.49800583190392,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"63-66\": {\n    \"distance\": 2.73897696141487,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402156, 37.786195],\n        [-122.402493, 37.785928],\n        [-122.402608, 37.785836],\n        [-122.402768, 37.785709],\n        [-122.403264, 37.785321],\n        [-122.403515, 37.785123],\n        [-122.404156, 37.784618],\n        [-122.404256, 37.784489],\n        [-122.404868, 37.783999],\n        [-122.405437, 37.783556],\n        [-122.406041, 37.783085],\n        [-122.406495, 37.782729],\n        [-122.407177, 37.782192],\n        [-122.40727, 37.782119],\n        [-122.408721, 37.780977],\n        [-122.410944, 37.779218],\n        [-122.412205, 37.77822],\n        [-122.412419, 37.77805],\n        [-122.413171, 37.777454],\n        [-122.414119, 37.776705],\n        [-122.414716, 37.776233],\n        [-122.415145, 37.775891],\n        [-122.415508, 37.775602],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"63-67\": {\n    \"distance\": 2.437548311850689,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"63-68\": {\n    \"distance\": 0.34556888691438487,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"62-71\": {\n    \"distance\": 1.4936505772991922,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"63-69\": {\n    \"distance\": 1.666837140458059,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"63-70\": {\n    \"distance\": 1.639984620475218,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"63-71\": {\n    \"distance\": 1.2777165381365796,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"63-72\": {\n    \"distance\": 1.8662314211991968,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"63-73\": {\n    \"distance\": 2.0018989526509294,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"63-74\": {\n    \"distance\": 1.283086751214426,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"63-75\": {\n    \"distance\": 0.722368491271527,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"63-76\": {\n    \"distance\": 0.9058917636339888,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"63-77\": {\n    \"distance\": 0.4808682302535538,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"63-82\": {\n    \"distance\": 1.9966804885545197,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"64-65\": {\n    \"distance\": 1.7748919204508733,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"64-67\": {\n    \"distance\": 3.1103057566520356,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"64-66\": {\n    \"distance\": 3.450938305737227,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395714, 37.78389],\n        [-122.396301, 37.783425],\n        [-122.3974, 37.782556],\n        [-122.398365, 37.781794],\n        [-122.399635, 37.780791],\n        [-122.399619, 37.780658],\n        [-122.39963, 37.78056],\n        [-122.399649, 37.780466],\n        [-122.39968, 37.780359],\n        [-122.399726, 37.780249],\n        [-122.399786, 37.78014],\n        [-122.399869, 37.780029],\n        [-122.399974, 37.779903],\n        [-122.400086, 37.779781],\n        [-122.400219, 37.779645],\n        [-122.400369, 37.7795],\n        [-122.400526, 37.779359],\n        [-122.400991, 37.77897],\n        [-122.401106, 37.778873],\n        [-122.40129, 37.778716],\n        [-122.401954, 37.778094],\n        [-122.402207, 37.777903],\n        [-122.402476, 37.777712],\n        [-122.402737, 37.777532],\n        [-122.402994, 37.777365],\n        [-122.403258, 37.777202],\n        [-122.405095, 37.776113],\n        [-122.405315, 37.776008],\n        [-122.405467, 37.775927],\n        [-122.405602, 37.775839],\n        [-122.405758, 37.775723],\n        [-122.405907, 37.775601],\n        [-122.406057, 37.775469],\n        [-122.406219, 37.775314],\n        [-122.406378, 37.775151],\n        [-122.406518, 37.774999],\n        [-122.406654, 37.774836],\n        [-122.406787, 37.774665],\n        [-122.407086, 37.774261],\n        [-122.407156, 37.774174],\n        [-122.407231, 37.774093],\n        [-122.407311, 37.774021],\n        [-122.407407, 37.773944],\n        [-122.407502, 37.773872],\n        [-122.407609, 37.773817],\n        [-122.40771, 37.773783],\n        [-122.407822, 37.773761],\n        [-122.408286, 37.773712],\n        [-122.408445, 37.773688],\n        [-122.408666, 37.773656],\n        [-122.408922, 37.773454],\n        [-122.409693, 37.772845],\n        [-122.410083, 37.772537],\n        [-122.410692, 37.773024],\n        [-122.411074, 37.77333],\n        [-122.411627, 37.773773],\n        [-122.412165, 37.774203],\n        [-122.412622, 37.774568],\n        [-122.413157, 37.774996],\n        [-122.413714, 37.775439],\n        [-122.414171, 37.775802],\n        [-122.414716, 37.776233],\n        [-122.415145, 37.775891],\n        [-122.415508, 37.775602],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"64-68\": {\n    \"distance\": 1.0175370233744179,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395714, 37.78389],\n        [-122.396301, 37.783425],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"64-69\": {\n    \"distance\": 0.9437232290050128,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"64-70\": {\n    \"distance\": 0.9168707090221717,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"64-71\": {\n    \"distance\": 1.9504739829379265,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"64-72\": {\n    \"distance\": 2.5389888660005435,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"64-73\": {\n    \"distance\": 2.6746563974522766,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"64-74\": {\n    \"distance\": 1.9558441960157726,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"64-75\": {\n    \"distance\": 1.3951259360728736,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"64-76\": {\n    \"distance\": 1.578649208435336,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"64-77\": {\n    \"distance\": 1.1536256750549005,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"64-82\": {\n    \"distance\": 2.6694379333558667,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"65-66\": {\n    \"distance\": 2.1745190594800365,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.403807, 37.770119],\n        [-122.403857, 37.77005],\n        [-122.403939, 37.770055],\n        [-122.404014, 37.770133],\n        [-122.404749, 37.770735],\n        [-122.404957, 37.770906],\n        [-122.405357, 37.771232],\n        [-122.405451, 37.771303],\n        [-122.405549, 37.771224],\n        [-122.406301, 37.770631],\n        [-122.406997, 37.77007],\n        [-122.408536, 37.7713],\n        [-122.409081, 37.771736],\n        [-122.410083, 37.772537],\n        [-122.410692, 37.773024],\n        [-122.411074, 37.77333],\n        [-122.411627, 37.773773],\n        [-122.412165, 37.774203],\n        [-122.412622, 37.774568],\n        [-122.413157, 37.774996],\n        [-122.413714, 37.775439],\n        [-122.414171, 37.775802],\n        [-122.414716, 37.776233],\n        [-122.415145, 37.775891],\n        [-122.415508, 37.775602],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"65-67\": {\n    \"distance\": 1.8410907163645711,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.403807, 37.770119],\n        [-122.403857, 37.77005],\n        [-122.403939, 37.770055],\n        [-122.404014, 37.770133],\n        [-122.404749, 37.770735],\n        [-122.404957, 37.770906],\n        [-122.405357, 37.771232],\n        [-122.405451, 37.771303],\n        [-122.405549, 37.771224],\n        [-122.406301, 37.770631],\n        [-122.406997, 37.77007],\n        [-122.408536, 37.7713],\n        [-122.409081, 37.771736],\n        [-122.410083, 37.772537],\n        [-122.410692, 37.773024],\n        [-122.411074, 37.77333],\n        [-122.411627, 37.773773],\n        [-122.412165, 37.774203],\n        [-122.412622, 37.774568],\n        [-122.413157, 37.774996],\n        [-122.413714, 37.775439],\n        [-122.414171, 37.775802],\n        [-122.414716, 37.776233],\n        [-122.415323, 37.776716],\n        [-122.415742, 37.777047],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"65-68\": {\n    \"distance\": 2.2379286017061246,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401787, 37.771905],\n        [-122.402204, 37.772245],\n        [-122.402509, 37.772489],\n        [-122.40322, 37.773055],\n        [-122.402681, 37.773481],\n        [-122.402275, 37.773802],\n        [-122.402109, 37.773934],\n        [-122.40206, 37.773973],\n        [-122.401546, 37.774377],\n        [-122.400995, 37.774814],\n        [-122.400875, 37.774909],\n        [-122.400197, 37.775445],\n        [-122.398769, 37.776574],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"65-69\": {\n    \"distance\": 0.8311688845555099,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"65-70\": {\n    \"distance\": 0.8580216007087011,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"65-71\": {\n    \"distance\": 2.616750785347765,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401787, 37.771905],\n        [-122.402204, 37.772245],\n        [-122.402509, 37.772489],\n        [-122.40322, 37.773055],\n        [-122.404762, 37.774286],\n        [-122.404354, 37.774608],\n        [-122.404226, 37.77471],\n        [-122.403646, 37.775168],\n        [-122.403086, 37.775611],\n        [-122.402537, 37.776045],\n        [-122.401989, 37.776478],\n        [-122.401432, 37.776919],\n        [-122.400799, 37.77742],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408207, 37.784092],\n        [-122.408459, 37.784306],\n        [-122.40851, 37.784397],\n        [-122.408525, 37.78446],\n        [-122.408538, 37.784536],\n        [-122.408678, 37.785392],\n        [-122.408697, 37.785481],\n        [-122.408723, 37.785545],\n        [-122.408843, 37.785847],\n        [-122.408951, 37.786313],\n        [-122.408052, 37.786428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"65-72\": {\n    \"distance\": 1.51495915574954,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401787, 37.771905],\n        [-122.402204, 37.772245],\n        [-122.402509, 37.772489],\n        [-122.40322, 37.773055],\n        [-122.404762, 37.774286],\n        [-122.4049, 37.774396],\n        [-122.405251, 37.774676],\n        [-122.405447, 37.774832],\n        [-122.406308, 37.775519],\n        [-122.407305, 37.776315],\n        [-122.407519, 37.776485],\n        [-122.407854, 37.776752],\n        [-122.409388, 37.777976],\n        [-122.409945, 37.778419],\n        [-122.410401, 37.778784],\n        [-122.410944, 37.779218],\n        [-122.411484, 37.779648],\n        [-122.41194, 37.780011],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"65-73\": {\n    \"distance\": 3.896314285055546,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401787, 37.771905],\n        [-122.402204, 37.772245],\n        [-122.402509, 37.772489],\n        [-122.40322, 37.773055],\n        [-122.402681, 37.773481],\n        [-122.402275, 37.773802],\n        [-122.402109, 37.773934],\n        [-122.40206, 37.773973],\n        [-122.401546, 37.774377],\n        [-122.400995, 37.774814],\n        [-122.400875, 37.774909],\n        [-122.400197, 37.775445],\n        [-122.398769, 37.776574],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"65-74\": {\n    \"distance\": 3.729025761185694,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401787, 37.771905],\n        [-122.402204, 37.772245],\n        [-122.402509, 37.772489],\n        [-122.40322, 37.773055],\n        [-122.404762, 37.774286],\n        [-122.4049, 37.774396],\n        [-122.405251, 37.774676],\n        [-122.405447, 37.774832],\n        [-122.406308, 37.775519],\n        [-122.407305, 37.776315],\n        [-122.407519, 37.776485],\n        [-122.407854, 37.776752],\n        [-122.409388, 37.777976],\n        [-122.409945, 37.778419],\n        [-122.410401, 37.778784],\n        [-122.410944, 37.779218],\n        [-122.411484, 37.779648],\n        [-122.41194, 37.780011],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"65-75\": {\n    \"distance\": 3.168307501242794,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401787, 37.771905],\n        [-122.402204, 37.772245],\n        [-122.402509, 37.772489],\n        [-122.40322, 37.773055],\n        [-122.404762, 37.774286],\n        [-122.4049, 37.774396],\n        [-122.405251, 37.774676],\n        [-122.405447, 37.774832],\n        [-122.406308, 37.775519],\n        [-122.407305, 37.776315],\n        [-122.407519, 37.776485],\n        [-122.407854, 37.776752],\n        [-122.409388, 37.777976],\n        [-122.409945, 37.778419],\n        [-122.410401, 37.778784],\n        [-122.410944, 37.779218],\n        [-122.411484, 37.779648],\n        [-122.41194, 37.780011],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"65-76\": {\n    \"distance\": 2.4062752174910678,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401787, 37.771905],\n        [-122.402204, 37.772245],\n        [-122.402509, 37.772489],\n        [-122.40322, 37.773055],\n        [-122.404762, 37.774286],\n        [-122.4049, 37.774396],\n        [-122.405251, 37.774676],\n        [-122.405447, 37.774832],\n        [-122.406308, 37.775519],\n        [-122.407305, 37.776315],\n        [-122.407519, 37.776485],\n        [-122.407854, 37.776752],\n        [-122.409388, 37.777976],\n        [-122.409945, 37.778419],\n        [-122.410401, 37.778784],\n        [-122.410944, 37.779218],\n        [-122.411484, 37.779648],\n        [-122.41194, 37.780011],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"65-77\": {\n    \"distance\": 2.9268072402248206,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401787, 37.771905],\n        [-122.402204, 37.772245],\n        [-122.402509, 37.772489],\n        [-122.40322, 37.773055],\n        [-122.404762, 37.774286],\n        [-122.4049, 37.774396],\n        [-122.405251, 37.774676],\n        [-122.405447, 37.774832],\n        [-122.406308, 37.775519],\n        [-122.407305, 37.776315],\n        [-122.407519, 37.776485],\n        [-122.407854, 37.776752],\n        [-122.409388, 37.777976],\n        [-122.409945, 37.778419],\n        [-122.410401, 37.778784],\n        [-122.410944, 37.779218],\n        [-122.411484, 37.779648],\n        [-122.41194, 37.780011],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"65-82\": {\n    \"distance\": 4.170617859976429,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401787, 37.771905],\n        [-122.402204, 37.772245],\n        [-122.402509, 37.772489],\n        [-122.40322, 37.773055],\n        [-122.402681, 37.773481],\n        [-122.402275, 37.773802],\n        [-122.402109, 37.773934],\n        [-122.40206, 37.773973],\n        [-122.401546, 37.774377],\n        [-122.400995, 37.774814],\n        [-122.400875, 37.774909],\n        [-122.400197, 37.775445],\n        [-122.398769, 37.776574],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"66-67\": {\n    \"distance\": 0.7882357502155515,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419134, 37.774833],\n        [-122.419178, 37.775041],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.415323, 37.776716],\n        [-122.415742, 37.777047],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"66-68\": {\n    \"distance\": 3.0564628886299112,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419134, 37.774833],\n        [-122.419178, 37.775041],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.415323, 37.776716],\n        [-122.415742, 37.777047],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.399975, 37.787011],\n        [-122.399502, 37.786634],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"66-69\": {\n    \"distance\": 3.2495724724678063,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419134, 37.774833],\n        [-122.419178, 37.775041],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.416447, 37.775699],\n        [-122.415916, 37.775271],\n        [-122.415384, 37.774852],\n        [-122.414921, 37.774484],\n        [-122.414368, 37.774043],\n        [-122.413763, 37.77356],\n        [-122.412834, 37.77282],\n        [-122.412235, 37.773293],\n        [-122.411627, 37.773773],\n        [-122.410082, 37.774993],\n        [-122.409524, 37.774548],\n        [-122.409093, 37.774203],\n        [-122.408535, 37.77376],\n        [-122.408445, 37.773688],\n        [-122.407773, 37.773152],\n        [-122.407267, 37.77272],\n        [-122.406967, 37.77254],\n        [-122.406665, 37.77278],\n        [-122.406643, 37.773105],\n        [-122.406635, 37.77337],\n        [-122.406627, 37.773563],\n        [-122.406609, 37.773723],\n        [-122.406571, 37.77389],\n        [-122.406516, 37.774071],\n        [-122.406443, 37.774242],\n        [-122.406357, 37.774406],\n        [-122.40624, 37.774592],\n        [-122.406128, 37.774755],\n        [-122.406007, 37.774917],\n        [-122.405882, 37.77507],\n        [-122.405753, 37.775215],\n        [-122.405611, 37.775358],\n        [-122.405438, 37.775523],\n        [-122.40525, 37.7757],\n        [-122.405083, 37.775847],\n        [-122.404909, 37.775985],\n        [-122.404736, 37.77611],\n        [-122.404336, 37.77638],\n        [-122.404113, 37.776528],\n        [-122.403907, 37.776647],\n        [-122.403668, 37.776775],\n        [-122.401613, 37.777839],\n        [-122.401166, 37.778025],\n        [-122.400968, 37.778122],\n        [-122.400778, 37.778231],\n        [-122.400508, 37.778409],\n        [-122.39954, 37.779081],\n        [-122.399342, 37.779217],\n        [-122.399152, 37.779335],\n        [-122.398986, 37.779423],\n        [-122.398863, 37.779474],\n        [-122.398722, 37.779517],\n        [-122.398571, 37.779546],\n        [-122.39841, 37.779566],\n        [-122.398265, 37.779576],\n        [-122.398087, 37.779565],\n        [-122.39755, 37.779134],\n        [-122.397068, 37.778752],\n        [-122.396953, 37.77866],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"66-70\": {\n    \"distance\": 3.2227199524849652,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419134, 37.774833],\n        [-122.419178, 37.775041],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.416447, 37.775699],\n        [-122.415916, 37.775271],\n        [-122.415384, 37.774852],\n        [-122.414921, 37.774484],\n        [-122.414368, 37.774043],\n        [-122.413763, 37.77356],\n        [-122.412834, 37.77282],\n        [-122.412235, 37.773293],\n        [-122.411627, 37.773773],\n        [-122.410082, 37.774993],\n        [-122.409524, 37.774548],\n        [-122.409093, 37.774203],\n        [-122.408535, 37.77376],\n        [-122.408445, 37.773688],\n        [-122.407773, 37.773152],\n        [-122.407267, 37.77272],\n        [-122.406967, 37.77254],\n        [-122.406665, 37.77278],\n        [-122.406643, 37.773105],\n        [-122.406635, 37.77337],\n        [-122.406627, 37.773563],\n        [-122.406609, 37.773723],\n        [-122.406571, 37.77389],\n        [-122.406516, 37.774071],\n        [-122.406443, 37.774242],\n        [-122.406357, 37.774406],\n        [-122.40624, 37.774592],\n        [-122.406128, 37.774755],\n        [-122.406007, 37.774917],\n        [-122.405882, 37.77507],\n        [-122.405753, 37.775215],\n        [-122.405611, 37.775358],\n        [-122.405438, 37.775523],\n        [-122.40525, 37.7757],\n        [-122.405083, 37.775847],\n        [-122.404909, 37.775985],\n        [-122.404736, 37.77611],\n        [-122.404336, 37.77638],\n        [-122.404113, 37.776528],\n        [-122.403907, 37.776647],\n        [-122.403668, 37.776775],\n        [-122.401613, 37.777839],\n        [-122.401166, 37.778025],\n        [-122.400968, 37.778122],\n        [-122.400778, 37.778231],\n        [-122.400508, 37.778409],\n        [-122.39954, 37.779081],\n        [-122.399342, 37.779217],\n        [-122.399152, 37.779335],\n        [-122.398986, 37.779423],\n        [-122.398863, 37.779474],\n        [-122.398722, 37.779517],\n        [-122.398571, 37.779546],\n        [-122.39841, 37.779566],\n        [-122.398265, 37.779576],\n        [-122.398087, 37.779565],\n        [-122.39755, 37.779134],\n        [-122.397068, 37.778752],\n        [-122.396953, 37.77866],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"66-71\": {\n    \"distance\": 2.4026277036841885,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419134, 37.774833],\n        [-122.419178, 37.775041],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.415323, 37.776716],\n        [-122.415742, 37.777047],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.410138, 37.782111],\n        [-122.409703, 37.781763],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408207, 37.784092],\n        [-122.408459, 37.784306],\n        [-122.40851, 37.784397],\n        [-122.408525, 37.78446],\n        [-122.408538, 37.784536],\n        [-122.408678, 37.785392],\n        [-122.408697, 37.785481],\n        [-122.408723, 37.785545],\n        [-122.408843, 37.785847],\n        [-122.408951, 37.786313],\n        [-122.408052, 37.786428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"66-72\": {\n    \"distance\": 1.088586251912586,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419134, 37.774833],\n        [-122.419178, 37.775041],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.415323, 37.776716],\n        [-122.415742, 37.777047],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"66-73\": {\n    \"distance\": 4.328989658166904,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419134, 37.774833],\n        [-122.419178, 37.775041],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.415323, 37.776716],\n        [-122.415742, 37.777047],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"66-74\": {\n    \"distance\": 3.3716763671791514,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419134, 37.774833],\n        [-122.419178, 37.775041],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.415323, 37.776716],\n        [-122.415742, 37.777047],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"66-75\": {\n    \"distance\": 2.8109581072362513,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419134, 37.774833],\n        [-122.419178, 37.775041],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.415323, 37.776716],\n        [-122.415742, 37.777047],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"66-76\": {\n    \"distance\": 2.048925823484525,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419134, 37.774833],\n        [-122.419178, 37.775041],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.415323, 37.776716],\n        [-122.415742, 37.777047],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"66-77\": {\n    \"distance\": 2.569457846218278,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419134, 37.774833],\n        [-122.419178, 37.775041],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.415323, 37.776716],\n        [-122.415742, 37.777047],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"66-82\": {\n    \"distance\": 4.085270104519244,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419134, 37.774833],\n        [-122.419178, 37.775041],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.415323, 37.776716],\n        [-122.415742, 37.777047],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"67-68\": {\n    \"distance\": 2.5391936133620856,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.399975, 37.787011],\n        [-122.399502, 37.786634],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"67-69\": {\n    \"distance\": 2.6659172749205737,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"67-70\": {\n    \"distance\": 2.692769991073765,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"67-71\": {\n    \"distance\": 1.885358428416364,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.410138, 37.782111],\n        [-122.409703, 37.781763],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408207, 37.784092],\n        [-122.408459, 37.784306],\n        [-122.40851, 37.784397],\n        [-122.408525, 37.78446],\n        [-122.408538, 37.784536],\n        [-122.408678, 37.785392],\n        [-122.408697, 37.785481],\n        [-122.408723, 37.785545],\n        [-122.408843, 37.785847],\n        [-122.408951, 37.786313],\n        [-122.408052, 37.786428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"67-72\": {\n    \"distance\": 0.5713169766447611,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"67-73\": {\n    \"distance\": 3.8117203828990793,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"67-75\": {\n    \"distance\": 2.2936888319684257,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"67-74\": {\n    \"distance\": 2.854407091911326,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"67-76\": {\n    \"distance\": 1.5316565482167,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"67-77\": {\n    \"distance\": 2.0521885709504524,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"67-82\": {\n    \"distance\": 3.568000829251419,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"68-69\": {\n    \"distance\": 1.6255797478117089,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"68-70\": {\n    \"distance\": 1.6524324639649004,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"68-71\": {\n    \"distance\": 1.4858857855115042,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408207, 37.784092],\n        [-122.408459, 37.784306],\n        [-122.40851, 37.784397],\n        [-122.408525, 37.78446],\n        [-122.408538, 37.784536],\n        [-122.408678, 37.785392],\n        [-122.408697, 37.785481],\n        [-122.408723, 37.785545],\n        [-122.408843, 37.785847],\n        [-122.408951, 37.786313],\n        [-122.408052, 37.786428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"68-72\": {\n    \"distance\": 1.4901200277926805,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405723, 37.780875],\n        [-122.407162, 37.779736],\n        [-122.407705, 37.779298],\n        [-122.408275, 37.778851],\n        [-122.408839, 37.778409],\n        [-122.409388, 37.777976],\n        [-122.409945, 37.778419],\n        [-122.410401, 37.778784],\n        [-122.410944, 37.779218],\n        [-122.411484, 37.779648],\n        [-122.41194, 37.780011],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"68-73\": {\n    \"distance\": 2.5959106860251686,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.401932, 37.782633],\n        [-122.401703, 37.782447],\n        [-122.401175, 37.782025],\n        [-122.401004, 37.782162],\n        [-122.4007, 37.7824],\n        [-122.400382, 37.782651],\n        [-122.399117, 37.78365],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"68-74\": {\n    \"distance\": 2.414162664647865,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.401932, 37.782633],\n        [-122.401703, 37.782447],\n        [-122.401175, 37.782025],\n        [-122.401004, 37.782162],\n        [-122.4007, 37.7824],\n        [-122.400382, 37.782651],\n        [-122.399117, 37.78365],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"68-75\": {\n    \"distance\": 1.8534444047049652,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.401932, 37.782633],\n        [-122.401703, 37.782447],\n        [-122.401175, 37.782025],\n        [-122.401004, 37.782162],\n        [-122.4007, 37.7824],\n        [-122.400382, 37.782651],\n        [-122.399117, 37.78365],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"68-76\": {\n    \"distance\": 1.2767717348221925,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"68-77\": {\n    \"distance\": 1.6119441436869921,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.401932, 37.782633],\n        [-122.401703, 37.782447],\n        [-122.401175, 37.782025],\n        [-122.401004, 37.782162],\n        [-122.4007, 37.7824],\n        [-122.400382, 37.782651],\n        [-122.399117, 37.78365],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"69-71\": {\n    \"distance\": 2.342298185749182,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.39354, 37.779474],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"68-82\": {\n    \"distance\": 2.8702142609460517,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.401932, 37.782633],\n        [-122.401703, 37.782447],\n        [-122.401175, 37.782025],\n        [-122.401004, 37.782162],\n        [-122.4007, 37.7824],\n        [-122.400382, 37.782651],\n        [-122.399117, 37.78365],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"69-70\": {\n    \"distance\": 0.02685272608766316,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"69-73\": {\n    \"distance\": 3.0664806002635303,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.39354, 37.779474],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"69-72\": {\n    \"distance\": 2.095736248755355,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401787, 37.771905],\n        [-122.402204, 37.772245],\n        [-122.402509, 37.772489],\n        [-122.40322, 37.773055],\n        [-122.404762, 37.774286],\n        [-122.4049, 37.774396],\n        [-122.405251, 37.774676],\n        [-122.405447, 37.774832],\n        [-122.406308, 37.775519],\n        [-122.407305, 37.776315],\n        [-122.407519, 37.776485],\n        [-122.407854, 37.776752],\n        [-122.409388, 37.777976],\n        [-122.409945, 37.778419],\n        [-122.410401, 37.778784],\n        [-122.410944, 37.779218],\n        [-122.411484, 37.779648],\n        [-122.41194, 37.780011],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"69-74\": {\n    \"distance\": 2.8847325788862284,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.39354, 37.779474],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"69-75\": {\n    \"distance\": 2.324014318943328,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.39354, 37.779474],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"69-76\": {\n    \"distance\": 1.9704734112465905,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.39354, 37.779474],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"69-77\": {\n    \"distance\": 2.082514057925355,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.39354, 37.779474],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"69-82\": {\n    \"distance\": 3.3407841751844134,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.39354, 37.779474],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"70-71\": {\n    \"distance\": 2.3154456657663403,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.39354, 37.779474],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.405045, 37.787766],\n        [-122.406589, 37.787566],\n        [-122.407063, 37.787517],\n        [-122.407205, 37.7875],\n        [-122.40733, 37.787484],\n        [-122.407493, 37.787464],\n        [-122.407649, 37.787445],\n        [-122.407786, 37.787428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"70-72\": {\n    \"distance\": 2.122588964908546,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401787, 37.771905],\n        [-122.402204, 37.772245],\n        [-122.402509, 37.772489],\n        [-122.40322, 37.773055],\n        [-122.404762, 37.774286],\n        [-122.4049, 37.774396],\n        [-122.405251, 37.774676],\n        [-122.405447, 37.774832],\n        [-122.406308, 37.775519],\n        [-122.407305, 37.776315],\n        [-122.407519, 37.776485],\n        [-122.407854, 37.776752],\n        [-122.409388, 37.777976],\n        [-122.409945, 37.778419],\n        [-122.410401, 37.778784],\n        [-122.410944, 37.779218],\n        [-122.411484, 37.779648],\n        [-122.41194, 37.780011],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"70-73\": {\n    \"distance\": 3.0396280802806896,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.39354, 37.779474],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"70-74\": {\n    \"distance\": 2.8578800589033873,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.39354, 37.779474],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"70-75\": {\n    \"distance\": 2.297161798960487,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.39354, 37.779474],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"70-76\": {\n    \"distance\": 1.9436208912637494,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.39354, 37.779474],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"70-77\": {\n    \"distance\": 2.055661537942514,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.39354, 37.779474],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"70-82\": {\n    \"distance\": 3.3139316552015727,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.39354, 37.779474],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"71-72\": {\n    \"distance\": 1.3625240422715557,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.408052, 37.786428],\n        [-122.407866, 37.785495],\n        [-122.407789, 37.785505],\n        [-122.406229, 37.785713],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"71-73\": {\n    \"distance\": 1.6033611495623319,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408329, 37.788301],\n        [-122.407762, 37.788373],\n        [-122.407518, 37.788404],\n        [-122.407426, 37.788415],\n        [-122.406771, 37.788499],\n        [-122.405221, 37.788694],\n        [-122.404371, 37.788802],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"71-74\": {\n    \"distance\": 1.564222989338402,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408329, 37.788301],\n        [-122.407762, 37.788373],\n        [-122.407518, 37.788404],\n        [-122.407426, 37.788415],\n        [-122.406771, 37.788499],\n        [-122.405221, 37.788694],\n        [-122.404371, 37.788802],\n        [-122.403678, 37.788891],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"71-75\": {\n    \"distance\": 1.0035047293955028,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408329, 37.788301],\n        [-122.407762, 37.788373],\n        [-122.407518, 37.788404],\n        [-122.407426, 37.788415],\n        [-122.406771, 37.788499],\n        [-122.405221, 37.788694],\n        [-122.404371, 37.788802],\n        [-122.403678, 37.788891],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"71-76\": {\n    \"distance\": 0.6104310980173367,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.408052, 37.786428],\n        [-122.407866, 37.785495],\n        [-122.407789, 37.785505],\n        [-122.406229, 37.785713],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"71-77\": {\n    \"distance\": 0.7620044683775298,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408329, 37.788301],\n        [-122.407762, 37.788373],\n        [-122.407518, 37.788404],\n        [-122.407426, 37.788415],\n        [-122.406771, 37.788499],\n        [-122.405221, 37.788694],\n        [-122.404371, 37.788802],\n        [-122.403678, 37.788891],\n        [-122.402845, 37.788996],\n        [-122.402632, 37.789023],\n        [-122.40214, 37.789085],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"71-82\": {\n    \"distance\": 1.8776647244832154,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408329, 37.788301],\n        [-122.407762, 37.788373],\n        [-122.407518, 37.788404],\n        [-122.407426, 37.788415],\n        [-122.406771, 37.788499],\n        [-122.405221, 37.788694],\n        [-122.404371, 37.788802],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"72-74\": {\n    \"distance\": 2.283090201259833,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"72-75\": {\n    \"distance\": 1.7223719413169332,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"72-73\": {\n    \"distance\": 3.2404034922475877,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"72-76\": {\n    \"distance\": 0.9603396575652077,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"72-77\": {\n    \"distance\": 1.48087168029896,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"72-82\": {\n    \"distance\": 2.9966839385999258,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"73-74\": {\n    \"distance\": 1.7754044437232737,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.40722, 37.79877],\n        [-122.40788, 37.798686],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40704, 37.798072],\n        [-122.406733, 37.797863],\n        [-122.406307, 37.797566],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.404507, 37.796369],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401337, 37.794864],\n        [-122.400335, 37.795029],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397611, 37.79352],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"73-75\": {\n    \"distance\": 1.4587855267503325,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.40722, 37.79877],\n        [-122.40788, 37.798686],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40704, 37.798072],\n        [-122.406733, 37.797863],\n        [-122.406307, 37.797566],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.404507, 37.796369],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401337, 37.794864],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"73-76\": {\n    \"distance\": 1.7588257568616446,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.40722, 37.79877],\n        [-122.40788, 37.798686],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40704, 37.798072],\n        [-122.406733, 37.797863],\n        [-122.406307, 37.797566],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.404507, 37.796369],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"73-77\": {\n    \"distance\": 1.5160534198843687,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.40722, 37.79877],\n        [-122.40788, 37.798686],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40704, 37.798072],\n        [-122.406733, 37.797863],\n        [-122.406307, 37.797566],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.404507, 37.796369],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"73-82\": {\n    \"distance\": 0.8545144526877436,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.40722, 37.79877],\n        [-122.40788, 37.798686],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40704, 37.798072],\n        [-122.406733, 37.797863],\n        [-122.406307, 37.797566],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.406256, 37.79792],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"74-75\": {\n    \"distance\": 0.5607193130875997,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"74-76\": {\n    \"distance\": 1.3227505436946247,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"74-77\": {\n    \"distance\": 0.8022188729850622,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"74-82\": {\n    \"distance\": 1.3019052424016848,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.392595, 37.793719],\n        [-122.392512, 37.793786],\n        [-122.392443, 37.793844],\n        [-122.392777, 37.794156],\n        [-122.393072, 37.79443],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397792, 37.799184],\n        [-122.397882, 37.799145],\n        [-122.397961, 37.799103],\n        [-122.398026, 37.799069],\n        [-122.398097, 37.799039],\n        [-122.398222, 37.798989],\n        [-122.398334, 37.798957],\n        [-122.398615, 37.798906],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"75-76\": {\n    \"distance\": 0.7620322837517254,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"75-77\": {\n    \"distance\": 0.24150061304216297,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"76-77\": {\n    \"distance\": 0.5205320227337523,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"75-82\": {\n    \"distance\": 1.2743130504276932,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"76-82\": {\n    \"distance\": 2.0363442810347188,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"77-82\": {\n    \"distance\": 1.5158126103251555,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"46-41\": {\n    \"distance\": 0.6927055673263851,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401337, 37.794864],\n        [-122.400335, 37.795029],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"46-47\": {\n    \"distance\": 1.3638754487186506,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"46-45\": {\n    \"distance\": 0.7428488314795862,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401404, 37.794427],\n        [-122.402282, 37.794314],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"46-48\": {\n    \"distance\": 1.2448876979986347,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.399891, 37.798833],\n        [-122.400061, 37.799678],\n        [-122.400249, 37.800617],\n        [-122.39954, 37.800707],\n        [-122.399475, 37.800725],\n        [-122.399427, 37.800744],\n        [-122.399337, 37.800794],\n        [-122.399253, 37.80084],\n        [-122.39918, 37.800768],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"46-42\": {\n    \"distance\": 0.7479278361308588,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.403501, 37.796427],\n        [-122.40292, 37.7965],\n        [-122.402412, 37.796565],\n        [-122.40186, 37.796634],\n        [-122.401295, 37.796706],\n        [-122.400693, 37.796782],\n        [-122.400079, 37.79686],\n        [-122.399511, 37.796931],\n        [-122.399348, 37.796954],\n        [-122.399192, 37.796975],\n        [-122.398738, 37.797035],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"46-49\": {\n    \"distance\": 1.984344699993521,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401337, 37.794864],\n        [-122.400335, 37.795029],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397611, 37.79352],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394077, 37.792542],\n        [-122.393228, 37.791868],\n        [-122.393119, 37.791781],\n        [-122.392525, 37.79131],\n        [-122.391972, 37.79087],\n        [-122.390979, 37.790082],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"46-51\": {\n    \"distance\": 1.910943141576527,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401337, 37.794864],\n        [-122.400335, 37.795029],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.396834, 37.795467],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"46-50\": {\n    \"distance\": 1.678137670812615,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401337, 37.794864],\n        [-122.400335, 37.795029],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.396834, 37.795467],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395452, 37.796517],\n        [-122.39508, 37.796081],\n        [-122.394968, 37.795946],\n        [-122.394881, 37.795826],\n        [-122.394809, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393362, 37.794385],\n        [-122.393258, 37.794377],\n        [-122.393198, 37.794411],\n        [-122.393177, 37.794466],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"46-55\": {\n    \"distance\": 1.6236253773382925,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401337, 37.794864],\n        [-122.400335, 37.795029],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"46-56\": {\n    \"distance\": 1.2306772049974144,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401337, 37.794864],\n        [-122.400335, 37.795029],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"46-53\": {\n    \"distance\": 1.8592205553915184,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"46-54\": {\n    \"distance\": 2.466331529176279,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401337, 37.794864],\n        [-122.400335, 37.795029],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397611, 37.79352],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394077, 37.792542],\n        [-122.393228, 37.791868],\n        [-122.393119, 37.791781],\n        [-122.392525, 37.79131],\n        [-122.391972, 37.79087],\n        [-122.390979, 37.790082],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"46-58\": {\n    \"distance\": 3.119349292519417,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"46-57\": {\n    \"distance\": 2.263155178994174,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"46-59\": {\n    \"distance\": 3.071658578709098,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.41597, 37.780627],\n        [-122.416859, 37.780507],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"46-62\": {\n    \"distance\": 1.7813997484346074,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"46-60\": {\n    \"distance\": 1.4137328777287368,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.402419, 37.799377],\n        [-122.40261, 37.800315],\n        [-122.402804, 37.801267],\n        [-122.402891, 37.801696],\n        [-122.402989, 37.802174],\n        [-122.403156, 37.803014],\n        [-122.403174, 37.803104],\n        [-122.403189, 37.803176],\n        [-122.403345, 37.803964],\n        [-122.403358, 37.804032],\n        [-122.403376, 37.804122],\n        [-122.403525, 37.804897],\n        [-122.403542, 37.804989],\n        [-122.403561, 37.805122],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"46-61\": {\n    \"distance\": 2.526477654533146,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"46-64\": {\n    \"distance\": 2.2382231540733417,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"46-63\": {\n    \"distance\": 1.7713395983769475,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401337, 37.794864],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399042, 37.790954],\n        [-122.398576, 37.790581],\n        [-122.398148, 37.790238],\n        [-122.398107, 37.790206],\n        [-122.397927, 37.790062],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"46-67\": {\n    \"distance\": 2.9854642095907837,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"46-66\": {\n    \"distance\": 3.8316656623612206,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416945, 37.777652],\n        [-122.417475, 37.777584],\n        [-122.417586, 37.777568],\n        [-122.418049, 37.777505],\n        [-122.417916, 37.776859],\n        [-122.417889, 37.776816],\n        [-122.417839, 37.77677],\n        [-122.417784, 37.776729],\n        [-122.417677, 37.776665],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.416447, 37.775699],\n        [-122.415916, 37.775271],\n        [-122.417125, 37.774325],\n        [-122.417233, 37.774269],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"46-68\": {\n    \"distance\": 1.6980403668084425,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.399975, 37.787011],\n        [-122.399502, 37.786634],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"46-65\": {\n    \"distance\": 4.212940580766346,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.401932, 37.782633],\n        [-122.401703, 37.782447],\n        [-122.401175, 37.782025],\n        [-122.400621, 37.781581],\n        [-122.400376, 37.781387],\n        [-122.400158, 37.781211],\n        [-122.399635, 37.780791],\n        [-122.399619, 37.780658],\n        [-122.39963, 37.78056],\n        [-122.399649, 37.780466],\n        [-122.39968, 37.780359],\n        [-122.399726, 37.780249],\n        [-122.399786, 37.78014],\n        [-122.399869, 37.780029],\n        [-122.399974, 37.779903],\n        [-122.400086, 37.779781],\n        [-122.400219, 37.779645],\n        [-122.400369, 37.7795],\n        [-122.400526, 37.779359],\n        [-122.400991, 37.77897],\n        [-122.401106, 37.778873],\n        [-122.40129, 37.778716],\n        [-122.401954, 37.778094],\n        [-122.402207, 37.777903],\n        [-122.402476, 37.777712],\n        [-122.402737, 37.777532],\n        [-122.402994, 37.777365],\n        [-122.403258, 37.777202],\n        [-122.405095, 37.776113],\n        [-122.405315, 37.776008],\n        [-122.405467, 37.775927],\n        [-122.405602, 37.775839],\n        [-122.405758, 37.775723],\n        [-122.405907, 37.775601],\n        [-122.406057, 37.775469],\n        [-122.406219, 37.775314],\n        [-122.406378, 37.775151],\n        [-122.406518, 37.774999],\n        [-122.406654, 37.774836],\n        [-122.406787, 37.774665],\n        [-122.407086, 37.774261],\n        [-122.407156, 37.774174],\n        [-122.407231, 37.774093],\n        [-122.407311, 37.774021],\n        [-122.407407, 37.773944],\n        [-122.407502, 37.773872],\n        [-122.407736, 37.77371],\n        [-122.407792, 37.77365],\n        [-122.407832, 37.773582],\n        [-122.407859, 37.773513],\n        [-122.407872, 37.773448],\n        [-122.407866, 37.773373],\n        [-122.407848, 37.773298],\n        [-122.407773, 37.773152],\n        [-122.407267, 37.77272],\n        [-122.407044, 37.772488],\n        [-122.406939, 37.772376],\n        [-122.406797, 37.772255],\n        [-122.406473, 37.771951],\n        [-122.405964, 37.771631],\n        [-122.405569, 37.77135],\n        [-122.405451, 37.771303],\n        [-122.405357, 37.771232],\n        [-122.404957, 37.770906],\n        [-122.404749, 37.770735],\n        [-122.404014, 37.770133],\n        [-122.403939, 37.770055],\n        [-122.404048, 37.770007],\n        [-122.404085, 37.769951],\n        [-122.404078, 37.769861],\n        [-122.404031, 37.769808],\n        [-122.40396, 37.769777],\n        [-122.403881, 37.769773],\n        [-122.403774, 37.76982],\n        [-122.403733, 37.769886],\n        [-122.403758, 37.769991],\n        [-122.403857, 37.77005],\n        [-122.403807, 37.770119],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"46-69\": {\n    \"distance\": 3.1819457956305914,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"46-70\": {\n    \"distance\": 3.1550932756477503,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.39577, 37.777717],\n        [-122.395196, 37.777261],\n        [-122.395097, 37.777181],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"46-74\": {\n    \"distance\": 1.4703863482357131,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401337, 37.794864],\n        [-122.400335, 37.795029],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397611, 37.79352],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"46-72\": {\n    \"distance\": 2.4141473189392917,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"46-73\": {\n    \"distance\": 0.4582198089716706,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"46-71\": {\n    \"distance\": 1.1504192861979472,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.405665, 37.795244],\n        [-122.405847, 37.795226],\n        [-122.406065, 37.795203],\n        [-122.406493, 37.795153],\n        [-122.407013, 37.795085],\n        [-122.40682, 37.794196],\n        [-122.406639, 37.793309],\n        [-122.407145, 37.793245],\n        [-122.407272, 37.793229],\n        [-122.407385, 37.793215],\n        [-122.40772, 37.793173],\n        [-122.407644, 37.792738],\n        [-122.40714, 37.790283],\n        [-122.407038, 37.789698],\n        [-122.406986, 37.789429],\n        [-122.407752, 37.789333],\n        [-122.408615, 37.789226],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"46-75\": {\n    \"distance\": 1.1537674312627715,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401337, 37.794864],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399451, 37.791282],\n        [-122.399271, 37.791137],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"46-76\": {\n    \"distance\": 1.453807661374084,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"46-77\": {\n    \"distance\": 1.2110353243968082,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.402671, 37.792385],\n        [-122.402571, 37.791899],\n        [-122.40238, 37.790969],\n        [-122.40219, 37.790039],\n        [-122.402013, 37.789184],\n        [-122.401997, 37.789103],\n        [-122.401994, 37.78903],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.788895],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"46-82\": {\n    \"distance\": 0.732523383892554,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.400876, 37.798602]\n      ]\n    }\n  },\n  \"42-41\": {\n    \"distance\": 0.6203002822520967,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396834, 37.795467],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"49-41\": {\n    \"distance\": 1.2916391726432206,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390979, 37.790082],\n        [-122.391972, 37.79087],\n        [-122.392525, 37.79131],\n        [-122.393119, 37.791781],\n        [-122.393228, 37.791868],\n        [-122.394077, 37.792542],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.397611, 37.79352],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"47-41\": {\n    \"distance\": 1.3666266037514234,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"48-41\": {\n    \"distance\": 1.246979222990658,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.39918, 37.800768],\n        [-122.399253, 37.80084],\n        [-122.399144, 37.800912],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396834, 37.795467],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"45-41\": {\n    \"distance\": 0.7785930868720814,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.402282, 37.794314],\n        [-122.4022, 37.793868],\n        [-122.401311, 37.793981],\n        [-122.400141, 37.794129],\n        [-122.398966, 37.794278],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"50-41\": {\n    \"distance\": 0.9854321434623146,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393177, 37.794466],\n        [-122.393198, 37.794411],\n        [-122.393258, 37.794377],\n        [-122.393362, 37.794385],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396834, 37.795467],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"51-41\": {\n    \"distance\": 1.218237614226226,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396834, 37.795467],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"53-41\": {\n    \"distance\": 1.8619717104242905,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"55-41\": {\n    \"distance\": 0.930919849987992,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"54-41\": {\n    \"distance\": 1.7736260018259786,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390979, 37.790082],\n        [-122.391972, 37.79087],\n        [-122.392525, 37.79131],\n        [-122.393119, 37.791781],\n        [-122.393228, 37.791868],\n        [-122.394077, 37.792542],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.397611, 37.79352],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"57-41\": {\n    \"distance\": 2.265906334026946,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"56-41\": {\n    \"distance\": 0.5379716776471142,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"58-41\": {\n    \"distance\": 3.12210044755219,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"59-41\": {\n    \"distance\": 3.0744097337418714,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416859, 37.780507],\n        [-122.41597, 37.780627],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"60-41\": {\n    \"distance\": 1.756974782596591,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403356, 37.805116],\n        [-122.403268, 37.805142],\n        [-122.403174, 37.80514],\n        [-122.402723, 37.804821],\n        [-122.402206, 37.804441],\n        [-122.402155, 37.804399],\n        [-122.40207, 37.804321],\n        [-122.401904, 37.804165],\n        [-122.401794, 37.804076],\n        [-122.401236, 37.80342],\n        [-122.400903, 37.803058],\n        [-122.400448, 37.802547],\n        [-122.399792, 37.801819],\n        [-122.399165, 37.801123],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396834, 37.795467],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"61-41\": {\n    \"distance\": 2.6172538493666053,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.400543, 37.79026],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"62-41\": {\n    \"distance\": 1.8721759432680667,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.400543, 37.79026],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"63-41\": {\n    \"distance\": 1.3652948524996538,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"64-41\": {\n    \"distance\": 2.328999348906801,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.400543, 37.79026],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"65-41\": {\n    \"distance\": 4.215691735799121,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.403807, 37.770119],\n        [-122.403857, 37.77005],\n        [-122.403758, 37.769991],\n        [-122.403733, 37.769886],\n        [-122.403774, 37.76982],\n        [-122.403881, 37.769773],\n        [-122.40396, 37.769777],\n        [-122.404031, 37.769808],\n        [-122.404078, 37.769861],\n        [-122.404085, 37.769951],\n        [-122.404048, 37.770007],\n        [-122.403939, 37.770055],\n        [-122.404014, 37.770133],\n        [-122.404749, 37.770735],\n        [-122.404957, 37.770906],\n        [-122.405357, 37.771232],\n        [-122.405451, 37.771303],\n        [-122.405569, 37.77135],\n        [-122.405964, 37.771631],\n        [-122.406473, 37.771951],\n        [-122.406797, 37.772255],\n        [-122.406939, 37.772376],\n        [-122.407044, 37.772488],\n        [-122.407267, 37.77272],\n        [-122.407773, 37.773152],\n        [-122.407848, 37.773298],\n        [-122.407866, 37.773373],\n        [-122.407872, 37.773448],\n        [-122.407859, 37.773513],\n        [-122.407832, 37.773582],\n        [-122.407792, 37.77365],\n        [-122.407736, 37.77371],\n        [-122.407502, 37.773872],\n        [-122.407407, 37.773944],\n        [-122.407311, 37.774021],\n        [-122.407231, 37.774093],\n        [-122.407156, 37.774174],\n        [-122.407086, 37.774261],\n        [-122.406787, 37.774665],\n        [-122.406654, 37.774836],\n        [-122.406518, 37.774999],\n        [-122.406378, 37.775151],\n        [-122.406219, 37.775314],\n        [-122.406057, 37.775469],\n        [-122.405907, 37.775601],\n        [-122.405758, 37.775723],\n        [-122.405602, 37.775839],\n        [-122.405467, 37.775927],\n        [-122.405315, 37.776008],\n        [-122.405095, 37.776113],\n        [-122.403258, 37.777202],\n        [-122.402994, 37.777365],\n        [-122.402737, 37.777532],\n        [-122.402476, 37.777712],\n        [-122.402207, 37.777903],\n        [-122.401954, 37.778094],\n        [-122.40129, 37.778716],\n        [-122.401106, 37.778873],\n        [-122.400991, 37.77897],\n        [-122.400526, 37.779359],\n        [-122.400369, 37.7795],\n        [-122.400219, 37.779645],\n        [-122.400086, 37.779781],\n        [-122.399974, 37.779903],\n        [-122.399869, 37.780029],\n        [-122.399786, 37.78014],\n        [-122.399726, 37.780249],\n        [-122.39968, 37.780359],\n        [-122.399649, 37.780466],\n        [-122.39963, 37.78056],\n        [-122.399619, 37.780658],\n        [-122.399635, 37.780791],\n        [-122.400158, 37.781211],\n        [-122.400376, 37.781387],\n        [-122.400621, 37.781581],\n        [-122.401175, 37.782025],\n        [-122.401703, 37.782447],\n        [-122.401932, 37.782633],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"66-41\": {\n    \"distance\": 3.834416817393993,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.416447, 37.775699],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.417677, 37.776665],\n        [-122.417784, 37.776729],\n        [-122.417839, 37.77677],\n        [-122.417889, 37.776816],\n        [-122.417916, 37.776859],\n        [-122.418049, 37.777505],\n        [-122.417586, 37.777568],\n        [-122.417475, 37.777584],\n        [-122.416945, 37.777652],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"67-41\": {\n    \"distance\": 2.988215364623557,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"68-41\": {\n    \"distance\": 1.7888165616419012,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.399502, 37.786634],\n        [-122.399975, 37.787011],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.400543, 37.79026],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"69-41\": {\n    \"distance\": 3.3492256506432025,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"70-41\": {\n    \"distance\": 3.24586947048121,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.400543, 37.79026],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"71-41\": {\n    \"distance\": 1.7851723872587155,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"72-41\": {\n    \"distance\": 2.416898473972064,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"73-41\": {\n    \"distance\": 1.458724800792195,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.404507, 37.796369],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.402741, 37.795597],\n        [-122.40238, 37.795641],\n        [-122.401674, 37.795719],\n        [-122.40111, 37.795793],\n        [-122.400492, 37.795867],\n        [-122.398587, 37.796104],\n        [-122.398168, 37.796167],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396834, 37.795467],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"74-41\": {\n    \"distance\": 0.7776808208854129,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.397611, 37.79352],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"75-41\": {\n    \"distance\": 0.6945275857998316,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"76-41\": {\n    \"distance\": 1.4565588164068566,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"77-41\": {\n    \"distance\": 0.936027145697294,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"82-41\": {\n    \"distance\": 0.9946321283739088,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396834, 37.795467],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.39999, 37.795079]\n      ]\n    }\n  },\n  \"45-42\": {\n    \"distance\": 0.9301495255545978,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.402282, 37.794314],\n        [-122.401404, 37.794427],\n        [-122.401491, 37.794864],\n        [-122.401582, 37.795306],\n        [-122.401674, 37.795719],\n        [-122.40111, 37.795793],\n        [-122.400492, 37.795867],\n        [-122.398587, 37.796104],\n        [-122.398168, 37.796167],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"47-42\": {\n    \"distance\": 1.5678301456144892,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"48-42\": {\n    \"distance\": 0.6676520683522735,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.39918, 37.800768],\n        [-122.399253, 37.80084],\n        [-122.399144, 37.800912],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.397792, 37.799184],\n        [-122.397882, 37.799145],\n        [-122.397961, 37.799103],\n        [-122.398026, 37.799069],\n        [-122.398097, 37.799039],\n        [-122.398222, 37.798989],\n        [-122.398334, 37.798957],\n        [-122.398615, 37.798906],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"49-42\": {\n    \"distance\": 1.3419059695033846,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390979, 37.790082],\n        [-122.391972, 37.79087],\n        [-122.392525, 37.79131],\n        [-122.393119, 37.791781],\n        [-122.393228, 37.791868],\n        [-122.394077, 37.792542],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"50-42\": {\n    \"distance\": 0.8459474385061305,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393177, 37.794466],\n        [-122.393198, 37.794411],\n        [-122.393258, 37.794377],\n        [-122.393362, 37.794385],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"51-42\": {\n    \"distance\": 1.0787529092700416,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"53-42\": {\n    \"distance\": 2.0631752522873565,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"54-42\": {\n    \"distance\": 1.650840817197063,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390907, 37.791534],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"55-42\": {\n    \"distance\": 1.1831105592865758,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793494],\n        [-122.397792, 37.794428],\n        [-122.396732, 37.794568],\n        [-122.396649, 37.794578],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"56-42\": {\n    \"distance\": 0.7901623869456978,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793494],\n        [-122.397792, 37.794428],\n        [-122.396732, 37.794568],\n        [-122.396649, 37.794578],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"57-42\": {\n    \"distance\": 2.467109875890012,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"58-42\": {\n    \"distance\": 3.3233039894152565,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"59-42\": {\n    \"distance\": 3.275613275604938,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416859, 37.780507],\n        [-122.41597, 37.780627],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"60-42\": {\n    \"distance\": 1.1776476279582064,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403356, 37.805116],\n        [-122.403268, 37.805142],\n        [-122.403174, 37.80514],\n        [-122.402723, 37.804821],\n        [-122.402206, 37.804441],\n        [-122.402155, 37.804399],\n        [-122.40207, 37.804321],\n        [-122.401904, 37.804165],\n        [-122.401794, 37.804076],\n        [-122.401236, 37.80342],\n        [-122.400903, 37.803058],\n        [-122.400448, 37.802547],\n        [-122.399792, 37.801819],\n        [-122.399165, 37.801123],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.397792, 37.799184],\n        [-122.397882, 37.799145],\n        [-122.397961, 37.799103],\n        [-122.398026, 37.799069],\n        [-122.398097, 37.799039],\n        [-122.398222, 37.798989],\n        [-122.398334, 37.798957],\n        [-122.398615, 37.798906],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"61-42\": {\n    \"distance\": 2.8184573912296713,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.400543, 37.79026],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"62-42\": {\n    \"distance\": 2.0733794851311327,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.400543, 37.79026],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"65-42\": {\n    \"distance\": 4.416895277662187,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.403807, 37.770119],\n        [-122.403857, 37.77005],\n        [-122.403758, 37.769991],\n        [-122.403733, 37.769886],\n        [-122.403774, 37.76982],\n        [-122.403881, 37.769773],\n        [-122.40396, 37.769777],\n        [-122.404031, 37.769808],\n        [-122.404078, 37.769861],\n        [-122.404085, 37.769951],\n        [-122.404048, 37.770007],\n        [-122.403939, 37.770055],\n        [-122.404014, 37.770133],\n        [-122.404749, 37.770735],\n        [-122.404957, 37.770906],\n        [-122.405357, 37.771232],\n        [-122.405451, 37.771303],\n        [-122.405569, 37.77135],\n        [-122.405964, 37.771631],\n        [-122.406473, 37.771951],\n        [-122.406797, 37.772255],\n        [-122.406939, 37.772376],\n        [-122.407044, 37.772488],\n        [-122.407267, 37.77272],\n        [-122.407773, 37.773152],\n        [-122.407848, 37.773298],\n        [-122.407866, 37.773373],\n        [-122.407872, 37.773448],\n        [-122.407859, 37.773513],\n        [-122.407832, 37.773582],\n        [-122.407792, 37.77365],\n        [-122.407736, 37.77371],\n        [-122.407502, 37.773872],\n        [-122.407407, 37.773944],\n        [-122.407311, 37.774021],\n        [-122.407231, 37.774093],\n        [-122.407156, 37.774174],\n        [-122.407086, 37.774261],\n        [-122.406787, 37.774665],\n        [-122.406654, 37.774836],\n        [-122.406518, 37.774999],\n        [-122.406378, 37.775151],\n        [-122.406219, 37.775314],\n        [-122.406057, 37.775469],\n        [-122.405907, 37.775601],\n        [-122.405758, 37.775723],\n        [-122.405602, 37.775839],\n        [-122.405467, 37.775927],\n        [-122.405315, 37.776008],\n        [-122.405095, 37.776113],\n        [-122.403258, 37.777202],\n        [-122.402994, 37.777365],\n        [-122.402737, 37.777532],\n        [-122.402476, 37.777712],\n        [-122.402207, 37.777903],\n        [-122.401954, 37.778094],\n        [-122.40129, 37.778716],\n        [-122.401106, 37.778873],\n        [-122.400991, 37.77897],\n        [-122.400526, 37.779359],\n        [-122.400369, 37.7795],\n        [-122.400219, 37.779645],\n        [-122.400086, 37.779781],\n        [-122.399974, 37.779903],\n        [-122.399869, 37.780029],\n        [-122.399786, 37.78014],\n        [-122.399726, 37.780249],\n        [-122.39968, 37.780359],\n        [-122.399649, 37.780466],\n        [-122.39963, 37.78056],\n        [-122.399619, 37.780658],\n        [-122.399635, 37.780791],\n        [-122.400158, 37.781211],\n        [-122.400376, 37.781387],\n        [-122.400621, 37.781581],\n        [-122.401175, 37.782025],\n        [-122.401703, 37.782447],\n        [-122.401932, 37.782633],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"63-42\": {\n    \"distance\": 1.7153058730662893,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.398588, 37.792408],\n        [-122.397552, 37.792541],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"64-42\": {\n    \"distance\": 2.530202890769867,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.400543, 37.79026],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"66-42\": {\n    \"distance\": 4.035620359257059,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.416447, 37.775699],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.417677, 37.776665],\n        [-122.417784, 37.776729],\n        [-122.417839, 37.77677],\n        [-122.417889, 37.776816],\n        [-122.417916, 37.776859],\n        [-122.418049, 37.777505],\n        [-122.417586, 37.777568],\n        [-122.417475, 37.777584],\n        [-122.416945, 37.777652],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"67-42\": {\n    \"distance\": 3.1894189064866234,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"68-42\": {\n    \"distance\": 1.9900201035049672,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.399502, 37.786634],\n        [-122.399975, 37.787011],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.400543, 37.79026],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"69-42\": {\n    \"distance\": 3.550429192506269,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"71-42\": {\n    \"distance\": 1.9863759291217815,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"70-42\": {\n    \"distance\": 3.4470730123442763,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.400543, 37.79026],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"72-42\": {\n    \"distance\": 2.61810201583513,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"73-42\": {\n    \"distance\": 0.987343323807693,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406256, 37.79792],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"74-42\": {\n    \"distance\": 0.8279476177455772,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"75-42\": {\n    \"distance\": 0.8957311276628979,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"76-42\": {\n    \"distance\": 1.6577623582699226,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"77-42\": {\n    \"distance\": 1.13723068756036,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"82-42\": {\n    \"distance\": 0.3743336480929386,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398382, 37.797284]\n      ]\n    }\n  },\n  \"47-45\": {\n    \"distance\": 0.9122632606979215,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"48-45\": {\n    \"distance\": 1.633127320078912,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.39918, 37.800768],\n        [-122.399253, 37.80084],\n        [-122.399337, 37.800794],\n        [-122.399427, 37.800744],\n        [-122.399475, 37.800725],\n        [-122.39954, 37.800707],\n        [-122.400249, 37.800617],\n        [-122.400061, 37.799678],\n        [-122.399891, 37.798833],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404012, 37.79364],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"49-45\": {\n    \"distance\": 1.5342540662846418,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390979, 37.790082],\n        [-122.391972, 37.79087],\n        [-122.392525, 37.79131],\n        [-122.393119, 37.791781],\n        [-122.393228, 37.791868],\n        [-122.394077, 37.792542],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.397611, 37.79352],\n        [-122.398706, 37.793376],\n        [-122.398783, 37.793366],\n        [-122.398903, 37.79335],\n        [-122.399959, 37.793209],\n        [-122.401128, 37.793073],\n        [-122.401958, 37.792954],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"50-45\": {\n    \"distance\": 1.7232604017487843,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393177, 37.794466],\n        [-122.393198, 37.794411],\n        [-122.393258, 37.794377],\n        [-122.393362, 37.794385],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396834, 37.795467],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.400335, 37.795029],\n        [-122.401337, 37.794864],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404012, 37.79364],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"51-45\": {\n    \"distance\": 1.536198744580889,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.397611, 37.79352],\n        [-122.398706, 37.793376],\n        [-122.398783, 37.793366],\n        [-122.398903, 37.79335],\n        [-122.399959, 37.793209],\n        [-122.401128, 37.793073],\n        [-122.401958, 37.792954],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"53-45\": {\n    \"distance\": 1.407608367370789,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"54-45\": {\n    \"distance\": 2.0162408954673996,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390979, 37.790082],\n        [-122.391972, 37.79087],\n        [-122.392525, 37.79131],\n        [-122.393119, 37.791781],\n        [-122.393228, 37.791868],\n        [-122.394077, 37.792542],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.397611, 37.79352],\n        [-122.398706, 37.793376],\n        [-122.398783, 37.793366],\n        [-122.398903, 37.79335],\n        [-122.399959, 37.793209],\n        [-122.401128, 37.793073],\n        [-122.401958, 37.792954],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"55-45\": {\n    \"distance\": 1.1735343694861349,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397611, 37.79352],\n        [-122.398706, 37.793376],\n        [-122.398783, 37.793366],\n        [-122.398903, 37.79335],\n        [-122.399959, 37.793209],\n        [-122.401128, 37.793073],\n        [-122.401958, 37.792954],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"56-45\": {\n    \"distance\": 0.7805861971452568,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397611, 37.79352],\n        [-122.398706, 37.793376],\n        [-122.398783, 37.793366],\n        [-122.398903, 37.79335],\n        [-122.399959, 37.793209],\n        [-122.401128, 37.793073],\n        [-122.401958, 37.792954],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"57-45\": {\n    \"distance\": 1.8115429909734444,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"58-45\": {\n    \"distance\": 2.6677371044986877,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"59-45\": {\n    \"distance\": 2.620046390688369,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416859, 37.780507],\n        [-122.41597, 37.780627],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"60-45\": {\n    \"distance\": 1.8019724998090139,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403561, 37.805122],\n        [-122.403542, 37.804989],\n        [-122.403525, 37.804897],\n        [-122.403376, 37.804122],\n        [-122.403358, 37.804032],\n        [-122.403345, 37.803964],\n        [-122.403189, 37.803176],\n        [-122.403174, 37.803104],\n        [-122.403156, 37.803014],\n        [-122.402989, 37.802174],\n        [-122.402891, 37.801696],\n        [-122.402804, 37.801267],\n        [-122.40261, 37.800315],\n        [-122.402419, 37.799377],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404012, 37.79364],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"61-45\": {\n    \"distance\": 2.074865466512417,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"62-45\": {\n    \"distance\": 1.3297875604138785,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"63-45\": {\n    \"distance\": 1.3191081610526474,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399707, 37.791309],\n        [-122.400744, 37.791177],\n        [-122.40113, 37.791128],\n        [-122.402005, 37.791016],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"64-45\": {\n    \"distance\": 1.7866109660526126,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"65-45\": {\n    \"distance\": 3.7613283927456176,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.403807, 37.770119],\n        [-122.403857, 37.77005],\n        [-122.403758, 37.769991],\n        [-122.403733, 37.769886],\n        [-122.403774, 37.76982],\n        [-122.403881, 37.769773],\n        [-122.40396, 37.769777],\n        [-122.404031, 37.769808],\n        [-122.404078, 37.769861],\n        [-122.404085, 37.769951],\n        [-122.404048, 37.770007],\n        [-122.403939, 37.770055],\n        [-122.404014, 37.770133],\n        [-122.404749, 37.770735],\n        [-122.404957, 37.770906],\n        [-122.405357, 37.771232],\n        [-122.405451, 37.771303],\n        [-122.405569, 37.77135],\n        [-122.405964, 37.771631],\n        [-122.406473, 37.771951],\n        [-122.406797, 37.772255],\n        [-122.406939, 37.772376],\n        [-122.407044, 37.772488],\n        [-122.407267, 37.77272],\n        [-122.407773, 37.773152],\n        [-122.407848, 37.773298],\n        [-122.407866, 37.773373],\n        [-122.407872, 37.773448],\n        [-122.407859, 37.773513],\n        [-122.407832, 37.773582],\n        [-122.407792, 37.77365],\n        [-122.407736, 37.77371],\n        [-122.407502, 37.773872],\n        [-122.407407, 37.773944],\n        [-122.407311, 37.774021],\n        [-122.407231, 37.774093],\n        [-122.407156, 37.774174],\n        [-122.407086, 37.774261],\n        [-122.406787, 37.774665],\n        [-122.406654, 37.774836],\n        [-122.406518, 37.774999],\n        [-122.406378, 37.775151],\n        [-122.406219, 37.775314],\n        [-122.406057, 37.775469],\n        [-122.405907, 37.775601],\n        [-122.405758, 37.775723],\n        [-122.405602, 37.775839],\n        [-122.405467, 37.775927],\n        [-122.405315, 37.776008],\n        [-122.405095, 37.776113],\n        [-122.403258, 37.777202],\n        [-122.402994, 37.777365],\n        [-122.402737, 37.777532],\n        [-122.402476, 37.777712],\n        [-122.402207, 37.777903],\n        [-122.401954, 37.778094],\n        [-122.40129, 37.778716],\n        [-122.401106, 37.778873],\n        [-122.400991, 37.77897],\n        [-122.400526, 37.779359],\n        [-122.400369, 37.7795],\n        [-122.400219, 37.779645],\n        [-122.400086, 37.779781],\n        [-122.399974, 37.779903],\n        [-122.399869, 37.780029],\n        [-122.399786, 37.78014],\n        [-122.399726, 37.780249],\n        [-122.39968, 37.780359],\n        [-122.399649, 37.780466],\n        [-122.39963, 37.78056],\n        [-122.399619, 37.780658],\n        [-122.399635, 37.780791],\n        [-122.400158, 37.781211],\n        [-122.400376, 37.781387],\n        [-122.400621, 37.781581],\n        [-122.401175, 37.782025],\n        [-122.401703, 37.782447],\n        [-122.401932, 37.782633],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"66-45\": {\n    \"distance\": 3.3800534743404906,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.416447, 37.775699],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.417677, 37.776665],\n        [-122.417784, 37.776729],\n        [-122.417839, 37.77677],\n        [-122.417889, 37.776816],\n        [-122.417916, 37.776859],\n        [-122.418049, 37.777505],\n        [-122.417586, 37.777568],\n        [-122.417475, 37.777584],\n        [-122.416945, 37.777652],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"67-45\": {\n    \"distance\": 2.5338520215700546,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"68-45\": {\n    \"distance\": 1.246428178787713,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.399502, 37.786634],\n        [-122.399975, 37.787011],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"69-45\": {\n    \"distance\": 2.730333607609862,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"70-45\": {\n    \"distance\": 2.7034810876270208,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"71-45\": {\n    \"distance\": 1.1405005941778625,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408615, 37.789226],\n        [-122.407752, 37.789333],\n        [-122.406986, 37.789429],\n        [-122.405404, 37.78962],\n        [-122.40459, 37.789735],\n        [-122.404208, 37.789783],\n        [-122.403866, 37.789826],\n        [-122.40303, 37.789932],\n        [-122.402552, 37.789995],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"72-45\": {\n    \"distance\": 1.9625351309185626,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"73-45\": {\n    \"distance\": 0.8464594310519479,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404012, 37.79364],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"74-45\": {\n    \"distance\": 1.0202957145268345,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.397611, 37.79352],\n        [-122.398706, 37.793376],\n        [-122.398783, 37.793366],\n        [-122.398903, 37.79335],\n        [-122.399959, 37.793209],\n        [-122.401128, 37.793073],\n        [-122.401958, 37.792954],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"75-45\": {\n    \"distance\": 0.7015359939384715,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399707, 37.791309],\n        [-122.400744, 37.791177],\n        [-122.40113, 37.791128],\n        [-122.402005, 37.791016],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"76-45\": {\n    \"distance\": 1.002195473353355,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"77-45\": {\n    \"distance\": 0.759423136376079,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"82-45\": {\n    \"distance\": 1.120763005972831,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404012, 37.79364],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"48-47\": {\n    \"distance\": 2.0695308939177868,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.39918, 37.800768],\n        [-122.399253, 37.80084],\n        [-122.399144, 37.800912],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"49-47\": {\n    \"distance\": 1.6175484137187517,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390979, 37.790082],\n        [-122.391972, 37.79087],\n        [-122.392525, 37.79131],\n        [-122.393119, 37.791781],\n        [-122.393228, 37.791868],\n        [-122.394077, 37.792542],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"50-47\": {\n    \"distance\": 1.5758556860713495,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393072, 37.79443],\n        [-122.392777, 37.794156],\n        [-122.392443, 37.793844],\n        [-122.392512, 37.793786],\n        [-122.392595, 37.793719],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"51-47\": {\n    \"distance\": 1.6194930920149988,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"53-47\": {\n    \"distance\": 0.9495567719947818,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"54-47\": {\n    \"distance\": 2.09953524290151,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390979, 37.790082],\n        [-122.391972, 37.79087],\n        [-122.392525, 37.79131],\n        [-122.393119, 37.791781],\n        [-122.393228, 37.791868],\n        [-122.394077, 37.792542],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"55-47\": {\n    \"distance\": 1.1627341147688568,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"56-47\": {\n    \"distance\": 0.7697859424279787,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"57-47\": {\n    \"distance\": 1.353491395597437,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"58-47\": {\n    \"distance\": 2.209685509122681,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"59-47\": {\n    \"distance\": 2.161994795312362,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416859, 37.780507],\n        [-122.41597, 37.780627],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"60-47\": {\n    \"distance\": 2.5524529321006226,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403561, 37.805122],\n        [-122.403542, 37.804989],\n        [-122.403525, 37.804897],\n        [-122.403376, 37.804122],\n        [-122.403358, 37.804032],\n        [-122.403345, 37.803964],\n        [-122.403189, 37.803176],\n        [-122.403174, 37.803104],\n        [-122.403156, 37.803014],\n        [-122.402989, 37.802174],\n        [-122.402891, 37.801696],\n        [-122.402804, 37.801267],\n        [-122.40261, 37.800315],\n        [-122.402419, 37.799377],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"61-47\": {\n    \"distance\": 1.6168138711364097,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"62-47\": {\n    \"distance\": 0.8717359650378712,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"63-47\": {\n    \"distance\": 1.1604439691322206,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"65-47\": {\n    \"distance\": 3.3032767973696107,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.403807, 37.770119],\n        [-122.403857, 37.77005],\n        [-122.403758, 37.769991],\n        [-122.403733, 37.769886],\n        [-122.403774, 37.76982],\n        [-122.403881, 37.769773],\n        [-122.40396, 37.769777],\n        [-122.404031, 37.769808],\n        [-122.404078, 37.769861],\n        [-122.404085, 37.769951],\n        [-122.404048, 37.770007],\n        [-122.403939, 37.770055],\n        [-122.404014, 37.770133],\n        [-122.404749, 37.770735],\n        [-122.404957, 37.770906],\n        [-122.405357, 37.771232],\n        [-122.405451, 37.771303],\n        [-122.405569, 37.77135],\n        [-122.405964, 37.771631],\n        [-122.406473, 37.771951],\n        [-122.406797, 37.772255],\n        [-122.406939, 37.772376],\n        [-122.407044, 37.772488],\n        [-122.407267, 37.77272],\n        [-122.407773, 37.773152],\n        [-122.407848, 37.773298],\n        [-122.407866, 37.773373],\n        [-122.407872, 37.773448],\n        [-122.407859, 37.773513],\n        [-122.407832, 37.773582],\n        [-122.407792, 37.77365],\n        [-122.407736, 37.77371],\n        [-122.407502, 37.773872],\n        [-122.407407, 37.773944],\n        [-122.407311, 37.774021],\n        [-122.407231, 37.774093],\n        [-122.407156, 37.774174],\n        [-122.407086, 37.774261],\n        [-122.406787, 37.774665],\n        [-122.406654, 37.774836],\n        [-122.406518, 37.774999],\n        [-122.406378, 37.775151],\n        [-122.406219, 37.775314],\n        [-122.406057, 37.775469],\n        [-122.405907, 37.775601],\n        [-122.405758, 37.775723],\n        [-122.405602, 37.775839],\n        [-122.405467, 37.775927],\n        [-122.405315, 37.776008],\n        [-122.405095, 37.776113],\n        [-122.403258, 37.777202],\n        [-122.402994, 37.777365],\n        [-122.402737, 37.777532],\n        [-122.402476, 37.777712],\n        [-122.402207, 37.777903],\n        [-122.401954, 37.778094],\n        [-122.40129, 37.778716],\n        [-122.401106, 37.778873],\n        [-122.400991, 37.77897],\n        [-122.400526, 37.779359],\n        [-122.400369, 37.7795],\n        [-122.400219, 37.779645],\n        [-122.400086, 37.779781],\n        [-122.399974, 37.779903],\n        [-122.399869, 37.780029],\n        [-122.399786, 37.78014],\n        [-122.399726, 37.780249],\n        [-122.39968, 37.780359],\n        [-122.399649, 37.780466],\n        [-122.39963, 37.78056],\n        [-122.399619, 37.780658],\n        [-122.399635, 37.780791],\n        [-122.400158, 37.781211],\n        [-122.400376, 37.781387],\n        [-122.400621, 37.781581],\n        [-122.401175, 37.782025],\n        [-122.401703, 37.782447],\n        [-122.401932, 37.782633],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"66-47\": {\n    \"distance\": 2.9220018789644837,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.416447, 37.775699],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.417677, 37.776665],\n        [-122.417784, 37.776729],\n        [-122.417839, 37.77677],\n        [-122.417889, 37.776816],\n        [-122.417916, 37.776859],\n        [-122.418049, 37.777505],\n        [-122.417586, 37.777568],\n        [-122.417475, 37.777584],\n        [-122.416945, 37.777652],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"64-47\": {\n    \"distance\": 1.3285593706766052,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"67-47\": {\n    \"distance\": 2.0758004261940473,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"68-47\": {\n    \"distance\": 0.7883765834117057,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.399502, 37.786634],\n        [-122.399975, 37.787011],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"69-47\": {\n    \"distance\": 2.272282012233855,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"71-47\": {\n    \"distance\": 0.8727574488292068,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"70-47\": {\n    \"distance\": 2.245429492251014,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"72-47\": {\n    \"distance\": 1.5044835355425552,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"73-47\": {\n    \"distance\": 1.5969398633435556,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"74-47\": {\n    \"distance\": 1.1035900619609444,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"77-47\": {\n    \"distance\": 0.3013715410000719,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"76-47\": {\n    \"distance\": 0.5441438779773476,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"75-47\": {\n    \"distance\": 0.5428718020180451,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"82-47\": {\n    \"distance\": 1.8712434382644392,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403446, 37.78892]\n      ]\n    }\n  },\n  \"49-48\": {\n    \"distance\": 1.4591094275378496,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390907, 37.791534],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395523, 37.7966],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"50-48\": {\n    \"distance\": 0.9338776812012867,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393177, 37.794466],\n        [-122.393198, 37.794411],\n        [-122.393258, 37.794377],\n        [-122.393362, 37.794385],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395523, 37.7966],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"51-48\": {\n    \"distance\": 1.1666869713211792,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"53-48\": {\n    \"distance\": 2.4149832777220146,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"54-48\": {\n    \"distance\": 1.7387748792482005,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390907, 37.791534],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"55-48\": {\n    \"distance\": 1.5349185847212339,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793494],\n        [-122.397792, 37.794428],\n        [-122.396732, 37.794568],\n        [-122.396649, 37.794578],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"56-48\": {\n    \"distance\": 1.141970412380356,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793494],\n        [-122.397792, 37.794428],\n        [-122.396732, 37.794568],\n        [-122.396649, 37.794578],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"57-48\": {\n    \"distance\": 2.8189179013246695,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"58-48\": {\n    \"distance\": 3.675112014849914,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"59-48\": {\n    \"distance\": 3.6274213010395955,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416859, 37.780507],\n        [-122.41597, 37.780627],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"60-48\": {\n    \"distance\": 1.0165841501620876,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403356, 37.805116],\n        [-122.403268, 37.805142],\n        [-122.403174, 37.80514],\n        [-122.402723, 37.804821],\n        [-122.402206, 37.804441],\n        [-122.402155, 37.804399],\n        [-122.40207, 37.804321],\n        [-122.401904, 37.804165],\n        [-122.401794, 37.804076],\n        [-122.401236, 37.80342],\n        [-122.400903, 37.803058],\n        [-122.400448, 37.802547],\n        [-122.399792, 37.801819],\n        [-122.399165, 37.801123],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"61-48\": {\n    \"distance\": 2.667975484929823,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.389683, 37.779916],\n        [-122.388991, 37.780472],\n        [-122.388854, 37.780588],\n        [-122.388733, 37.780723],\n        [-122.388646, 37.780845],\n        [-122.388573, 37.780974],\n        [-122.388522, 37.781102],\n        [-122.388485, 37.781222],\n        [-122.388464, 37.781351],\n        [-122.388431, 37.781791],\n        [-122.388424, 37.781908],\n        [-122.388376, 37.782545],\n        [-122.388309, 37.783373],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390907, 37.791534],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"62-48\": {\n    \"distance\": 2.179403100324523,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398615, 37.798906],\n        [-122.398334, 37.798957],\n        [-122.398222, 37.798989],\n        [-122.398097, 37.799039],\n        [-122.398026, 37.799069],\n        [-122.397961, 37.799103],\n        [-122.397882, 37.799145],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"63-48\": {\n    \"distance\": 1.913114072927713,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398615, 37.798906],\n        [-122.398334, 37.798957],\n        [-122.398222, 37.798989],\n        [-122.398097, 37.799039],\n        [-122.398026, 37.799069],\n        [-122.397961, 37.799103],\n        [-122.397882, 37.799145],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"64-48\": {\n    \"distance\": 2.6362266257850635,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398615, 37.798906],\n        [-122.398334, 37.798957],\n        [-122.398222, 37.798989],\n        [-122.398097, 37.799039],\n        [-122.398026, 37.799069],\n        [-122.397961, 37.799103],\n        [-122.397882, 37.799145],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"65-48\": {\n    \"distance\": 4.768703303096845,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.403807, 37.770119],\n        [-122.403857, 37.77005],\n        [-122.403758, 37.769991],\n        [-122.403733, 37.769886],\n        [-122.403774, 37.76982],\n        [-122.403881, 37.769773],\n        [-122.40396, 37.769777],\n        [-122.404031, 37.769808],\n        [-122.404078, 37.769861],\n        [-122.404085, 37.769951],\n        [-122.404048, 37.770007],\n        [-122.403939, 37.770055],\n        [-122.404014, 37.770133],\n        [-122.404749, 37.770735],\n        [-122.404957, 37.770906],\n        [-122.405357, 37.771232],\n        [-122.405451, 37.771303],\n        [-122.405569, 37.77135],\n        [-122.405964, 37.771631],\n        [-122.406473, 37.771951],\n        [-122.406797, 37.772255],\n        [-122.406939, 37.772376],\n        [-122.407044, 37.772488],\n        [-122.407267, 37.77272],\n        [-122.407773, 37.773152],\n        [-122.407848, 37.773298],\n        [-122.407866, 37.773373],\n        [-122.407872, 37.773448],\n        [-122.407859, 37.773513],\n        [-122.407832, 37.773582],\n        [-122.407792, 37.77365],\n        [-122.407736, 37.77371],\n        [-122.407502, 37.773872],\n        [-122.407407, 37.773944],\n        [-122.407311, 37.774021],\n        [-122.407231, 37.774093],\n        [-122.407156, 37.774174],\n        [-122.407086, 37.774261],\n        [-122.406787, 37.774665],\n        [-122.406654, 37.774836],\n        [-122.406518, 37.774999],\n        [-122.406378, 37.775151],\n        [-122.406219, 37.775314],\n        [-122.406057, 37.775469],\n        [-122.405907, 37.775601],\n        [-122.405758, 37.775723],\n        [-122.405602, 37.775839],\n        [-122.405467, 37.775927],\n        [-122.405315, 37.776008],\n        [-122.405095, 37.776113],\n        [-122.403258, 37.777202],\n        [-122.402994, 37.777365],\n        [-122.402737, 37.777532],\n        [-122.402476, 37.777712],\n        [-122.402207, 37.777903],\n        [-122.401954, 37.778094],\n        [-122.40129, 37.778716],\n        [-122.401106, 37.778873],\n        [-122.400991, 37.77897],\n        [-122.400526, 37.779359],\n        [-122.400369, 37.7795],\n        [-122.400219, 37.779645],\n        [-122.400086, 37.779781],\n        [-122.399974, 37.779903],\n        [-122.399869, 37.780029],\n        [-122.399786, 37.78014],\n        [-122.399726, 37.780249],\n        [-122.39968, 37.780359],\n        [-122.399649, 37.780466],\n        [-122.39963, 37.78056],\n        [-122.399619, 37.780658],\n        [-122.399635, 37.780791],\n        [-122.400158, 37.781211],\n        [-122.400376, 37.781387],\n        [-122.400621, 37.781581],\n        [-122.401175, 37.782025],\n        [-122.401703, 37.782447],\n        [-122.401932, 37.782633],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"66-48\": {\n    \"distance\": 4.3874283846917175,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.416447, 37.775699],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.417677, 37.776665],\n        [-122.417784, 37.776729],\n        [-122.417839, 37.77677],\n        [-122.417889, 37.776816],\n        [-122.417916, 37.776859],\n        [-122.418049, 37.777505],\n        [-122.417586, 37.777568],\n        [-122.417475, 37.777584],\n        [-122.416945, 37.777652],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"67-48\": {\n    \"distance\": 3.541226931921281,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"68-48\": {\n    \"distance\": 2.3418281289396248,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.399502, 37.786634],\n        [-122.399975, 37.787011],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.400543, 37.79026],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"69-48\": {\n    \"distance\": 3.352003311372965,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390907, 37.791534],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"70-48\": {\n    \"distance\": 3.3251507913901235,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390907, 37.791534],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"71-48\": {\n    \"distance\": 2.338183954556439,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"72-48\": {\n    \"distance\": 2.969910041269788,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"73-48\": {\n    \"distance\": 1.0011472472215381,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406256, 37.79792],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398615, 37.798906],\n        [-122.398334, 37.798957],\n        [-122.398222, 37.798989],\n        [-122.398097, 37.799039],\n        [-122.398026, 37.799069],\n        [-122.397961, 37.799103],\n        [-122.397882, 37.799145],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"74-48\": {\n    \"distance\": 1.0960533155075791,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"75-48\": {\n    \"distance\": 1.247539153097556,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"76-48\": {\n    \"distance\": 2.0095703837045806,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"77-48\": {\n    \"distance\": 1.4890387129950178,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"82-48\": {\n    \"distance\": 0.388137571506784,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398615, 37.798906],\n        [-122.398334, 37.798957],\n        [-122.398222, 37.798989],\n        [-122.398097, 37.799039],\n        [-122.398026, 37.799069],\n        [-122.397961, 37.799103],\n        [-122.397882, 37.799145],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.398487, 37.799976]\n      ]\n    }\n  },\n  \"50-49\": {\n    \"distance\": 1.0610941227988973,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393072, 37.79443],\n        [-122.392777, 37.794156],\n        [-122.392443, 37.793844],\n        [-122.392341, 37.793754],\n        [-122.39218, 37.793603],\n        [-122.391994, 37.793441],\n        [-122.391192, 37.792766],\n        [-122.391053, 37.792627],\n        [-122.390976, 37.792533],\n        [-122.390901, 37.792437],\n        [-122.390811, 37.792323],\n        [-122.390735, 37.79221],\n        [-122.390661, 37.792078],\n        [-122.390594, 37.791942],\n        [-122.390482, 37.791701],\n        [-122.39041, 37.791547],\n        [-122.390326, 37.791396],\n        [-122.390237, 37.791261],\n        [-122.390133, 37.791127],\n        [-122.39002, 37.791001],\n        [-122.389934, 37.790912],\n        [-122.389827, 37.790813],\n        [-122.389433, 37.790495],\n        [-122.388623, 37.789839],\n        [-122.388512, 37.789741],\n        [-122.388411, 37.78964],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"51-49\": {\n    \"distance\": 0.7610112027779683,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.390976, 37.792533],\n        [-122.390901, 37.792437],\n        [-122.390811, 37.792323],\n        [-122.390735, 37.79221],\n        [-122.390661, 37.792078],\n        [-122.390594, 37.791942],\n        [-122.390482, 37.791701],\n        [-122.39041, 37.791547],\n        [-122.390326, 37.791396],\n        [-122.390237, 37.791261],\n        [-122.390133, 37.791127],\n        [-122.39002, 37.791001],\n        [-122.389934, 37.790912],\n        [-122.389827, 37.790813],\n        [-122.389433, 37.790495],\n        [-122.388623, 37.789839],\n        [-122.388512, 37.789741],\n        [-122.388411, 37.78964],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"53-49\": {\n    \"distance\": 2.489810948221332,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"54-49\": {\n    \"distance\": 0.4819872650875055,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"55-49\": {\n    \"distance\": 0.8981644022818197,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.394467, 37.788691],\n        [-122.394207, 37.788531],\n        [-122.394094, 37.788442],\n        [-122.393758, 37.788167],\n        [-122.393616, 37.788003],\n        [-122.392994, 37.787515],\n        [-122.39207, 37.786773],\n        [-122.391407, 37.787297],\n        [-122.390971, 37.787643],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"56-49\": {\n    \"distance\": 1.3294418798470382,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397611, 37.79352],\n        [-122.39648, 37.793664],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"57-49\": {\n    \"distance\": 2.073507277380827,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396301, 37.783425],\n        [-122.395714, 37.78389],\n        [-122.395178, 37.784312],\n        [-122.394809, 37.784606],\n        [-122.394414, 37.784922],\n        [-122.394038, 37.785216],\n        [-122.393426, 37.7857],\n        [-122.392949, 37.786077],\n        [-122.39207, 37.786773],\n        [-122.391407, 37.787297],\n        [-122.390971, 37.787643],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"58-49\": {\n    \"distance\": 3.7499396853492306,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"59-49\": {\n    \"distance\": 3.702248971538912,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416859, 37.780507],\n        [-122.41597, 37.780627],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"60-49\": {\n    \"distance\": 2.467353596339898,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403356, 37.805116],\n        [-122.403268, 37.805142],\n        [-122.403174, 37.80514],\n        [-122.402723, 37.804821],\n        [-122.402206, 37.804441],\n        [-122.402155, 37.804399],\n        [-122.40207, 37.804321],\n        [-122.401904, 37.804165],\n        [-122.401794, 37.804076],\n        [-122.401236, 37.80342],\n        [-122.400903, 37.803058],\n        [-122.400448, 37.802547],\n        [-122.399792, 37.801819],\n        [-122.399165, 37.801123],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393072, 37.79443],\n        [-122.392777, 37.794156],\n        [-122.392443, 37.793844],\n        [-122.392341, 37.793754],\n        [-122.39218, 37.793603],\n        [-122.391994, 37.793441],\n        [-122.391192, 37.792766],\n        [-122.391053, 37.792627],\n        [-122.390976, 37.792533],\n        [-122.390901, 37.792437],\n        [-122.390811, 37.792323],\n        [-122.390735, 37.79221],\n        [-122.390661, 37.792078],\n        [-122.390594, 37.791942],\n        [-122.390482, 37.791701],\n        [-122.39041, 37.791547],\n        [-122.390326, 37.791396],\n        [-122.390237, 37.791261],\n        [-122.390133, 37.791127],\n        [-122.39002, 37.791001],\n        [-122.389934, 37.790912],\n        [-122.389827, 37.790813],\n        [-122.389433, 37.790495],\n        [-122.388623, 37.789839],\n        [-122.388512, 37.789741],\n        [-122.388411, 37.78964],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"61-49\": {\n    \"distance\": 1.4111878707691285,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.389683, 37.779916],\n        [-122.388991, 37.780472],\n        [-122.388854, 37.780588],\n        [-122.388733, 37.780723],\n        [-122.388646, 37.780845],\n        [-122.388573, 37.780974],\n        [-122.388522, 37.781102],\n        [-122.388485, 37.781222],\n        [-122.388464, 37.781351],\n        [-122.388431, 37.781791],\n        [-122.388424, 37.781908],\n        [-122.388376, 37.782545],\n        [-122.388309, 37.783373],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"62-49\": {\n    \"distance\": 0.9705334756546822,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394809, 37.784606],\n        [-122.394414, 37.784922],\n        [-122.394038, 37.785216],\n        [-122.393426, 37.7857],\n        [-122.392949, 37.786077],\n        [-122.39207, 37.786773],\n        [-122.391407, 37.787297],\n        [-122.390971, 37.787643],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"63-49\": {\n    \"distance\": 1.186592229532913,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394467, 37.788691],\n        [-122.394207, 37.788531],\n        [-122.394094, 37.788442],\n        [-122.393758, 37.788167],\n        [-122.393616, 37.788003],\n        [-122.392994, 37.787515],\n        [-122.39207, 37.786773],\n        [-122.391407, 37.787297],\n        [-122.390971, 37.787643],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"64-49\": {\n    \"distance\": 1.1397907160295566,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.394809, 37.784606],\n        [-122.394414, 37.784922],\n        [-122.394038, 37.785216],\n        [-122.393426, 37.7857],\n        [-122.392949, 37.786077],\n        [-122.39207, 37.786773],\n        [-122.391407, 37.787297],\n        [-122.390971, 37.787643],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"65-49\": {\n    \"distance\": 2.926384388658131,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"66-49\": {\n    \"distance\": 3.9646481387574726,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.415508, 37.775602],\n        [-122.415145, 37.775891],\n        [-122.414716, 37.776233],\n        [-122.414171, 37.775802],\n        [-122.413714, 37.775439],\n        [-122.413157, 37.774996],\n        [-122.412622, 37.774568],\n        [-122.412165, 37.774203],\n        [-122.411627, 37.773773],\n        [-122.411074, 37.77333],\n        [-122.410692, 37.773024],\n        [-122.410083, 37.772537],\n        [-122.409693, 37.772845],\n        [-122.408922, 37.773454],\n        [-122.408666, 37.773656],\n        [-122.408445, 37.773688],\n        [-122.408286, 37.773712],\n        [-122.407822, 37.773761],\n        [-122.40771, 37.773783],\n        [-122.407609, 37.773817],\n        [-122.407502, 37.773872],\n        [-122.407407, 37.773944],\n        [-122.407311, 37.774021],\n        [-122.407231, 37.774093],\n        [-122.407156, 37.774174],\n        [-122.407086, 37.774261],\n        [-122.406787, 37.774665],\n        [-122.406654, 37.774836],\n        [-122.406518, 37.774999],\n        [-122.406378, 37.775151],\n        [-122.406219, 37.775314],\n        [-122.406057, 37.775469],\n        [-122.405907, 37.775601],\n        [-122.405758, 37.775723],\n        [-122.405602, 37.775839],\n        [-122.405467, 37.775927],\n        [-122.405315, 37.776008],\n        [-122.405095, 37.776113],\n        [-122.403258, 37.777202],\n        [-122.402994, 37.777365],\n        [-122.402737, 37.777532],\n        [-122.402476, 37.777712],\n        [-122.402207, 37.777903],\n        [-122.401954, 37.778094],\n        [-122.40129, 37.778716],\n        [-122.401106, 37.778873],\n        [-122.400991, 37.77897],\n        [-122.400526, 37.779359],\n        [-122.400369, 37.7795],\n        [-122.400219, 37.779645],\n        [-122.400086, 37.779781],\n        [-122.399974, 37.779903],\n        [-122.399869, 37.780029],\n        [-122.399786, 37.78014],\n        [-122.399726, 37.780249],\n        [-122.39968, 37.780359],\n        [-122.399649, 37.780466],\n        [-122.39963, 37.78056],\n        [-122.399619, 37.780658],\n        [-122.399635, 37.780791],\n        [-122.398365, 37.781794],\n        [-122.3974, 37.782556],\n        [-122.396301, 37.783425],\n        [-122.395714, 37.78389],\n        [-122.395178, 37.784312],\n        [-122.394809, 37.784606],\n        [-122.394414, 37.784922],\n        [-122.394038, 37.785216],\n        [-122.393426, 37.7857],\n        [-122.392949, 37.786077],\n        [-122.39207, 37.786773],\n        [-122.391407, 37.787297],\n        [-122.390971, 37.787643],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"67-49\": {\n    \"distance\": 3.6160546024205975,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"68-49\": {\n    \"distance\": 1.531246856394665,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396301, 37.783425],\n        [-122.395714, 37.78389],\n        [-122.395178, 37.784312],\n        [-122.394809, 37.784606],\n        [-122.394414, 37.784922],\n        [-122.394038, 37.785216],\n        [-122.393426, 37.7857],\n        [-122.392949, 37.786077],\n        [-122.39207, 37.786773],\n        [-122.391407, 37.787297],\n        [-122.390971, 37.787643],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"69-49\": {\n    \"distance\": 2.0952156972122697,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"70-49\": {\n    \"distance\": 2.0683631772294286,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"71-49\": {\n    \"distance\": 2.413011625055757,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"72-49\": {\n    \"distance\": 3.0447377117691046,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"74-49\": {\n    \"distance\": 1.166886243513381,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.394077, 37.792542],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"73-49\": {\n    \"distance\": 2.460682381579206,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.404507, 37.796369],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.402741, 37.795597],\n        [-122.40238, 37.795641],\n        [-122.401674, 37.795719],\n        [-122.40111, 37.795793],\n        [-122.400492, 37.795867],\n        [-122.398587, 37.796104],\n        [-122.398168, 37.796167],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393072, 37.79443],\n        [-122.392777, 37.794156],\n        [-122.392443, 37.793844],\n        [-122.392341, 37.793754],\n        [-122.39218, 37.793603],\n        [-122.391994, 37.793441],\n        [-122.391192, 37.792766],\n        [-122.391053, 37.792627],\n        [-122.390976, 37.792533],\n        [-122.390901, 37.792437],\n        [-122.390811, 37.792323],\n        [-122.390735, 37.79221],\n        [-122.390661, 37.792078],\n        [-122.390594, 37.791942],\n        [-122.390482, 37.791701],\n        [-122.39041, 37.791547],\n        [-122.390326, 37.791396],\n        [-122.390237, 37.791261],\n        [-122.390133, 37.791127],\n        [-122.39002, 37.791001],\n        [-122.389934, 37.790912],\n        [-122.389827, 37.790813],\n        [-122.389433, 37.790495],\n        [-122.388623, 37.789839],\n        [-122.388512, 37.789741],\n        [-122.388411, 37.78964],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"75-49\": {\n    \"distance\": 1.3223668235968724,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"76-49\": {\n    \"distance\": 2.084398054203898,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"77-49\": {\n    \"distance\": 1.5638663834943347,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"82-49\": {\n    \"distance\": 1.8907326429412532,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398615, 37.798906],\n        [-122.398334, 37.798957],\n        [-122.398222, 37.798989],\n        [-122.398097, 37.799039],\n        [-122.398026, 37.799069],\n        [-122.397961, 37.799103],\n        [-122.397882, 37.799145],\n        [-122.397792, 37.799184],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393072, 37.79443],\n        [-122.392777, 37.794156],\n        [-122.392443, 37.793844],\n        [-122.392341, 37.793754],\n        [-122.39218, 37.793603],\n        [-122.391994, 37.793441],\n        [-122.391192, 37.792766],\n        [-122.391053, 37.792627],\n        [-122.390976, 37.792533],\n        [-122.390901, 37.792437],\n        [-122.390811, 37.792323],\n        [-122.390735, 37.79221],\n        [-122.390661, 37.792078],\n        [-122.390594, 37.791942],\n        [-122.390482, 37.791701],\n        [-122.39041, 37.791547],\n        [-122.390326, 37.791396],\n        [-122.390237, 37.791261],\n        [-122.390133, 37.791127],\n        [-122.39002, 37.791001],\n        [-122.389934, 37.790912],\n        [-122.389827, 37.790813],\n        [-122.389433, 37.790495],\n        [-122.388623, 37.789839],\n        [-122.388512, 37.789741],\n        [-122.388411, 37.78964],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"53-50\": {\n    \"distance\": 2.1749747919621263,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"51-50\": {\n    \"distance\": 0.723240782247018,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.39474, 37.795712],\n        [-122.394822, 37.795875],\n        [-122.394849, 37.795943],\n        [-122.394811, 37.796018],\n        [-122.394751, 37.796031],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"54-50\": {\n    \"distance\": 1.2953286901740395,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390907, 37.791534],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.39474, 37.795712],\n        [-122.394822, 37.795875],\n        [-122.394849, 37.795943],\n        [-122.394811, 37.796018],\n        [-122.394751, 37.796031],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"55-50\": {\n    \"distance\": 1.0597948825842305,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.395023, 37.791767],\n        [-122.394951, 37.791852],\n        [-122.394077, 37.792542],\n        [-122.393203, 37.793241],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.39474, 37.795712],\n        [-122.394822, 37.795875],\n        [-122.394849, 37.795943],\n        [-122.394811, 37.796018],\n        [-122.394751, 37.796031],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"56-50\": {\n    \"distance\": 0.9019619266204677,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793494],\n        [-122.397792, 37.794428],\n        [-122.396732, 37.794568],\n        [-122.396649, 37.794578],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"57-50\": {\n    \"distance\": 2.5789094155647816,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"58-50\": {\n    \"distance\": 3.4351035290900263,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"59-50\": {\n    \"distance\": 3.3874128152797076,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416859, 37.780507],\n        [-122.41597, 37.780627],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"60-50\": {\n    \"distance\": 1.406259582794957,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403356, 37.805116],\n        [-122.403268, 37.805142],\n        [-122.403174, 37.80514],\n        [-122.402723, 37.804821],\n        [-122.402206, 37.804441],\n        [-122.402155, 37.804399],\n        [-122.40207, 37.804321],\n        [-122.401904, 37.804165],\n        [-122.401794, 37.804076],\n        [-122.401236, 37.80342],\n        [-122.400903, 37.803058],\n        [-122.400448, 37.802547],\n        [-122.399792, 37.801819],\n        [-122.399165, 37.801123],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"61-50\": {\n    \"distance\": 2.224529295855662,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.389683, 37.779916],\n        [-122.388991, 37.780472],\n        [-122.388854, 37.780588],\n        [-122.388733, 37.780723],\n        [-122.388646, 37.780845],\n        [-122.388573, 37.780974],\n        [-122.388522, 37.781102],\n        [-122.388485, 37.781222],\n        [-122.388464, 37.781351],\n        [-122.388431, 37.781791],\n        [-122.388424, 37.781908],\n        [-122.388376, 37.782545],\n        [-122.388309, 37.783373],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390907, 37.791534],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.39474, 37.795712],\n        [-122.394822, 37.795875],\n        [-122.394849, 37.795943],\n        [-122.394811, 37.796018],\n        [-122.394751, 37.796031],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"62-50\": {\n    \"distance\": 1.7604589124927024,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.395023, 37.791767],\n        [-122.394951, 37.791852],\n        [-122.394077, 37.792542],\n        [-122.393203, 37.793241],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.39474, 37.795712],\n        [-122.394822, 37.795875],\n        [-122.394849, 37.795943],\n        [-122.394811, 37.796018],\n        [-122.394751, 37.796031],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"63-50\": {\n    \"distance\": 1.4941698850958924,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.395023, 37.791767],\n        [-122.394951, 37.791852],\n        [-122.394077, 37.792542],\n        [-122.393203, 37.793241],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.39474, 37.795712],\n        [-122.394822, 37.795875],\n        [-122.394849, 37.795943],\n        [-122.394811, 37.796018],\n        [-122.394751, 37.796031],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"64-50\": {\n    \"distance\": 2.109359578281155,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390907, 37.791534],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.39474, 37.795712],\n        [-122.394822, 37.795875],\n        [-122.394849, 37.795943],\n        [-122.394811, 37.796018],\n        [-122.394751, 37.796031],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"65-50\": {\n    \"distance\": 4.528694817336955,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.403807, 37.770119],\n        [-122.403857, 37.77005],\n        [-122.403758, 37.769991],\n        [-122.403733, 37.769886],\n        [-122.403774, 37.76982],\n        [-122.403881, 37.769773],\n        [-122.40396, 37.769777],\n        [-122.404031, 37.769808],\n        [-122.404078, 37.769861],\n        [-122.404085, 37.769951],\n        [-122.404048, 37.770007],\n        [-122.403939, 37.770055],\n        [-122.404014, 37.770133],\n        [-122.404749, 37.770735],\n        [-122.404957, 37.770906],\n        [-122.405357, 37.771232],\n        [-122.405451, 37.771303],\n        [-122.405569, 37.77135],\n        [-122.405964, 37.771631],\n        [-122.406473, 37.771951],\n        [-122.406797, 37.772255],\n        [-122.406939, 37.772376],\n        [-122.407044, 37.772488],\n        [-122.407267, 37.77272],\n        [-122.407773, 37.773152],\n        [-122.407848, 37.773298],\n        [-122.407866, 37.773373],\n        [-122.407872, 37.773448],\n        [-122.407859, 37.773513],\n        [-122.407832, 37.773582],\n        [-122.407792, 37.77365],\n        [-122.407736, 37.77371],\n        [-122.407502, 37.773872],\n        [-122.407407, 37.773944],\n        [-122.407311, 37.774021],\n        [-122.407231, 37.774093],\n        [-122.407156, 37.774174],\n        [-122.407086, 37.774261],\n        [-122.406787, 37.774665],\n        [-122.406654, 37.774836],\n        [-122.406518, 37.774999],\n        [-122.406378, 37.775151],\n        [-122.406219, 37.775314],\n        [-122.406057, 37.775469],\n        [-122.405907, 37.775601],\n        [-122.405758, 37.775723],\n        [-122.405602, 37.775839],\n        [-122.405467, 37.775927],\n        [-122.405315, 37.776008],\n        [-122.405095, 37.776113],\n        [-122.403258, 37.777202],\n        [-122.402994, 37.777365],\n        [-122.402737, 37.777532],\n        [-122.402476, 37.777712],\n        [-122.402207, 37.777903],\n        [-122.401954, 37.778094],\n        [-122.40129, 37.778716],\n        [-122.401106, 37.778873],\n        [-122.400991, 37.77897],\n        [-122.400526, 37.779359],\n        [-122.400369, 37.7795],\n        [-122.400219, 37.779645],\n        [-122.400086, 37.779781],\n        [-122.399974, 37.779903],\n        [-122.399869, 37.780029],\n        [-122.399786, 37.78014],\n        [-122.399726, 37.780249],\n        [-122.39968, 37.780359],\n        [-122.399649, 37.780466],\n        [-122.39963, 37.78056],\n        [-122.399619, 37.780658],\n        [-122.399635, 37.780791],\n        [-122.400158, 37.781211],\n        [-122.400376, 37.781387],\n        [-122.400621, 37.781581],\n        [-122.401175, 37.782025],\n        [-122.401703, 37.782447],\n        [-122.401932, 37.782633],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"66-50\": {\n    \"distance\": 4.147419898931829,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.416447, 37.775699],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.417677, 37.776665],\n        [-122.417784, 37.776729],\n        [-122.417839, 37.77677],\n        [-122.417889, 37.776816],\n        [-122.417916, 37.776859],\n        [-122.418049, 37.777505],\n        [-122.417586, 37.777568],\n        [-122.417475, 37.777584],\n        [-122.416945, 37.777652],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"67-50\": {\n    \"distance\": 3.301218446161393,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"68-50\": {\n    \"distance\": 2.101819643179737,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.399502, 37.786634],\n        [-122.399975, 37.787011],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.400543, 37.79026],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"69-50\": {\n    \"distance\": 2.9085571222988036,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390907, 37.791534],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.39474, 37.795712],\n        [-122.394822, 37.795875],\n        [-122.394849, 37.795943],\n        [-122.394811, 37.796018],\n        [-122.394751, 37.796031],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"70-50\": {\n    \"distance\": 2.8817046023159625,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390907, 37.791534],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.39474, 37.795712],\n        [-122.394822, 37.795875],\n        [-122.394849, 37.795943],\n        [-122.394811, 37.796018],\n        [-122.394751, 37.796031],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"71-50\": {\n    \"distance\": 2.0981754687965513,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"72-50\": {\n    \"distance\": 2.7299015555099,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"73-50\": {\n    \"distance\": 1.3995883680342653,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.404507, 37.796369],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.402741, 37.795597],\n        [-122.40238, 37.795641],\n        [-122.401674, 37.795719],\n        [-122.40111, 37.795793],\n        [-122.400492, 37.795867],\n        [-122.398587, 37.796104],\n        [-122.398168, 37.796167],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"74-50\": {\n    \"distance\": 0.6526071264334178,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.39474, 37.795712],\n        [-122.394822, 37.795875],\n        [-122.394849, 37.795943],\n        [-122.394811, 37.796018],\n        [-122.394751, 37.796031],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"75-50\": {\n    \"distance\": 1.0075306673376676,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"77-50\": {\n    \"distance\": 1.2490302272351295,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"76-50\": {\n    \"distance\": 1.7695618979446923,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"53-51\": {\n    \"distance\": 2.3956711681058196,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"82-50\": {\n    \"distance\": 0.8296386293963132,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398615, 37.798906],\n        [-122.398334, 37.798957],\n        [-122.398222, 37.798989],\n        [-122.398097, 37.799039],\n        [-122.398026, 37.799069],\n        [-122.397961, 37.799103],\n        [-122.397882, 37.799145],\n        [-122.397792, 37.799184],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.394076, 37.795463]\n      ]\n    }\n  },\n  \"58-51\": {\n    \"distance\": 3.6557999052337182,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"54-51\": {\n    \"distance\": 0.572079519809044,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"57-51\": {\n    \"distance\": 1.9809069523944667,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394467, 37.788691],\n        [-122.394207, 37.788531],\n        [-122.394094, 37.788442],\n        [-122.393758, 37.788167],\n        [-122.393616, 37.788003],\n        [-122.393333, 37.788225],\n        [-122.393209, 37.788323],\n        [-122.392739, 37.788691],\n        [-122.391895, 37.789356],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"55-51\": {\n    \"distance\": 0.8046517632862871,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.394467, 37.788691],\n        [-122.394207, 37.788531],\n        [-122.394094, 37.788442],\n        [-122.393758, 37.788167],\n        [-122.393616, 37.788003],\n        [-122.393333, 37.788225],\n        [-122.393209, 37.788323],\n        [-122.392739, 37.788691],\n        [-122.391895, 37.789356],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"56-51\": {\n    \"distance\": 1.2353020997315254,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397611, 37.79352],\n        [-122.39648, 37.793664],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"59-51\": {\n    \"distance\": 3.6081091914233996,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416859, 37.780507],\n        [-122.41597, 37.780627],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"60-51\": {\n    \"distance\": 2.636379925126815,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403356, 37.805116],\n        [-122.403268, 37.805142],\n        [-122.403174, 37.80514],\n        [-122.402723, 37.804821],\n        [-122.402206, 37.804441],\n        [-122.402155, 37.804399],\n        [-122.40207, 37.804321],\n        [-122.401904, 37.804165],\n        [-122.401794, 37.804076],\n        [-122.401236, 37.80342],\n        [-122.400903, 37.803058],\n        [-122.400448, 37.802547],\n        [-122.399792, 37.801819],\n        [-122.399165, 37.801123],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"63-51\": {\n    \"distance\": 1.0930795905373802,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394467, 37.788691],\n        [-122.394207, 37.788531],\n        [-122.394094, 37.788442],\n        [-122.393758, 37.788167],\n        [-122.393616, 37.788003],\n        [-122.393333, 37.788225],\n        [-122.393209, 37.788323],\n        [-122.392739, 37.788691],\n        [-122.391895, 37.789356],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"61-51\": {\n    \"distance\": 1.5012801254906671,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.389683, 37.779916],\n        [-122.388991, 37.780472],\n        [-122.388854, 37.780588],\n        [-122.388733, 37.780723],\n        [-122.388646, 37.780845],\n        [-122.388573, 37.780974],\n        [-122.388522, 37.781102],\n        [-122.388485, 37.781222],\n        [-122.388464, 37.781351],\n        [-122.388431, 37.781791],\n        [-122.388424, 37.781908],\n        [-122.388376, 37.782545],\n        [-122.388309, 37.783373],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"62-51\": {\n    \"distance\": 1.2629509272046096,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394809, 37.784606],\n        [-122.394414, 37.784922],\n        [-122.394038, 37.785216],\n        [-122.393426, 37.7857],\n        [-122.392949, 37.786077],\n        [-122.39207, 37.786773],\n        [-122.391407, 37.787297],\n        [-122.390971, 37.787643],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"64-51\": {\n    \"distance\": 1.3861104079161597,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"65-51\": {\n    \"distance\": 3.01647664337967,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"67-51\": {\n    \"distance\": 3.521914822305085,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"66-51\": {\n    \"distance\": 3.832123699508959,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.415508, 37.775602],\n        [-122.415145, 37.775891],\n        [-122.414716, 37.776233],\n        [-122.414119, 37.776705],\n        [-122.413171, 37.777454],\n        [-122.412419, 37.77805],\n        [-122.412205, 37.77822],\n        [-122.410944, 37.779218],\n        [-122.408721, 37.780977],\n        [-122.40727, 37.782119],\n        [-122.407177, 37.782192],\n        [-122.406495, 37.782729],\n        [-122.406041, 37.783085],\n        [-122.405437, 37.783556],\n        [-122.404868, 37.783999],\n        [-122.404256, 37.784489],\n        [-122.404156, 37.784618],\n        [-122.403515, 37.785123],\n        [-122.403264, 37.785321],\n        [-122.402768, 37.785709],\n        [-122.402608, 37.785836],\n        [-122.402493, 37.785928],\n        [-122.402156, 37.786195],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396238, 37.790817],\n        [-122.395815, 37.791151],\n        [-122.395023, 37.791767],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"68-51\": {\n    \"distance\": 1.4386465314083063,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394467, 37.788691],\n        [-122.394207, 37.788531],\n        [-122.394094, 37.788442],\n        [-122.393758, 37.788167],\n        [-122.393616, 37.788003],\n        [-122.393333, 37.788225],\n        [-122.393209, 37.788323],\n        [-122.392739, 37.788691],\n        [-122.391895, 37.789356],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"69-51\": {\n    \"distance\": 2.1853079519338086,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"70-51\": {\n    \"distance\": 2.1584554319509675,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.388714, 37.789582],\n        [-122.388824, 37.789684],\n        [-122.389257, 37.790028],\n        [-122.390033, 37.790645],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"71-51\": {\n    \"distance\": 2.3188718449402446,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"72-51\": {\n    \"distance\": 2.950597931653592,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"73-51\": {\n    \"distance\": 2.3381299433224196,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.404507, 37.796369],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.402741, 37.795597],\n        [-122.40238, 37.795641],\n        [-122.401674, 37.795719],\n        [-122.40111, 37.795793],\n        [-122.400492, 37.795867],\n        [-122.398587, 37.796104],\n        [-122.398168, 37.796167],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"74-51\": {\n    \"distance\": 1.0727464633978685,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.394077, 37.792542],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"75-51\": {\n    \"distance\": 1.2282270434813596,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"76-51\": {\n    \"distance\": 1.9902582740883852,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"77-51\": {\n    \"distance\": 1.469726603378822,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"82-51\": {\n    \"distance\": 1.8740372709041329,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390896, 37.791517]\n      ]\n    }\n  },\n  \"54-53\": {\n    \"distance\": 2.7241086186526244,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390979, 37.790082],\n        [-122.391972, 37.79087],\n        [-122.392525, 37.79131],\n        [-122.393119, 37.791781],\n        [-122.393228, 37.791868],\n        [-122.394077, 37.792542],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"55-53\": {\n    \"distance\": 1.7873074905199717,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"56-53\": {\n    \"distance\": 1.3943593181790934,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"57-53\": {\n    \"distance\": 0.39196124929200027,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"58-53\": {\n    \"distance\": 1.2601310671907893,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"59-53\": {\n    \"distance\": 1.2124403533804706,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416859, 37.780507],\n        [-122.41597, 37.780627],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"60-53\": {\n    \"distance\": 3.2040998292748353,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403356, 37.805116],\n        [-122.403268, 37.805142],\n        [-122.403174, 37.80514],\n        [-122.402723, 37.804821],\n        [-122.402206, 37.804441],\n        [-122.402155, 37.804399],\n        [-122.40207, 37.804321],\n        [-122.401904, 37.804165],\n        [-122.401794, 37.804076],\n        [-122.401236, 37.80342],\n        [-122.400903, 37.803058],\n        [-122.400448, 37.802547],\n        [-122.399792, 37.801819],\n        [-122.399165, 37.801123],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"61-53\": {\n    \"distance\": 2.241387246887524,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"62-53\": {\n    \"distance\": 1.496309340788986,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"63-53\": {\n    \"distance\": 1.7850173448833357,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"64-53\": {\n    \"distance\": 1.9531327464277204,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"65-53\": {\n    \"distance\": 2.0654131161035236,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"66-53\": {\n    \"distance\": 1.972447437032592,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.416447, 37.775699],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.417677, 37.776665],\n        [-122.417784, 37.776729],\n        [-122.417839, 37.77677],\n        [-122.417889, 37.776816],\n        [-122.417916, 37.776859],\n        [-122.418049, 37.777505],\n        [-122.417586, 37.777568],\n        [-122.417475, 37.777584],\n        [-122.416945, 37.777652],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"67-53\": {\n    \"distance\": 1.1262459842621564,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"68-53\": {\n    \"distance\": 1.4129499591628205,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.399502, 37.786634],\n        [-122.399975, 37.787011],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"69-53\": {\n    \"distance\": 1.5396736207213089,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"70-53\": {\n    \"distance\": 1.5665263368745002,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"71-53\": {\n    \"distance\": 1.064926225356679,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.410071, 37.78808],\n        [-122.411699, 37.787873],\n        [-122.411642, 37.787567],\n        [-122.411572, 37.78722],\n        [-122.411516, 37.78694],\n        [-122.411334, 37.78601],\n        [-122.41114, 37.785075],\n        [-122.410953, 37.784148],\n        [-122.410765, 37.783214],\n        [-122.409144, 37.78342],\n        [-122.408849, 37.783458],\n        [-122.408802, 37.78347],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"72-53\": {\n    \"distance\": 0.5549290936106642,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"73-53\": {\n    \"distance\": 2.6854767286998142,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"74-53\": {\n    \"distance\": 1.7281634377120592,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"75-53\": {\n    \"distance\": 1.16744517776916,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"76-53\": {\n    \"distance\": 0.4054128940174344,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"77-53\": {\n    \"distance\": 0.9259449167511867,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"82-53\": {\n    \"distance\": 2.4417571750521523,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"55-54\": {\n    \"distance\": 0.9463650321672956,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.394467, 37.788691],\n        [-122.394207, 37.788531],\n        [-122.394094, 37.788442],\n        [-122.393758, 37.788167],\n        [-122.393616, 37.788003],\n        [-122.392994, 37.787515],\n        [-122.39207, 37.786773],\n        [-122.391407, 37.787297],\n        [-122.390985, 37.787632],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"56-54\": {\n    \"distance\": 1.3776424935503895,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397611, 37.79352],\n        [-122.39648, 37.793664],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"57-54\": {\n    \"distance\": 2.1217079072663036,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396301, 37.783425],\n        [-122.395714, 37.78389],\n        [-122.395178, 37.784312],\n        [-122.394809, 37.784606],\n        [-122.394414, 37.784922],\n        [-122.394038, 37.785216],\n        [-122.393426, 37.7857],\n        [-122.392949, 37.786077],\n        [-122.39207, 37.786773],\n        [-122.391407, 37.787297],\n        [-122.390985, 37.787632],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"58-54\": {\n    \"distance\": 3.798140299052582,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"59-54\": {\n    \"distance\": 3.7504495852422632,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416859, 37.780507],\n        [-122.41597, 37.780627],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"60-54\": {\n    \"distance\": 2.558060440109889,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403356, 37.805116],\n        [-122.403268, 37.805142],\n        [-122.403174, 37.80514],\n        [-122.402723, 37.804821],\n        [-122.402206, 37.804441],\n        [-122.402155, 37.804399],\n        [-122.40207, 37.804321],\n        [-122.401904, 37.804165],\n        [-122.401794, 37.804076],\n        [-122.401236, 37.80342],\n        [-122.400903, 37.803058],\n        [-122.400448, 37.802547],\n        [-122.399792, 37.801819],\n        [-122.399165, 37.801123],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393072, 37.79443],\n        [-122.392777, 37.794156],\n        [-122.392443, 37.793844],\n        [-122.392341, 37.793754],\n        [-122.39218, 37.793603],\n        [-122.391994, 37.793441],\n        [-122.391192, 37.792766],\n        [-122.391053, 37.792627],\n        [-122.390976, 37.792533],\n        [-122.390901, 37.792437],\n        [-122.390811, 37.792323],\n        [-122.390735, 37.79221],\n        [-122.390661, 37.792078],\n        [-122.390594, 37.791942],\n        [-122.390482, 37.791701],\n        [-122.39041, 37.791547],\n        [-122.390326, 37.791396],\n        [-122.390237, 37.791261],\n        [-122.390133, 37.791127],\n        [-122.39002, 37.791001],\n        [-122.389934, 37.790912],\n        [-122.389827, 37.790813],\n        [-122.389433, 37.790495],\n        [-122.388623, 37.789839],\n        [-122.388512, 37.789741],\n        [-122.388411, 37.78964],\n        [-122.388321, 37.789534],\n        [-122.388231, 37.789419],\n        [-122.388158, 37.789301],\n        [-122.388079, 37.789155],\n        [-122.38801, 37.788993],\n        [-122.38796, 37.788838],\n        [-122.387807, 37.788262],\n        [-122.387769, 37.788101],\n        [-122.387741, 37.787933],\n        [-122.387722, 37.787775],\n        [-122.387712, 37.787615],\n        [-122.38771, 37.787469],\n        [-122.387716, 37.787311],\n        [-122.387728, 37.787179],\n        [-122.387737, 37.78708],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"61-54\": {\n    \"distance\": 0.9292339411335344,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.389683, 37.779916],\n        [-122.388991, 37.780472],\n        [-122.388854, 37.780588],\n        [-122.388733, 37.780723],\n        [-122.388646, 37.780845],\n        [-122.388573, 37.780974],\n        [-122.388522, 37.781102],\n        [-122.388485, 37.781222],\n        [-122.388464, 37.781351],\n        [-122.388431, 37.781791],\n        [-122.388424, 37.781908],\n        [-122.388376, 37.782545],\n        [-122.388309, 37.783373],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"62-54\": {\n    \"distance\": 1.0187340893580334,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394809, 37.784606],\n        [-122.394414, 37.784922],\n        [-122.394038, 37.785216],\n        [-122.393426, 37.7857],\n        [-122.392949, 37.786077],\n        [-122.39207, 37.786773],\n        [-122.391407, 37.787297],\n        [-122.390971, 37.787643],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"63-54\": {\n    \"distance\": 1.234792859418389,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394467, 37.788691],\n        [-122.394207, 37.788531],\n        [-122.394094, 37.788442],\n        [-122.393758, 37.788167],\n        [-122.393616, 37.788003],\n        [-122.392994, 37.787515],\n        [-122.39207, 37.786773],\n        [-122.391407, 37.787297],\n        [-122.390985, 37.787632],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"65-54\": {\n    \"distance\": 2.4444304590225365,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"66-54\": {\n    \"distance\": 4.012848752460824,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.415508, 37.775602],\n        [-122.415145, 37.775891],\n        [-122.414716, 37.776233],\n        [-122.414171, 37.775802],\n        [-122.413714, 37.775439],\n        [-122.413157, 37.774996],\n        [-122.412622, 37.774568],\n        [-122.412165, 37.774203],\n        [-122.411627, 37.773773],\n        [-122.411074, 37.77333],\n        [-122.410692, 37.773024],\n        [-122.410083, 37.772537],\n        [-122.409693, 37.772845],\n        [-122.408922, 37.773454],\n        [-122.408666, 37.773656],\n        [-122.408445, 37.773688],\n        [-122.408286, 37.773712],\n        [-122.407822, 37.773761],\n        [-122.40771, 37.773783],\n        [-122.407609, 37.773817],\n        [-122.407502, 37.773872],\n        [-122.407407, 37.773944],\n        [-122.407311, 37.774021],\n        [-122.407231, 37.774093],\n        [-122.407156, 37.774174],\n        [-122.407086, 37.774261],\n        [-122.406787, 37.774665],\n        [-122.406654, 37.774836],\n        [-122.406518, 37.774999],\n        [-122.406378, 37.775151],\n        [-122.406219, 37.775314],\n        [-122.406057, 37.775469],\n        [-122.405907, 37.775601],\n        [-122.405758, 37.775723],\n        [-122.405602, 37.775839],\n        [-122.405467, 37.775927],\n        [-122.405315, 37.776008],\n        [-122.405095, 37.776113],\n        [-122.403258, 37.777202],\n        [-122.402994, 37.777365],\n        [-122.402737, 37.777532],\n        [-122.402476, 37.777712],\n        [-122.402207, 37.777903],\n        [-122.401954, 37.778094],\n        [-122.40129, 37.778716],\n        [-122.401106, 37.778873],\n        [-122.400991, 37.77897],\n        [-122.400526, 37.779359],\n        [-122.400369, 37.7795],\n        [-122.400219, 37.779645],\n        [-122.400086, 37.779781],\n        [-122.399974, 37.779903],\n        [-122.399869, 37.780029],\n        [-122.399786, 37.78014],\n        [-122.399726, 37.780249],\n        [-122.39968, 37.780359],\n        [-122.399649, 37.780466],\n        [-122.39963, 37.78056],\n        [-122.399619, 37.780658],\n        [-122.399635, 37.780791],\n        [-122.398365, 37.781794],\n        [-122.3974, 37.782556],\n        [-122.396301, 37.783425],\n        [-122.395714, 37.78389],\n        [-122.395178, 37.784312],\n        [-122.394809, 37.784606],\n        [-122.394414, 37.784922],\n        [-122.394038, 37.785216],\n        [-122.393426, 37.7857],\n        [-122.392949, 37.786077],\n        [-122.39207, 37.786773],\n        [-122.391407, 37.787297],\n        [-122.390971, 37.787643],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"64-54\": {\n    \"distance\": 0.8140642235590269,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"67-54\": {\n    \"distance\": 3.6642552161239488,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"68-54\": {\n    \"distance\": 1.5794474862801415,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396301, 37.783425],\n        [-122.395714, 37.78389],\n        [-122.395178, 37.784312],\n        [-122.394809, 37.784606],\n        [-122.394414, 37.784922],\n        [-122.394038, 37.785216],\n        [-122.393426, 37.7857],\n        [-122.392949, 37.786077],\n        [-122.39207, 37.786773],\n        [-122.391407, 37.787297],\n        [-122.390985, 37.787632],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"69-54\": {\n    \"distance\": 1.6132617675766754,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"70-54\": {\n    \"distance\": 1.5864092475938343,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391988, 37.781933],\n        [-122.391673, 37.782182],\n        [-122.39131, 37.782469],\n        [-122.389855, 37.783619],\n        [-122.388483, 37.784703],\n        [-122.388408, 37.784743],\n        [-122.388318, 37.784753],\n        [-122.388198, 37.784748],\n        [-122.388186, 37.784917],\n        [-122.388177, 37.785055],\n        [-122.388043, 37.786995],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"71-54\": {\n    \"distance\": 2.461212238759108,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"74-54\": {\n    \"distance\": 1.2150868572167324,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.394077, 37.792542],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"72-54\": {\n    \"distance\": 3.092938325472456,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"73-54\": {\n    \"distance\": 2.551389225349197,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.404507, 37.796369],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.402741, 37.795597],\n        [-122.40238, 37.795641],\n        [-122.401674, 37.795719],\n        [-122.40111, 37.795793],\n        [-122.400492, 37.795867],\n        [-122.398587, 37.796104],\n        [-122.398168, 37.796167],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393072, 37.79443],\n        [-122.392777, 37.794156],\n        [-122.392443, 37.793844],\n        [-122.392341, 37.793754],\n        [-122.39218, 37.793603],\n        [-122.391994, 37.793441],\n        [-122.391192, 37.792766],\n        [-122.391053, 37.792627],\n        [-122.390976, 37.792533],\n        [-122.390901, 37.792437],\n        [-122.390811, 37.792323],\n        [-122.390735, 37.79221],\n        [-122.390661, 37.792078],\n        [-122.390594, 37.791942],\n        [-122.390482, 37.791701],\n        [-122.39041, 37.791547],\n        [-122.390326, 37.791396],\n        [-122.390237, 37.791261],\n        [-122.390133, 37.791127],\n        [-122.39002, 37.791001],\n        [-122.389934, 37.790912],\n        [-122.389827, 37.790813],\n        [-122.389433, 37.790495],\n        [-122.388623, 37.789839],\n        [-122.388512, 37.789741],\n        [-122.388411, 37.78964],\n        [-122.388321, 37.789534],\n        [-122.388231, 37.789419],\n        [-122.388158, 37.789301],\n        [-122.388079, 37.789155],\n        [-122.38801, 37.788993],\n        [-122.38796, 37.788838],\n        [-122.387807, 37.788262],\n        [-122.387769, 37.788101],\n        [-122.387741, 37.787933],\n        [-122.387722, 37.787775],\n        [-122.387712, 37.787615],\n        [-122.38771, 37.787469],\n        [-122.387716, 37.787311],\n        [-122.387728, 37.787179],\n        [-122.387737, 37.78708],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"75-54\": {\n    \"distance\": 1.3705674373002237,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"76-54\": {\n    \"distance\": 2.1325986679072497,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"77-54\": {\n    \"distance\": 1.6120669971976862,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"82-54\": {\n    \"distance\": 1.9814405441405816,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398615, 37.798906],\n        [-122.398334, 37.798957],\n        [-122.398222, 37.798989],\n        [-122.398097, 37.799039],\n        [-122.398026, 37.799069],\n        [-122.397961, 37.799103],\n        [-122.397882, 37.799145],\n        [-122.397792, 37.799184],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393072, 37.79443],\n        [-122.392777, 37.794156],\n        [-122.392443, 37.793844],\n        [-122.392341, 37.793754],\n        [-122.39218, 37.793603],\n        [-122.392024, 37.793466],\n        [-122.391192, 37.792766],\n        [-122.391053, 37.792627],\n        [-122.390976, 37.792533],\n        [-122.390901, 37.792437],\n        [-122.390811, 37.792323],\n        [-122.390735, 37.79221],\n        [-122.390661, 37.792078],\n        [-122.390594, 37.791942],\n        [-122.390482, 37.791701],\n        [-122.39041, 37.791547],\n        [-122.390326, 37.791396],\n        [-122.390237, 37.791261],\n        [-122.390133, 37.791127],\n        [-122.39002, 37.791001],\n        [-122.389934, 37.790912],\n        [-122.389827, 37.790813],\n        [-122.389433, 37.790495],\n        [-122.388623, 37.789839],\n        [-122.388512, 37.789741],\n        [-122.388411, 37.78964],\n        [-122.388321, 37.789534],\n        [-122.388231, 37.789419],\n        [-122.388158, 37.789301],\n        [-122.388079, 37.789155],\n        [-122.38801, 37.788993],\n        [-122.38796, 37.788838],\n        [-122.387807, 37.788262],\n        [-122.387769, 37.788101],\n        [-122.387741, 37.787933],\n        [-122.387722, 37.787775],\n        [-122.387712, 37.787615],\n        [-122.38771, 37.787469],\n        [-122.387716, 37.787311],\n        [-122.387728, 37.787179],\n        [-122.387737, 37.78708],\n        [-122.388036, 37.787094],\n        [-122.388026, 37.787152]\n      ]\n    }\n  },\n  \"57-55\": {\n    \"distance\": 1.3222029239548287,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"56-55\": {\n    \"distance\": 0.6117877798535523,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.398234, 37.791694],\n        [-122.397548, 37.791147],\n        [-122.397244, 37.790905],\n        [-122.397159, 37.790837],\n        [-122.396688, 37.790461],\n        [-122.396297, 37.790148],\n        [-122.39617, 37.790047],\n        [-122.396038, 37.789941],\n        [-122.395702, 37.789671],\n        [-122.395361, 37.789402],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"58-55\": {\n    \"distance\": 3.0048542360522696,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396297, 37.790148],\n        [-122.39617, 37.790047],\n        [-122.396038, 37.789941],\n        [-122.395702, 37.789671],\n        [-122.395361, 37.789402],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"59-55\": {\n    \"distance\": 2.9571635222419506,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416859, 37.780507],\n        [-122.41597, 37.780627],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396297, 37.790148],\n        [-122.39617, 37.790047],\n        [-122.396038, 37.789941],\n        [-122.395702, 37.789671],\n        [-122.395361, 37.789402],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"60-55\": {\n    \"distance\": 2.2661450024682206,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403356, 37.805116],\n        [-122.403268, 37.805142],\n        [-122.403174, 37.80514],\n        [-122.402723, 37.804821],\n        [-122.402206, 37.804441],\n        [-122.402155, 37.804399],\n        [-122.40207, 37.804321],\n        [-122.401904, 37.804165],\n        [-122.401794, 37.804076],\n        [-122.401236, 37.80342],\n        [-122.400903, 37.803058],\n        [-122.400448, 37.802547],\n        [-122.399792, 37.801819],\n        [-122.399165, 37.801123],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.394277, 37.78992],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"61-55\": {\n    \"distance\": 1.4457426154148967,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"62-55\": {\n    \"distance\": 0.7006645894945523,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"63-55\": {\n    \"distance\": 0.4343755620977423,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"64-55\": {\n    \"distance\": 1.1574881149550926,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"65-55\": {\n    \"distance\": 2.9323794479582035,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"66-55\": {\n    \"distance\": 3.1723978026878177,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.415508, 37.775602],\n        [-122.415145, 37.775891],\n        [-122.414716, 37.776233],\n        [-122.414119, 37.776705],\n        [-122.413171, 37.777454],\n        [-122.412419, 37.77805],\n        [-122.412205, 37.77822],\n        [-122.410944, 37.779218],\n        [-122.408721, 37.780977],\n        [-122.40727, 37.782119],\n        [-122.407177, 37.782192],\n        [-122.406495, 37.782729],\n        [-122.406041, 37.783085],\n        [-122.405437, 37.783556],\n        [-122.404868, 37.783999],\n        [-122.404256, 37.784489],\n        [-122.404156, 37.784618],\n        [-122.403515, 37.785123],\n        [-122.403264, 37.785321],\n        [-122.402768, 37.785709],\n        [-122.402608, 37.785836],\n        [-122.402493, 37.785928],\n        [-122.402156, 37.786195],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396297, 37.790148],\n        [-122.39617, 37.790047],\n        [-122.396038, 37.789941],\n        [-122.395702, 37.789671],\n        [-122.395361, 37.789402],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"68-55\": {\n    \"distance\": 0.7799425029686681,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"67-55\": {\n    \"distance\": 2.8709691531236365,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396297, 37.790148],\n        [-122.39617, 37.790047],\n        [-122.396038, 37.789941],\n        [-122.395702, 37.789671],\n        [-122.395361, 37.789402],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"69-55\": {\n    \"distance\": 2.1012107565123417,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"70-55\": {\n    \"distance\": 2.0743582365295006,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"71-55\": {\n    \"distance\": 1.711137379409528,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396297, 37.790148],\n        [-122.39617, 37.790047],\n        [-122.396038, 37.789941],\n        [-122.395702, 37.789671],\n        [-122.395361, 37.789402],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"72-55\": {\n    \"distance\": 2.299652262472144,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396297, 37.790148],\n        [-122.39617, 37.790047],\n        [-122.396038, 37.789941],\n        [-122.395702, 37.789671],\n        [-122.395361, 37.789402],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"74-55\": {\n    \"distance\": 0.7025115407392745,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.394077, 37.792542],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.394277, 37.78992],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"73-55\": {\n    \"distance\": 1.8996494747800765,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.40388, 37.791733],\n        [-122.402571, 37.791899],\n        [-122.402196, 37.791946],\n        [-122.401885, 37.791986],\n        [-122.401769, 37.792001],\n        [-122.401638, 37.792018],\n        [-122.400933, 37.792108],\n        [-122.399763, 37.792258],\n        [-122.398588, 37.792408],\n        [-122.398482, 37.79189],\n        [-122.398423, 37.79181],\n        [-122.398375, 37.791778],\n        [-122.398297, 37.791734],\n        [-122.398234, 37.791694],\n        [-122.397548, 37.791147],\n        [-122.397244, 37.790905],\n        [-122.397159, 37.790837],\n        [-122.396688, 37.790461],\n        [-122.396297, 37.790148],\n        [-122.39617, 37.790047],\n        [-122.396038, 37.789941],\n        [-122.395702, 37.789671],\n        [-122.395361, 37.789402],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"75-55\": {\n    \"distance\": 0.832394188403135,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.398588, 37.792408],\n        [-122.398482, 37.79189],\n        [-122.398423, 37.79181],\n        [-122.398375, 37.791778],\n        [-122.398297, 37.791734],\n        [-122.398234, 37.791694],\n        [-122.397548, 37.791147],\n        [-122.397244, 37.790905],\n        [-122.397159, 37.790837],\n        [-122.396688, 37.790461],\n        [-122.396297, 37.790148],\n        [-122.39617, 37.790047],\n        [-122.396038, 37.789941],\n        [-122.395702, 37.789671],\n        [-122.395361, 37.789402],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"77-55\": {\n    \"distance\": 0.914289071526502,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396297, 37.790148],\n        [-122.39617, 37.790047],\n        [-122.396038, 37.789941],\n        [-122.395702, 37.789671],\n        [-122.395361, 37.789402],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"76-55\": {\n    \"distance\": 1.339312604906937,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396297, 37.790148],\n        [-122.39617, 37.790047],\n        [-122.396038, 37.789941],\n        [-122.395702, 37.789671],\n        [-122.395361, 37.789402],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"82-55\": {\n    \"distance\": 1.503802348245539,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.394277, 37.78992],\n        [-122.394561, 37.789696]\n      ]\n    }\n  },\n  \"57-56\": {\n    \"distance\": 1.7879273580987136,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.406579, 37.783514],\n        [-122.406041, 37.783085],\n        [-122.405437, 37.783556],\n        [-122.404868, 37.783999],\n        [-122.404256, 37.784489],\n        [-122.404156, 37.784618],\n        [-122.403515, 37.785123],\n        [-122.403264, 37.785321],\n        [-122.402768, 37.785709],\n        [-122.402608, 37.785836],\n        [-122.402493, 37.785928],\n        [-122.402156, 37.786195],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396238, 37.790817],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"58-56\": {\n    \"distance\": 3.013243523576685,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396238, 37.790817],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"59-56\": {\n    \"distance\": 2.9655528097663657,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416859, 37.780507],\n        [-122.41597, 37.780627],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396238, 37.790817],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"60-56\": {\n    \"distance\": 2.203085798021777,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403356, 37.805116],\n        [-122.403268, 37.805142],\n        [-122.403174, 37.80514],\n        [-122.402723, 37.804821],\n        [-122.402206, 37.804441],\n        [-122.402155, 37.804399],\n        [-122.40207, 37.804321],\n        [-122.401904, 37.804165],\n        [-122.401794, 37.804076],\n        [-122.401236, 37.80342],\n        [-122.400903, 37.803058],\n        [-122.400448, 37.802547],\n        [-122.399792, 37.801819],\n        [-122.399165, 37.801123],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.395023, 37.791767],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"61-56\": {\n    \"distance\": 1.8386919121899319,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"62-56\": {\n    \"distance\": 1.0936138862695877,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"63-56\": {\n    \"distance\": 0.8273248588727776,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"64-56\": {\n    \"distance\": 1.5504374117301278,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"65-56\": {\n    \"distance\": 3.3253287447332385,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"66-56\": {\n    \"distance\": 3.180787090212233,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.415508, 37.775602],\n        [-122.415145, 37.775891],\n        [-122.414716, 37.776233],\n        [-122.414119, 37.776705],\n        [-122.413171, 37.777454],\n        [-122.412419, 37.77805],\n        [-122.412205, 37.77822],\n        [-122.410944, 37.779218],\n        [-122.408721, 37.780977],\n        [-122.40727, 37.782119],\n        [-122.407177, 37.782192],\n        [-122.406495, 37.782729],\n        [-122.406041, 37.783085],\n        [-122.405437, 37.783556],\n        [-122.404868, 37.783999],\n        [-122.404256, 37.784489],\n        [-122.404156, 37.784618],\n        [-122.403515, 37.785123],\n        [-122.403264, 37.785321],\n        [-122.402768, 37.785709],\n        [-122.402608, 37.785836],\n        [-122.402493, 37.785928],\n        [-122.402156, 37.786195],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396238, 37.790817],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"67-56\": {\n    \"distance\": 2.8793584406480517,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396238, 37.790817],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"68-56\": {\n    \"distance\": 1.1728917997437034,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"69-56\": {\n    \"distance\": 2.4941600532873767,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"70-56\": {\n    \"distance\": 2.4673075333045356,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"71-56\": {\n    \"distance\": 1.7195266669339428,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396238, 37.790817],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"72-56\": {\n    \"distance\": 2.308041549996559,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396238, 37.790817],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"73-56\": {\n    \"distance\": 1.904835816217381,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.404507, 37.796369],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.402741, 37.795597],\n        [-122.40238, 37.795641],\n        [-122.401674, 37.795719],\n        [-122.40111, 37.795793],\n        [-122.400492, 37.795867],\n        [-122.398587, 37.796104],\n        [-122.398168, 37.796167],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.395023, 37.791767],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"74-56\": {\n    \"distance\": 0.6394523362928304,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.394077, 37.792542],\n        [-122.394951, 37.791852],\n        [-122.395023, 37.791767],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"75-56\": {\n    \"distance\": 0.7949329163763216,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.395023, 37.791767],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"76-56\": {\n    \"distance\": 1.347701892431352,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396238, 37.790817],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"77-56\": {\n    \"distance\": 0.9226783590509168,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396238, 37.790817],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"82-56\": {\n    \"distance\": 1.4407431437990947,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.395023, 37.791767],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397147, 37.792201]\n      ]\n    }\n  },\n  \"58-57\": {\n    \"distance\": 1.6527347796520484,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.41194, 37.780011],\n        [-122.411484, 37.779648],\n        [-122.410944, 37.779218],\n        [-122.408721, 37.780977],\n        [-122.40727, 37.782119],\n        [-122.406731, 37.781691],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"59-57\": {\n    \"distance\": 1.6050440658417295,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416859, 37.780507],\n        [-122.41597, 37.780627],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.41194, 37.780011],\n        [-122.411484, 37.779648],\n        [-122.410944, 37.779218],\n        [-122.408721, 37.780977],\n        [-122.40727, 37.782119],\n        [-122.406731, 37.781691],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"61-57\": {\n    \"distance\": 1.8496551230303537,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.396953, 37.77866],\n        [-122.397068, 37.778752],\n        [-122.39755, 37.779134],\n        [-122.398087, 37.779565],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"60-57\": {\n    \"distance\": 3.5331995281196984,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403356, 37.805116],\n        [-122.403268, 37.805142],\n        [-122.403174, 37.80514],\n        [-122.402723, 37.804821],\n        [-122.402206, 37.804441],\n        [-122.402155, 37.804399],\n        [-122.40207, 37.804321],\n        [-122.401904, 37.804165],\n        [-122.401794, 37.804076],\n        [-122.401236, 37.80342],\n        [-122.400903, 37.803058],\n        [-122.400448, 37.802547],\n        [-122.399792, 37.801819],\n        [-122.399165, 37.801123],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"62-57\": {\n    \"distance\": 1.1032864331694945,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.397841, 37.784657],\n        [-122.398748, 37.783941],\n        [-122.398943, 37.783787],\n        [-122.399117, 37.78365],\n        [-122.400382, 37.782651],\n        [-122.4007, 37.7824],\n        [-122.401004, 37.782162],\n        [-122.401175, 37.782025],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"63-57\": {\n    \"distance\": 1.716862137781514,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402094, 37.786142],\n        [-122.402704, 37.785659],\n        [-122.403196, 37.785269],\n        [-122.403448, 37.785072],\n        [-122.404091, 37.784559],\n        [-122.404256, 37.784489],\n        [-122.404868, 37.783999],\n        [-122.405437, 37.783556],\n        [-122.406041, 37.783085],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"64-57\": {\n    \"distance\": 1.5601099586300349,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.397841, 37.784657],\n        [-122.398748, 37.783941],\n        [-122.398943, 37.783787],\n        [-122.399117, 37.78365],\n        [-122.400382, 37.782651],\n        [-122.4007, 37.7824],\n        [-122.401004, 37.782162],\n        [-122.401175, 37.782025],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"65-57\": {\n    \"distance\": 1.673453156047082,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"66-57\": {\n    \"distance\": 1.8511787130893878,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.415508, 37.775602],\n        [-122.415145, 37.775891],\n        [-122.414716, 37.776233],\n        [-122.414119, 37.776705],\n        [-122.413171, 37.777454],\n        [-122.412419, 37.77805],\n        [-122.412205, 37.77822],\n        [-122.410944, 37.779218],\n        [-122.408721, 37.780977],\n        [-122.40727, 37.782119],\n        [-122.406731, 37.781691],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"67-57\": {\n    \"distance\": 1.5188496967234155,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.41194, 37.780011],\n        [-122.411484, 37.779648],\n        [-122.410944, 37.779218],\n        [-122.408721, 37.780977],\n        [-122.40727, 37.782119],\n        [-122.406731, 37.781691],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"68-57\": {\n    \"distance\": 1.0139257523353553,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.399117, 37.78365],\n        [-122.400382, 37.782651],\n        [-122.4007, 37.7824],\n        [-122.401004, 37.782162],\n        [-122.401175, 37.782025],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"69-57\": {\n    \"distance\": 1.1477136606648668,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"70-57\": {\n    \"distance\": 1.174566376818058,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"71-57\": {\n    \"distance\": 0.9436266435516091,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.408052, 37.786428],\n        [-122.408951, 37.786313],\n        [-122.408843, 37.785847],\n        [-122.408723, 37.785545],\n        [-122.408697, 37.785481],\n        [-122.408678, 37.785392],\n        [-122.408538, 37.784536],\n        [-122.408525, 37.78446],\n        [-122.40851, 37.784397],\n        [-122.408459, 37.784306],\n        [-122.408207, 37.784092],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"72-57\": {\n    \"distance\": 0.9475328060719229,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.41194, 37.780011],\n        [-122.411484, 37.779648],\n        [-122.410944, 37.779218],\n        [-122.408721, 37.780977],\n        [-122.40727, 37.782119],\n        [-122.406731, 37.781691],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"73-57\": {\n    \"distance\": 2.510220062009855,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.404371, 37.788802],\n        [-122.405221, 37.788694],\n        [-122.405132, 37.788238],\n        [-122.405045, 37.787766],\n        [-122.404972, 37.787418],\n        [-122.404855, 37.786835],\n        [-122.405363, 37.786769],\n        [-122.406409, 37.786637],\n        [-122.408034, 37.786431],\n        [-122.408951, 37.786313],\n        [-122.408843, 37.785847],\n        [-122.408723, 37.785545],\n        [-122.408697, 37.785481],\n        [-122.408678, 37.785392],\n        [-122.408538, 37.784536],\n        [-122.408525, 37.78446],\n        [-122.40851, 37.784397],\n        [-122.408459, 37.784306],\n        [-122.408207, 37.784092],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"74-57\": {\n    \"distance\": 2.0572631365569225,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"75-57\": {\n    \"distance\": 1.4965448766140232,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"77-57\": {\n    \"distance\": 1.2550446155960502,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"76-57\": {\n    \"distance\": 0.7345125928622976,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"82-57\": {\n    \"distance\": 2.784523636930737,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.404371, 37.788802],\n        [-122.405221, 37.788694],\n        [-122.405132, 37.788238],\n        [-122.405045, 37.787766],\n        [-122.404972, 37.787418],\n        [-122.404855, 37.786835],\n        [-122.405363, 37.786769],\n        [-122.406409, 37.786637],\n        [-122.408034, 37.786431],\n        [-122.408951, 37.786313],\n        [-122.408843, 37.785847],\n        [-122.408723, 37.785545],\n        [-122.408697, 37.785481],\n        [-122.408678, 37.785392],\n        [-122.408538, 37.784536],\n        [-122.408525, 37.78446],\n        [-122.40851, 37.784397],\n        [-122.408459, 37.784306],\n        [-122.408207, 37.784092],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405201, 37.781697]\n      ]\n    }\n  },\n  \"59-58\": {\n    \"distance\": 0.31096870718318786,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418567, 37.780129],\n        [-122.418419, 37.779388],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"60-58\": {\n    \"distance\": 4.3400203528083265,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403356, 37.805116],\n        [-122.403268, 37.805142],\n        [-122.403174, 37.80514],\n        [-122.402723, 37.804821],\n        [-122.402206, 37.804441],\n        [-122.402155, 37.804399],\n        [-122.40207, 37.804321],\n        [-122.401904, 37.804165],\n        [-122.401794, 37.804076],\n        [-122.401236, 37.80342],\n        [-122.400903, 37.803058],\n        [-122.400448, 37.802547],\n        [-122.399792, 37.801819],\n        [-122.399165, 37.801123],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"61-58\": {\n    \"distance\": 3.3773077704210146,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"62-58\": {\n    \"distance\": 2.632229864322476,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"63-58\": {\n    \"distance\": 2.920937868416826,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"64-58\": {\n    \"distance\": 3.0890532699612105,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"65-58\": {\n    \"distance\": 1.9356050750063085,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.403807, 37.770119],\n        [-122.403857, 37.77005],\n        [-122.403758, 37.769991],\n        [-122.403733, 37.769886],\n        [-122.403774, 37.76982],\n        [-122.403881, 37.769773],\n        [-122.40396, 37.769777],\n        [-122.404031, 37.769808],\n        [-122.404078, 37.769861],\n        [-122.404085, 37.769951],\n        [-122.404048, 37.770007],\n        [-122.403939, 37.770055],\n        [-122.404014, 37.770133],\n        [-122.404749, 37.770735],\n        [-122.404957, 37.770906],\n        [-122.405357, 37.771232],\n        [-122.405451, 37.771303],\n        [-122.405569, 37.77135],\n        [-122.405964, 37.771631],\n        [-122.406473, 37.771951],\n        [-122.406797, 37.772255],\n        [-122.406939, 37.772376],\n        [-122.407044, 37.772488],\n        [-122.407267, 37.77272],\n        [-122.407773, 37.773152],\n        [-122.408445, 37.773688],\n        [-122.408535, 37.77376],\n        [-122.409093, 37.774203],\n        [-122.409524, 37.774548],\n        [-122.410082, 37.774993],\n        [-122.410619, 37.775421],\n        [-122.411078, 37.775786],\n        [-122.411614, 37.776214],\n        [-122.412166, 37.776654],\n        [-122.412625, 37.777019],\n        [-122.413171, 37.777454],\n        [-122.414157, 37.778244],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"66-58\": {\n    \"distance\": 0.9677278779801886,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.416447, 37.775699],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.417677, 37.776665],\n        [-122.417784, 37.776729],\n        [-122.417839, 37.77677],\n        [-122.417889, 37.776816],\n        [-122.417916, 37.776859],\n        [-122.418049, 37.777505],\n        [-122.418139, 37.777971],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"67-58\": {\n    \"distance\": 0.6670566923735765,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"68-58\": {\n    \"distance\": 2.548870482696311,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.399502, 37.786634],\n        [-122.399975, 37.787011],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"69-58\": {\n    \"distance\": 2.6755941442547986,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"71-58\": {\n    \"distance\": 1.9625959748019586,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.410071, 37.78808],\n        [-122.411699, 37.787873],\n        [-122.411642, 37.787567],\n        [-122.411572, 37.78722],\n        [-122.411516, 37.78694],\n        [-122.411334, 37.78601],\n        [-122.412147, 37.785909],\n        [-122.412979, 37.7858],\n        [-122.414619, 37.785591],\n        [-122.415024, 37.78554],\n        [-122.415675, 37.785457],\n        [-122.415916, 37.785426],\n        [-122.416261, 37.785382],\n        [-122.417907, 37.785176],\n        [-122.417812, 37.784709],\n        [-122.417715, 37.784234],\n        [-122.417622, 37.783777],\n        [-122.417527, 37.78331],\n        [-122.417337, 37.782379],\n        [-122.417147, 37.781446],\n        [-122.416982, 37.780604],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418567, 37.780129],\n        [-122.418419, 37.779388],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"70-58\": {\n    \"distance\": 2.70244686040799,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"72-58\": {\n    \"distance\": 0.5809938459789856,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"73-58\": {\n    \"distance\": 3.5289081638688926,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.404371, 37.788802],\n        [-122.405221, 37.788694],\n        [-122.405132, 37.788238],\n        [-122.405045, 37.787766],\n        [-122.404972, 37.787418],\n        [-122.404855, 37.786835],\n        [-122.405363, 37.786769],\n        [-122.406409, 37.786637],\n        [-122.408068, 37.786425],\n        [-122.408951, 37.786313],\n        [-122.409335, 37.786264],\n        [-122.409701, 37.786218],\n        [-122.409848, 37.786199],\n        [-122.411334, 37.78601],\n        [-122.412147, 37.785909],\n        [-122.412979, 37.7858],\n        [-122.414619, 37.785591],\n        [-122.415024, 37.78554],\n        [-122.415675, 37.785457],\n        [-122.415916, 37.785426],\n        [-122.416261, 37.785382],\n        [-122.417907, 37.785176],\n        [-122.417812, 37.784709],\n        [-122.417715, 37.784234],\n        [-122.417622, 37.783777],\n        [-122.417527, 37.78331],\n        [-122.417337, 37.782379],\n        [-122.417147, 37.781446],\n        [-122.416982, 37.780604],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418567, 37.780129],\n        [-122.418419, 37.779388],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"74-58\": {\n    \"distance\": 2.864083961245549,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"75-58\": {\n    \"distance\": 2.3033657013026496,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"76-58\": {\n    \"distance\": 1.5413334175509248,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"77-58\": {\n    \"distance\": 2.061865440284677,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"82-58\": {\n    \"distance\": 3.5776776985856427,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643]\n      ]\n    }\n  },\n  \"60-59\": {\n    \"distance\": 4.376904786473483,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403356, 37.805116],\n        [-122.403268, 37.805142],\n        [-122.403174, 37.80514],\n        [-122.402723, 37.804821],\n        [-122.402206, 37.804441],\n        [-122.402155, 37.804399],\n        [-122.40207, 37.804321],\n        [-122.401904, 37.804165],\n        [-122.401794, 37.804076],\n        [-122.401236, 37.80342],\n        [-122.400903, 37.803058],\n        [-122.400448, 37.802547],\n        [-122.399792, 37.801819],\n        [-122.399165, 37.801123],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"61-59\": {\n    \"distance\": 3.4141922040861714,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"62-59\": {\n    \"distance\": 2.6691142979876328,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"63-59\": {\n    \"distance\": 2.9578223020819827,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"64-59\": {\n    \"distance\": 3.1259377036263674,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"65-59\": {\n    \"distance\": 2.207384664479592,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.403807, 37.770119],\n        [-122.403857, 37.77005],\n        [-122.403758, 37.769991],\n        [-122.403733, 37.769886],\n        [-122.403774, 37.76982],\n        [-122.403881, 37.769773],\n        [-122.40396, 37.769777],\n        [-122.404031, 37.769808],\n        [-122.404078, 37.769861],\n        [-122.404085, 37.769951],\n        [-122.404048, 37.770007],\n        [-122.403939, 37.770055],\n        [-122.404014, 37.770133],\n        [-122.404749, 37.770735],\n        [-122.404957, 37.770906],\n        [-122.405357, 37.771232],\n        [-122.405451, 37.771303],\n        [-122.405569, 37.77135],\n        [-122.405964, 37.771631],\n        [-122.406473, 37.771951],\n        [-122.406797, 37.772255],\n        [-122.406939, 37.772376],\n        [-122.407044, 37.772488],\n        [-122.407267, 37.77272],\n        [-122.407773, 37.773152],\n        [-122.408445, 37.773688],\n        [-122.408535, 37.77376],\n        [-122.409093, 37.774203],\n        [-122.409524, 37.774548],\n        [-122.410082, 37.774993],\n        [-122.410619, 37.775421],\n        [-122.411078, 37.775786],\n        [-122.411614, 37.776214],\n        [-122.412166, 37.776654],\n        [-122.412625, 37.777019],\n        [-122.413171, 37.777454],\n        [-122.414157, 37.778244],\n        [-122.414757, 37.778725],\n        [-122.414902, 37.778846],\n        [-122.414964, 37.778942],\n        [-122.415102, 37.77964],\n        [-122.415133, 37.779795],\n        [-122.415167, 37.779959],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"66-59\": {\n    \"distance\": 1.6680101641976,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.415508, 37.775602],\n        [-122.415145, 37.775891],\n        [-122.414716, 37.776233],\n        [-122.414119, 37.776705],\n        [-122.413171, 37.777454],\n        [-122.414157, 37.778244],\n        [-122.414757, 37.778725],\n        [-122.414902, 37.778846],\n        [-122.414964, 37.778942],\n        [-122.415102, 37.77964],\n        [-122.415133, 37.779795],\n        [-122.415167, 37.779959],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"67-59\": {\n    \"distance\": 0.9388362818468605,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.414902, 37.778846],\n        [-122.414964, 37.778942],\n        [-122.415102, 37.77964],\n        [-122.415133, 37.779795],\n        [-122.415167, 37.779959],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"68-59\": {\n    \"distance\": 2.5857549163614673,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.399502, 37.786634],\n        [-122.399975, 37.787011],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"69-59\": {\n    \"distance\": 2.7124785779199554,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"70-59\": {\n    \"distance\": 2.7393312940731467,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"71-59\": {\n    \"distance\": 1.6536280649501802,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.410071, 37.78808],\n        [-122.411699, 37.787873],\n        [-122.411642, 37.787567],\n        [-122.411572, 37.78722],\n        [-122.411516, 37.78694],\n        [-122.411334, 37.78601],\n        [-122.412147, 37.785909],\n        [-122.412979, 37.7858],\n        [-122.414619, 37.785591],\n        [-122.415024, 37.78554],\n        [-122.415675, 37.785457],\n        [-122.415916, 37.785426],\n        [-122.416261, 37.785382],\n        [-122.417907, 37.785176],\n        [-122.417812, 37.784709],\n        [-122.417715, 37.784234],\n        [-122.417622, 37.783777],\n        [-122.417527, 37.78331],\n        [-122.417337, 37.782379],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"72-59\": {\n    \"distance\": 0.6869017894745545,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"73-59\": {\n    \"distance\": 3.2199402540171147,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.404371, 37.788802],\n        [-122.405221, 37.788694],\n        [-122.405132, 37.788238],\n        [-122.405045, 37.787766],\n        [-122.404972, 37.787418],\n        [-122.404855, 37.786835],\n        [-122.405363, 37.786769],\n        [-122.406409, 37.786637],\n        [-122.408068, 37.786425],\n        [-122.408951, 37.786313],\n        [-122.409335, 37.786264],\n        [-122.409701, 37.786218],\n        [-122.409848, 37.786199],\n        [-122.411334, 37.78601],\n        [-122.412147, 37.785909],\n        [-122.412979, 37.7858],\n        [-122.414619, 37.785591],\n        [-122.415024, 37.78554],\n        [-122.415675, 37.785457],\n        [-122.415916, 37.785426],\n        [-122.416261, 37.785382],\n        [-122.417907, 37.785176],\n        [-122.417812, 37.784709],\n        [-122.417715, 37.784234],\n        [-122.417622, 37.783777],\n        [-122.417527, 37.78331],\n        [-122.417337, 37.782379],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"74-59\": {\n    \"distance\": 2.9009683949107057,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"76-59\": {\n    \"distance\": 1.5782178512160825,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"75-59\": {\n    \"distance\": 2.340250134967807,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"77-59\": {\n    \"distance\": 2.098749873949835,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"82-59\": {\n    \"distance\": 3.4942438289379982,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.404371, 37.788802],\n        [-122.405221, 37.788694],\n        [-122.405132, 37.788238],\n        [-122.405045, 37.787766],\n        [-122.404972, 37.787418],\n        [-122.404855, 37.786835],\n        [-122.405363, 37.786769],\n        [-122.406409, 37.786637],\n        [-122.408068, 37.786425],\n        [-122.408951, 37.786313],\n        [-122.409335, 37.786264],\n        [-122.409701, 37.786218],\n        [-122.409848, 37.786199],\n        [-122.411334, 37.78601],\n        [-122.412147, 37.785909],\n        [-122.412979, 37.7858],\n        [-122.414619, 37.785591],\n        [-122.415024, 37.78554],\n        [-122.415675, 37.785457],\n        [-122.415916, 37.785426],\n        [-122.416261, 37.785382],\n        [-122.417907, 37.785176],\n        [-122.417812, 37.784709],\n        [-122.417715, 37.784234],\n        [-122.417622, 37.783777],\n        [-122.417527, 37.78331],\n        [-122.417337, 37.782379],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"61-60\": {\n    \"distance\": 3.268363630064943,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"62-60\": {\n    \"distance\": 2.5232856041445983,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"63-60\": {\n    \"distance\": 2.2569965767477878,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"64-60\": {\n    \"distance\": 2.9801091296051383,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"65-60\": {\n    \"distance\": 5.075946471028846,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.403807, 37.770119],\n        [-122.403857, 37.77005],\n        [-122.403758, 37.769991],\n        [-122.403733, 37.769886],\n        [-122.403774, 37.76982],\n        [-122.403881, 37.769773],\n        [-122.40396, 37.769777],\n        [-122.404031, 37.769808],\n        [-122.404078, 37.769861],\n        [-122.404085, 37.769951],\n        [-122.404048, 37.770007],\n        [-122.403939, 37.770055],\n        [-122.404014, 37.770133],\n        [-122.404749, 37.770735],\n        [-122.404957, 37.770906],\n        [-122.405357, 37.771232],\n        [-122.405451, 37.771303],\n        [-122.405569, 37.77135],\n        [-122.405964, 37.771631],\n        [-122.406473, 37.771951],\n        [-122.406797, 37.772255],\n        [-122.406939, 37.772376],\n        [-122.407044, 37.772488],\n        [-122.407267, 37.77272],\n        [-122.407773, 37.773152],\n        [-122.407848, 37.773298],\n        [-122.407866, 37.773373],\n        [-122.407872, 37.773448],\n        [-122.407859, 37.773513],\n        [-122.407832, 37.773582],\n        [-122.407792, 37.77365],\n        [-122.407736, 37.77371],\n        [-122.407502, 37.773872],\n        [-122.407407, 37.773944],\n        [-122.407311, 37.774021],\n        [-122.407231, 37.774093],\n        [-122.407156, 37.774174],\n        [-122.407086, 37.774261],\n        [-122.406787, 37.774665],\n        [-122.406654, 37.774836],\n        [-122.406518, 37.774999],\n        [-122.406378, 37.775151],\n        [-122.406219, 37.775314],\n        [-122.406057, 37.775469],\n        [-122.405907, 37.775601],\n        [-122.405758, 37.775723],\n        [-122.405602, 37.775839],\n        [-122.405467, 37.775927],\n        [-122.405315, 37.776008],\n        [-122.405095, 37.776113],\n        [-122.403258, 37.777202],\n        [-122.402994, 37.777365],\n        [-122.402737, 37.777532],\n        [-122.402476, 37.777712],\n        [-122.402207, 37.777903],\n        [-122.401954, 37.778094],\n        [-122.40129, 37.778716],\n        [-122.401106, 37.778873],\n        [-122.400991, 37.77897],\n        [-122.400526, 37.779359],\n        [-122.400369, 37.7795],\n        [-122.400219, 37.779645],\n        [-122.400086, 37.779781],\n        [-122.399974, 37.779903],\n        [-122.399869, 37.780029],\n        [-122.399786, 37.78014],\n        [-122.399726, 37.780249],\n        [-122.39968, 37.780359],\n        [-122.399649, 37.780466],\n        [-122.39963, 37.78056],\n        [-122.399619, 37.780658],\n        [-122.399635, 37.780791],\n        [-122.400158, 37.781211],\n        [-122.400376, 37.781387],\n        [-122.400621, 37.781581],\n        [-122.401175, 37.782025],\n        [-122.401703, 37.782447],\n        [-122.401932, 37.782633],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399541, 37.790817],\n        [-122.399557, 37.790909],\n        [-122.399608, 37.791203],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"66-60\": {\n    \"distance\": 4.69467155262372,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.416447, 37.775699],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.417677, 37.776665],\n        [-122.417784, 37.776729],\n        [-122.417839, 37.77677],\n        [-122.417889, 37.776816],\n        [-122.417916, 37.776859],\n        [-122.418049, 37.777505],\n        [-122.417586, 37.777568],\n        [-122.417475, 37.777584],\n        [-122.416945, 37.777652],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399541, 37.790817],\n        [-122.399557, 37.790909],\n        [-122.399608, 37.791203],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"67-60\": {\n    \"distance\": 3.8484700998532846,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399541, 37.790817],\n        [-122.399557, 37.790909],\n        [-122.399608, 37.791203],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"68-60\": {\n    \"distance\": 2.6883190549275047,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.399502, 37.786634],\n        [-122.399975, 37.787011],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.402741, 37.795597],\n        [-122.40238, 37.795641],\n        [-122.401674, 37.795719],\n        [-122.40111, 37.795793],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"69-60\": {\n    \"distance\": 3.9238317711623876,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"70-60\": {\n    \"distance\": 3.8969792511795465,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"71-60\": {\n    \"distance\": 2.6454271224884436,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399541, 37.790817],\n        [-122.399557, 37.790909],\n        [-122.399608, 37.791203],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"72-60\": {\n    \"distance\": 3.2771532092017925,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399541, 37.790817],\n        [-122.399557, 37.790909],\n        [-122.399608, 37.791203],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"73-60\": {\n    \"distance\": 1.3450297510416136,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406256, 37.79792],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"74-60\": {\n    \"distance\": 1.776353550093847,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.39918, 37.800768],\n        [-122.399253, 37.80084],\n        [-122.39932, 37.800915],\n        [-122.40008, 37.801777],\n        [-122.400371, 37.802109],\n        [-122.400705, 37.802491],\n        [-122.401022, 37.802851],\n        [-122.401465, 37.803332],\n        [-122.401927, 37.803854],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"75-60\": {\n    \"distance\": 1.639424409633613,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"76-60\": {\n    \"distance\": 2.3168135516365846,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399541, 37.790817],\n        [-122.399557, 37.790909],\n        [-122.399608, 37.791203],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"77-60\": {\n    \"distance\": 1.7962818809270225,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399541, 37.790817],\n        [-122.399557, 37.790909],\n        [-122.399608, 37.791203],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"82-60\": {\n    \"distance\": 0.763332378261187,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403159, 37.804828]\n      ]\n    }\n  },\n  \"62-61\": {\n    \"distance\": 0.7450781430942389,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"63-61\": {\n    \"distance\": 1.9018553076201759,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"64-61\": {\n    \"distance\": 0.2882550879075677,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"65-61\": {\n    \"distance\": 1.5295772842624706,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.392679, 37.778932],\n        [-122.392231, 37.779287],\n        [-122.391662, 37.779735],\n        [-122.39108, 37.780194],\n        [-122.390632, 37.780548],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"67-61\": {\n    \"distance\": 3.400933001644084,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"66-61\": {\n    \"distance\": 3.74029924145771,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.415508, 37.775602],\n        [-122.415145, 37.775891],\n        [-122.414716, 37.776233],\n        [-122.414171, 37.775802],\n        [-122.413714, 37.775439],\n        [-122.413157, 37.774996],\n        [-122.412622, 37.774568],\n        [-122.412165, 37.774203],\n        [-122.411627, 37.773773],\n        [-122.411074, 37.77333],\n        [-122.410692, 37.773024],\n        [-122.410083, 37.772537],\n        [-122.409693, 37.772845],\n        [-122.408922, 37.773454],\n        [-122.408666, 37.773656],\n        [-122.408445, 37.773688],\n        [-122.408286, 37.773712],\n        [-122.407822, 37.773761],\n        [-122.40771, 37.773783],\n        [-122.407609, 37.773817],\n        [-122.407502, 37.773872],\n        [-122.407407, 37.773944],\n        [-122.407311, 37.774021],\n        [-122.407231, 37.774093],\n        [-122.407156, 37.774174],\n        [-122.407086, 37.774261],\n        [-122.406787, 37.774665],\n        [-122.406654, 37.774836],\n        [-122.406518, 37.774999],\n        [-122.406378, 37.775151],\n        [-122.406219, 37.775314],\n        [-122.406057, 37.775469],\n        [-122.405907, 37.775601],\n        [-122.405758, 37.775723],\n        [-122.405602, 37.775839],\n        [-122.405467, 37.775927],\n        [-122.405315, 37.776008],\n        [-122.405095, 37.776113],\n        [-122.403258, 37.777202],\n        [-122.402994, 37.777365],\n        [-122.402737, 37.777532],\n        [-122.402476, 37.777712],\n        [-122.402207, 37.777903],\n        [-122.401954, 37.778094],\n        [-122.40129, 37.778716],\n        [-122.401106, 37.778873],\n        [-122.400991, 37.77897],\n        [-122.400526, 37.779359],\n        [-122.400369, 37.7795],\n        [-122.400219, 37.779645],\n        [-122.400086, 37.779781],\n        [-122.399974, 37.779903],\n        [-122.399869, 37.780029],\n        [-122.399786, 37.78014],\n        [-122.399726, 37.780249],\n        [-122.39968, 37.780359],\n        [-122.399649, 37.780466],\n        [-122.39963, 37.78056],\n        [-122.399619, 37.780658],\n        [-122.399635, 37.780791],\n        [-122.398365, 37.781794],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"68-61\": {\n    \"distance\": 1.306897959094904,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"69-61\": {\n    \"distance\": 0.6984085928166097,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.392679, 37.778932],\n        [-122.392231, 37.779287],\n        [-122.391662, 37.779735],\n        [-122.39108, 37.780194],\n        [-122.390632, 37.780548],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"70-61\": {\n    \"distance\": 0.6715560728337686,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.392679, 37.778932],\n        [-122.392231, 37.779287],\n        [-122.391662, 37.779735],\n        [-122.39108, 37.780194],\n        [-122.390632, 37.780548],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"71-61\": {\n    \"distance\": 2.241101227929976,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"72-61\": {\n    \"distance\": 2.8296161109925917,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"73-61\": {\n    \"distance\": 2.965283642444324,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"74-61\": {\n    \"distance\": 2.244098696475578,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"75-61\": {\n    \"distance\": 1.6833804365326788,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"76-61\": {\n    \"distance\": 1.8692764534273854,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"77-61\": {\n    \"distance\": 1.4418801755147057,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"82-61\": {\n    \"distance\": 2.9576924338156707,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"63-62\": {\n    \"distance\": 1.1567774015216368,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"64-62\": {\n    \"distance\": 0.4568236426344345,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"65-62\": {\n    \"distance\": 2.231714975637545,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"66-62\": {\n    \"distance\": 2.954911000577483,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.415508, 37.775602],\n        [-122.415145, 37.775891],\n        [-122.414716, 37.776233],\n        [-122.414119, 37.776705],\n        [-122.413171, 37.777454],\n        [-122.412419, 37.77805],\n        [-122.412205, 37.77822],\n        [-122.410944, 37.779218],\n        [-122.408721, 37.780977],\n        [-122.40727, 37.782119],\n        [-122.407177, 37.782192],\n        [-122.406495, 37.782729],\n        [-122.406041, 37.783085],\n        [-122.405437, 37.783556],\n        [-122.404868, 37.783999],\n        [-122.404256, 37.784489],\n        [-122.404156, 37.784618],\n        [-122.403515, 37.785123],\n        [-122.403264, 37.785321],\n        [-122.402768, 37.785709],\n        [-122.402608, 37.785836],\n        [-122.402493, 37.785928],\n        [-122.402156, 37.786195],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"67-62\": {\n    \"distance\": 2.653482351013302,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"68-62\": {\n    \"distance\": 0.5615029260769975,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"69-62\": {\n    \"distance\": 1.4005462841916838,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"70-62\": {\n    \"distance\": 1.3736937642088427,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"72-62\": {\n    \"distance\": 2.082165460361809,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"73-62\": {\n    \"distance\": 2.2178329918135415,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"74-62\": {\n    \"distance\": 1.499020790377039,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"75-62\": {\n    \"distance\": 0.9383025304341395,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"76-62\": {\n    \"distance\": 1.1218258027966015,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"77-62\": {\n    \"distance\": 0.6968022694161664,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"82-62\": {\n    \"distance\": 2.212614527717132,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"64-63\": {\n    \"distance\": 0.7231144989008095,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"65-63\": {\n    \"distance\": 2.4980058319039204,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"66-63\": {\n    \"distance\": 2.7389769614148705,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.415508, 37.775602],\n        [-122.415145, 37.775891],\n        [-122.414716, 37.776233],\n        [-122.414119, 37.776705],\n        [-122.413171, 37.777454],\n        [-122.412419, 37.77805],\n        [-122.412205, 37.77822],\n        [-122.410944, 37.779218],\n        [-122.408721, 37.780977],\n        [-122.40727, 37.782119],\n        [-122.407177, 37.782192],\n        [-122.406495, 37.782729],\n        [-122.406041, 37.783085],\n        [-122.405437, 37.783556],\n        [-122.404868, 37.783999],\n        [-122.404256, 37.784489],\n        [-122.404156, 37.784618],\n        [-122.403515, 37.785123],\n        [-122.403264, 37.785321],\n        [-122.402768, 37.785709],\n        [-122.402608, 37.785836],\n        [-122.402493, 37.785928],\n        [-122.402156, 37.786195],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"67-63\": {\n    \"distance\": 2.4375483118506893,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"68-63\": {\n    \"distance\": 0.34556888691438487,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"71-62\": {\n    \"distance\": 1.4936505772991924,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785231]\n      ]\n    }\n  },\n  \"69-63\": {\n    \"distance\": 1.6668371404580586,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"70-63\": {\n    \"distance\": 1.6399846204752175,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"71-63\": {\n    \"distance\": 1.2777165381365798,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"72-63\": {\n    \"distance\": 1.8662314211991962,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"73-63\": {\n    \"distance\": 2.001898952650929,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"74-63\": {\n    \"distance\": 1.2830867512144264,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"75-63\": {\n    \"distance\": 0.7223684912715268,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"76-63\": {\n    \"distance\": 0.9058917636339888,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"77-63\": {\n    \"distance\": 0.4808682302535538,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"82-63\": {\n    \"distance\": 1.9966804885545193,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"65-64\": {\n    \"distance\": 1.774891920450874,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"67-64\": {\n    \"distance\": 3.1103057566520356,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"66-64\": {\n    \"distance\": 3.4509383057372247,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.415508, 37.775602],\n        [-122.415145, 37.775891],\n        [-122.414716, 37.776233],\n        [-122.414171, 37.775802],\n        [-122.413714, 37.775439],\n        [-122.413157, 37.774996],\n        [-122.412622, 37.774568],\n        [-122.412165, 37.774203],\n        [-122.411627, 37.773773],\n        [-122.411074, 37.77333],\n        [-122.410692, 37.773024],\n        [-122.410083, 37.772537],\n        [-122.409693, 37.772845],\n        [-122.408922, 37.773454],\n        [-122.408666, 37.773656],\n        [-122.408445, 37.773688],\n        [-122.408286, 37.773712],\n        [-122.407822, 37.773761],\n        [-122.40771, 37.773783],\n        [-122.407609, 37.773817],\n        [-122.407502, 37.773872],\n        [-122.407407, 37.773944],\n        [-122.407311, 37.774021],\n        [-122.407231, 37.774093],\n        [-122.407156, 37.774174],\n        [-122.407086, 37.774261],\n        [-122.406787, 37.774665],\n        [-122.406654, 37.774836],\n        [-122.406518, 37.774999],\n        [-122.406378, 37.775151],\n        [-122.406219, 37.775314],\n        [-122.406057, 37.775469],\n        [-122.405907, 37.775601],\n        [-122.405758, 37.775723],\n        [-122.405602, 37.775839],\n        [-122.405467, 37.775927],\n        [-122.405315, 37.776008],\n        [-122.405095, 37.776113],\n        [-122.403258, 37.777202],\n        [-122.402994, 37.777365],\n        [-122.402737, 37.777532],\n        [-122.402476, 37.777712],\n        [-122.402207, 37.777903],\n        [-122.401954, 37.778094],\n        [-122.40129, 37.778716],\n        [-122.401106, 37.778873],\n        [-122.400991, 37.77897],\n        [-122.400526, 37.779359],\n        [-122.400369, 37.7795],\n        [-122.400219, 37.779645],\n        [-122.400086, 37.779781],\n        [-122.399974, 37.779903],\n        [-122.399869, 37.780029],\n        [-122.399786, 37.78014],\n        [-122.399726, 37.780249],\n        [-122.39968, 37.780359],\n        [-122.399649, 37.780466],\n        [-122.39963, 37.78056],\n        [-122.399619, 37.780658],\n        [-122.399635, 37.780791],\n        [-122.398365, 37.781794],\n        [-122.3974, 37.782556],\n        [-122.396301, 37.783425],\n        [-122.395714, 37.78389],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"68-64\": {\n    \"distance\": 1.0175370233744176,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396301, 37.783425],\n        [-122.395714, 37.78389],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"69-64\": {\n    \"distance\": 0.9437232290050126,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"70-64\": {\n    \"distance\": 0.9168707090221715,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"71-64\": {\n    \"distance\": 1.950473982937927,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"72-64\": {\n    \"distance\": 2.538988866000543,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"73-64\": {\n    \"distance\": 2.6746563974522757,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"74-64\": {\n    \"distance\": 1.9558441960157735,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"75-64\": {\n    \"distance\": 1.3951259360728743,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"76-64\": {\n    \"distance\": 1.578649208435336,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"77-64\": {\n    \"distance\": 1.1536256750549012,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"82-64\": {\n    \"distance\": 2.669437933355866,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232]\n      ]\n    }\n  },\n  \"66-65\": {\n    \"distance\": 2.174519059480036,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.415508, 37.775602],\n        [-122.415145, 37.775891],\n        [-122.414716, 37.776233],\n        [-122.414171, 37.775802],\n        [-122.413714, 37.775439],\n        [-122.413157, 37.774996],\n        [-122.412622, 37.774568],\n        [-122.412165, 37.774203],\n        [-122.411627, 37.773773],\n        [-122.411074, 37.77333],\n        [-122.410692, 37.773024],\n        [-122.410083, 37.772537],\n        [-122.409081, 37.771736],\n        [-122.408536, 37.7713],\n        [-122.406997, 37.77007],\n        [-122.406301, 37.770631],\n        [-122.405549, 37.771224],\n        [-122.405451, 37.771303],\n        [-122.405357, 37.771232],\n        [-122.404957, 37.770906],\n        [-122.404749, 37.770735],\n        [-122.404014, 37.770133],\n        [-122.403939, 37.770055],\n        [-122.403857, 37.77005],\n        [-122.403807, 37.770119],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"67-65\": {\n    \"distance\": 1.8410907163645704,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415742, 37.777047],\n        [-122.415323, 37.776716],\n        [-122.414716, 37.776233],\n        [-122.414171, 37.775802],\n        [-122.413714, 37.775439],\n        [-122.413157, 37.774996],\n        [-122.412622, 37.774568],\n        [-122.412165, 37.774203],\n        [-122.411627, 37.773773],\n        [-122.411074, 37.77333],\n        [-122.410692, 37.773024],\n        [-122.410083, 37.772537],\n        [-122.409081, 37.771736],\n        [-122.408536, 37.7713],\n        [-122.406997, 37.77007],\n        [-122.406301, 37.770631],\n        [-122.405549, 37.771224],\n        [-122.405451, 37.771303],\n        [-122.405357, 37.771232],\n        [-122.404957, 37.770906],\n        [-122.404749, 37.770735],\n        [-122.404014, 37.770133],\n        [-122.403939, 37.770055],\n        [-122.403857, 37.77005],\n        [-122.403807, 37.770119],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"68-65\": {\n    \"distance\": 2.2379286017061246,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.398769, 37.776574],\n        [-122.400197, 37.775445],\n        [-122.400875, 37.774909],\n        [-122.400995, 37.774814],\n        [-122.401546, 37.774377],\n        [-122.40206, 37.773973],\n        [-122.402109, 37.773934],\n        [-122.402275, 37.773802],\n        [-122.402681, 37.773481],\n        [-122.40322, 37.773055],\n        [-122.402509, 37.772489],\n        [-122.402204, 37.772245],\n        [-122.401787, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"69-65\": {\n    \"distance\": 0.8311688845555096,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"70-65\": {\n    \"distance\": 0.858021600708701,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"71-65\": {\n    \"distance\": 2.6167507853477665,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.408052, 37.786428],\n        [-122.408951, 37.786313],\n        [-122.408843, 37.785847],\n        [-122.408723, 37.785545],\n        [-122.408697, 37.785481],\n        [-122.408678, 37.785392],\n        [-122.408538, 37.784536],\n        [-122.408525, 37.78446],\n        [-122.40851, 37.784397],\n        [-122.408459, 37.784306],\n        [-122.408207, 37.784092],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.400799, 37.77742],\n        [-122.401432, 37.776919],\n        [-122.401989, 37.776478],\n        [-122.402537, 37.776045],\n        [-122.403086, 37.775611],\n        [-122.403646, 37.775168],\n        [-122.404226, 37.77471],\n        [-122.404354, 37.774608],\n        [-122.404762, 37.774286],\n        [-122.40322, 37.773055],\n        [-122.402509, 37.772489],\n        [-122.402204, 37.772245],\n        [-122.401787, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"72-65\": {\n    \"distance\": 1.51495915574954,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.41194, 37.780011],\n        [-122.411484, 37.779648],\n        [-122.410944, 37.779218],\n        [-122.410401, 37.778784],\n        [-122.409945, 37.778419],\n        [-122.409388, 37.777976],\n        [-122.407854, 37.776752],\n        [-122.407519, 37.776485],\n        [-122.407305, 37.776315],\n        [-122.406308, 37.775519],\n        [-122.405447, 37.774832],\n        [-122.405251, 37.774676],\n        [-122.4049, 37.774396],\n        [-122.404762, 37.774286],\n        [-122.40322, 37.773055],\n        [-122.402509, 37.772489],\n        [-122.402204, 37.772245],\n        [-122.401787, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"73-65\": {\n    \"distance\": 3.8963142850555443,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.398769, 37.776574],\n        [-122.400197, 37.775445],\n        [-122.400875, 37.774909],\n        [-122.400995, 37.774814],\n        [-122.401546, 37.774377],\n        [-122.40206, 37.773973],\n        [-122.402109, 37.773934],\n        [-122.402275, 37.773802],\n        [-122.402681, 37.773481],\n        [-122.40322, 37.773055],\n        [-122.402509, 37.772489],\n        [-122.402204, 37.772245],\n        [-122.401787, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"74-65\": {\n    \"distance\": 3.7290257611856914,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.41194, 37.780011],\n        [-122.411484, 37.779648],\n        [-122.410944, 37.779218],\n        [-122.410401, 37.778784],\n        [-122.409945, 37.778419],\n        [-122.409388, 37.777976],\n        [-122.407854, 37.776752],\n        [-122.407519, 37.776485],\n        [-122.407305, 37.776315],\n        [-122.406308, 37.775519],\n        [-122.405447, 37.774832],\n        [-122.405251, 37.774676],\n        [-122.4049, 37.774396],\n        [-122.404762, 37.774286],\n        [-122.40322, 37.773055],\n        [-122.402509, 37.772489],\n        [-122.402204, 37.772245],\n        [-122.401787, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"75-65\": {\n    \"distance\": 3.168307501242793,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.41194, 37.780011],\n        [-122.411484, 37.779648],\n        [-122.410944, 37.779218],\n        [-122.410401, 37.778784],\n        [-122.409945, 37.778419],\n        [-122.409388, 37.777976],\n        [-122.407854, 37.776752],\n        [-122.407519, 37.776485],\n        [-122.407305, 37.776315],\n        [-122.406308, 37.775519],\n        [-122.405447, 37.774832],\n        [-122.405251, 37.774676],\n        [-122.4049, 37.774396],\n        [-122.404762, 37.774286],\n        [-122.40322, 37.773055],\n        [-122.402509, 37.772489],\n        [-122.402204, 37.772245],\n        [-122.401787, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"76-65\": {\n    \"distance\": 2.4062752174910673,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.41194, 37.780011],\n        [-122.411484, 37.779648],\n        [-122.410944, 37.779218],\n        [-122.410401, 37.778784],\n        [-122.409945, 37.778419],\n        [-122.409388, 37.777976],\n        [-122.407854, 37.776752],\n        [-122.407519, 37.776485],\n        [-122.407305, 37.776315],\n        [-122.406308, 37.775519],\n        [-122.405447, 37.774832],\n        [-122.405251, 37.774676],\n        [-122.4049, 37.774396],\n        [-122.404762, 37.774286],\n        [-122.40322, 37.773055],\n        [-122.402509, 37.772489],\n        [-122.402204, 37.772245],\n        [-122.401787, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"77-65\": {\n    \"distance\": 2.92680724022482,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.41194, 37.780011],\n        [-122.411484, 37.779648],\n        [-122.410944, 37.779218],\n        [-122.410401, 37.778784],\n        [-122.409945, 37.778419],\n        [-122.409388, 37.777976],\n        [-122.407854, 37.776752],\n        [-122.407519, 37.776485],\n        [-122.407305, 37.776315],\n        [-122.406308, 37.775519],\n        [-122.405447, 37.774832],\n        [-122.405251, 37.774676],\n        [-122.4049, 37.774396],\n        [-122.404762, 37.774286],\n        [-122.40322, 37.773055],\n        [-122.402509, 37.772489],\n        [-122.402204, 37.772245],\n        [-122.401787, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"82-65\": {\n    \"distance\": 4.170617859976428,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.398769, 37.776574],\n        [-122.400197, 37.775445],\n        [-122.400875, 37.774909],\n        [-122.400995, 37.774814],\n        [-122.401546, 37.774377],\n        [-122.40206, 37.773973],\n        [-122.402109, 37.773934],\n        [-122.402275, 37.773802],\n        [-122.402681, 37.773481],\n        [-122.40322, 37.773055],\n        [-122.402509, 37.772489],\n        [-122.402204, 37.772245],\n        [-122.401787, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"67-66\": {\n    \"distance\": 0.7882357502155514,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415742, 37.777047],\n        [-122.415323, 37.776716],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419178, 37.775041],\n        [-122.419134, 37.774833],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"68-66\": {\n    \"distance\": 3.0564628886299112,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.399502, 37.786634],\n        [-122.399975, 37.787011],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.415742, 37.777047],\n        [-122.415323, 37.776716],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419178, 37.775041],\n        [-122.419134, 37.774833],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"69-66\": {\n    \"distance\": 3.2495724724678063,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396953, 37.77866],\n        [-122.397068, 37.778752],\n        [-122.39755, 37.779134],\n        [-122.398087, 37.779565],\n        [-122.398265, 37.779576],\n        [-122.39841, 37.779566],\n        [-122.398571, 37.779546],\n        [-122.398722, 37.779517],\n        [-122.398863, 37.779474],\n        [-122.398986, 37.779423],\n        [-122.399152, 37.779335],\n        [-122.399342, 37.779217],\n        [-122.39954, 37.779081],\n        [-122.400508, 37.778409],\n        [-122.400778, 37.778231],\n        [-122.400968, 37.778122],\n        [-122.401166, 37.778025],\n        [-122.401613, 37.777839],\n        [-122.403668, 37.776775],\n        [-122.403907, 37.776647],\n        [-122.404113, 37.776528],\n        [-122.404336, 37.77638],\n        [-122.404736, 37.77611],\n        [-122.404909, 37.775985],\n        [-122.405083, 37.775847],\n        [-122.40525, 37.7757],\n        [-122.405438, 37.775523],\n        [-122.405611, 37.775358],\n        [-122.405753, 37.775215],\n        [-122.405882, 37.77507],\n        [-122.406007, 37.774917],\n        [-122.406128, 37.774755],\n        [-122.40624, 37.774592],\n        [-122.406357, 37.774406],\n        [-122.406443, 37.774242],\n        [-122.406516, 37.774071],\n        [-122.406571, 37.77389],\n        [-122.406609, 37.773723],\n        [-122.406627, 37.773563],\n        [-122.406635, 37.77337],\n        [-122.406643, 37.773105],\n        [-122.406665, 37.77278],\n        [-122.406967, 37.77254],\n        [-122.407267, 37.77272],\n        [-122.407773, 37.773152],\n        [-122.408445, 37.773688],\n        [-122.408535, 37.77376],\n        [-122.409093, 37.774203],\n        [-122.409524, 37.774548],\n        [-122.410082, 37.774993],\n        [-122.411627, 37.773773],\n        [-122.412235, 37.773293],\n        [-122.412834, 37.77282],\n        [-122.413763, 37.77356],\n        [-122.414368, 37.774043],\n        [-122.414921, 37.774484],\n        [-122.415384, 37.774852],\n        [-122.415916, 37.775271],\n        [-122.416447, 37.775699],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419178, 37.775041],\n        [-122.419134, 37.774833],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"70-66\": {\n    \"distance\": 3.2227199524849652,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396953, 37.77866],\n        [-122.397068, 37.778752],\n        [-122.39755, 37.779134],\n        [-122.398087, 37.779565],\n        [-122.398265, 37.779576],\n        [-122.39841, 37.779566],\n        [-122.398571, 37.779546],\n        [-122.398722, 37.779517],\n        [-122.398863, 37.779474],\n        [-122.398986, 37.779423],\n        [-122.399152, 37.779335],\n        [-122.399342, 37.779217],\n        [-122.39954, 37.779081],\n        [-122.400508, 37.778409],\n        [-122.400778, 37.778231],\n        [-122.400968, 37.778122],\n        [-122.401166, 37.778025],\n        [-122.401613, 37.777839],\n        [-122.403668, 37.776775],\n        [-122.403907, 37.776647],\n        [-122.404113, 37.776528],\n        [-122.404336, 37.77638],\n        [-122.404736, 37.77611],\n        [-122.404909, 37.775985],\n        [-122.405083, 37.775847],\n        [-122.40525, 37.7757],\n        [-122.405438, 37.775523],\n        [-122.405611, 37.775358],\n        [-122.405753, 37.775215],\n        [-122.405882, 37.77507],\n        [-122.406007, 37.774917],\n        [-122.406128, 37.774755],\n        [-122.40624, 37.774592],\n        [-122.406357, 37.774406],\n        [-122.406443, 37.774242],\n        [-122.406516, 37.774071],\n        [-122.406571, 37.77389],\n        [-122.406609, 37.773723],\n        [-122.406627, 37.773563],\n        [-122.406635, 37.77337],\n        [-122.406643, 37.773105],\n        [-122.406665, 37.77278],\n        [-122.406967, 37.77254],\n        [-122.407267, 37.77272],\n        [-122.407773, 37.773152],\n        [-122.408445, 37.773688],\n        [-122.408535, 37.77376],\n        [-122.409093, 37.774203],\n        [-122.409524, 37.774548],\n        [-122.410082, 37.774993],\n        [-122.411627, 37.773773],\n        [-122.412235, 37.773293],\n        [-122.412834, 37.77282],\n        [-122.413763, 37.77356],\n        [-122.414368, 37.774043],\n        [-122.414921, 37.774484],\n        [-122.415384, 37.774852],\n        [-122.415916, 37.775271],\n        [-122.416447, 37.775699],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419178, 37.775041],\n        [-122.419134, 37.774833],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"71-66\": {\n    \"distance\": 2.4026277036841894,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.408052, 37.786428],\n        [-122.408951, 37.786313],\n        [-122.408843, 37.785847],\n        [-122.408723, 37.785545],\n        [-122.408697, 37.785481],\n        [-122.408678, 37.785392],\n        [-122.408538, 37.784536],\n        [-122.408525, 37.78446],\n        [-122.40851, 37.784397],\n        [-122.408459, 37.784306],\n        [-122.408207, 37.784092],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.409703, 37.781763],\n        [-122.410138, 37.782111],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.415742, 37.777047],\n        [-122.415323, 37.776716],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419178, 37.775041],\n        [-122.419134, 37.774833],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"72-66\": {\n    \"distance\": 1.0885862519125862,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.415742, 37.777047],\n        [-122.415323, 37.776716],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419178, 37.775041],\n        [-122.419134, 37.774833],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"73-66\": {\n    \"distance\": 4.328989658166905,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.415742, 37.777047],\n        [-122.415323, 37.776716],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419178, 37.775041],\n        [-122.419134, 37.774833],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"74-66\": {\n    \"distance\": 3.3716763671791496,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.415742, 37.777047],\n        [-122.415323, 37.776716],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419178, 37.775041],\n        [-122.419134, 37.774833],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"75-66\": {\n    \"distance\": 2.810958107236251,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.415742, 37.777047],\n        [-122.415323, 37.776716],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419178, 37.775041],\n        [-122.419134, 37.774833],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"76-66\": {\n    \"distance\": 2.048925823484525,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.415742, 37.777047],\n        [-122.415323, 37.776716],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419178, 37.775041],\n        [-122.419134, 37.774833],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"77-66\": {\n    \"distance\": 2.569457846218278,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.415742, 37.777047],\n        [-122.415323, 37.776716],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419178, 37.775041],\n        [-122.419134, 37.774833],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"82-66\": {\n    \"distance\": 4.0852701045192426,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.415742, 37.777047],\n        [-122.415323, 37.776716],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419178, 37.775041],\n        [-122.419134, 37.774833],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"68-67\": {\n    \"distance\": 2.539193613362086,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.399502, 37.786634],\n        [-122.399975, 37.787011],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"69-67\": {\n    \"distance\": 2.6659172749205737,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"70-67\": {\n    \"distance\": 2.692769991073765,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"71-67\": {\n    \"distance\": 1.8853584284163643,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.408052, 37.786428],\n        [-122.408951, 37.786313],\n        [-122.408843, 37.785847],\n        [-122.408723, 37.785545],\n        [-122.408697, 37.785481],\n        [-122.408678, 37.785392],\n        [-122.408538, 37.784536],\n        [-122.408525, 37.78446],\n        [-122.40851, 37.784397],\n        [-122.408459, 37.784306],\n        [-122.408207, 37.784092],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.409703, 37.781763],\n        [-122.410138, 37.782111],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"72-67\": {\n    \"distance\": 0.5713169766447611,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"73-67\": {\n    \"distance\": 3.8117203828990798,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"75-67\": {\n    \"distance\": 2.293688831968425,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"74-67\": {\n    \"distance\": 2.854407091911324,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"76-67\": {\n    \"distance\": 1.5316565482167004,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"77-67\": {\n    \"distance\": 2.052188570950453,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"82-67\": {\n    \"distance\": 3.568000829251418,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417403, 37.776636]\n      ]\n    }\n  },\n  \"69-68\": {\n    \"distance\": 1.6255797478117087,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"70-68\": {\n    \"distance\": 1.6524324639649,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"71-68\": {\n    \"distance\": 1.485885785511504,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.408052, 37.786428],\n        [-122.408951, 37.786313],\n        [-122.408843, 37.785847],\n        [-122.408723, 37.785545],\n        [-122.408697, 37.785481],\n        [-122.408678, 37.785392],\n        [-122.408538, 37.784536],\n        [-122.408525, 37.78446],\n        [-122.40851, 37.784397],\n        [-122.408459, 37.784306],\n        [-122.408207, 37.784092],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"72-68\": {\n    \"distance\": 1.4901200277926803,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.41194, 37.780011],\n        [-122.411484, 37.779648],\n        [-122.410944, 37.779218],\n        [-122.410401, 37.778784],\n        [-122.409945, 37.778419],\n        [-122.409388, 37.777976],\n        [-122.408839, 37.778409],\n        [-122.408275, 37.778851],\n        [-122.407705, 37.779298],\n        [-122.407162, 37.779736],\n        [-122.405723, 37.780875],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"73-68\": {\n    \"distance\": 2.5959106860251686,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.399117, 37.78365],\n        [-122.400382, 37.782651],\n        [-122.4007, 37.7824],\n        [-122.401004, 37.782162],\n        [-122.401175, 37.782025],\n        [-122.401703, 37.782447],\n        [-122.401932, 37.782633],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"74-68\": {\n    \"distance\": 2.4141626646478653,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.399117, 37.78365],\n        [-122.400382, 37.782651],\n        [-122.4007, 37.7824],\n        [-122.401004, 37.782162],\n        [-122.401175, 37.782025],\n        [-122.401703, 37.782447],\n        [-122.401932, 37.782633],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"75-68\": {\n    \"distance\": 1.8534444047049656,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.399117, 37.78365],\n        [-122.400382, 37.782651],\n        [-122.4007, 37.7824],\n        [-122.401004, 37.782162],\n        [-122.401175, 37.782025],\n        [-122.401703, 37.782447],\n        [-122.401932, 37.782633],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"76-68\": {\n    \"distance\": 1.2767717348221925,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"77-68\": {\n    \"distance\": 1.6119441436869923,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.399117, 37.78365],\n        [-122.400382, 37.782651],\n        [-122.4007, 37.7824],\n        [-122.401004, 37.782162],\n        [-122.401175, 37.782025],\n        [-122.401703, 37.782447],\n        [-122.401932, 37.782633],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"71-69\": {\n    \"distance\": 2.3422981857491805,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.39354, 37.779474],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"82-68\": {\n    \"distance\": 2.870214260946052,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.399117, 37.78365],\n        [-122.400382, 37.782651],\n        [-122.4007, 37.7824],\n        [-122.401004, 37.782162],\n        [-122.401175, 37.782025],\n        [-122.401703, 37.782447],\n        [-122.401932, 37.782633],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"70-69\": {\n    \"distance\": 0.02685272608766316,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"73-69\": {\n    \"distance\": 3.0664806002635294,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.39354, 37.779474],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"72-69\": {\n    \"distance\": 2.095736248755356,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.41194, 37.780011],\n        [-122.411484, 37.779648],\n        [-122.410944, 37.779218],\n        [-122.410401, 37.778784],\n        [-122.409945, 37.778419],\n        [-122.409388, 37.777976],\n        [-122.407854, 37.776752],\n        [-122.407519, 37.776485],\n        [-122.407305, 37.776315],\n        [-122.406308, 37.775519],\n        [-122.405447, 37.774832],\n        [-122.405251, 37.774676],\n        [-122.4049, 37.774396],\n        [-122.404762, 37.774286],\n        [-122.40322, 37.773055],\n        [-122.402509, 37.772489],\n        [-122.402204, 37.772245],\n        [-122.401787, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"74-69\": {\n    \"distance\": 2.884732578886226,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.39354, 37.779474],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"75-69\": {\n    \"distance\": 2.3240143189433273,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.39354, 37.779474],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"76-69\": {\n    \"distance\": 1.9704734112465903,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.39354, 37.779474],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"77-69\": {\n    \"distance\": 2.0825140579253545,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.39354, 37.779474],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"82-69\": {\n    \"distance\": 3.3407841751844134,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.39354, 37.779474],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395997, 37.776315]\n      ]\n    }\n  },\n  \"71-70\": {\n    \"distance\": 2.3154456657663394,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.407786, 37.787428],\n        [-122.407649, 37.787445],\n        [-122.407493, 37.787464],\n        [-122.40733, 37.787484],\n        [-122.407205, 37.7875],\n        [-122.407063, 37.787517],\n        [-122.406589, 37.787566],\n        [-122.405045, 37.787766],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.39354, 37.779474],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"72-70\": {\n    \"distance\": 2.122588964908547,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.41194, 37.780011],\n        [-122.411484, 37.779648],\n        [-122.410944, 37.779218],\n        [-122.410401, 37.778784],\n        [-122.409945, 37.778419],\n        [-122.409388, 37.777976],\n        [-122.407854, 37.776752],\n        [-122.407519, 37.776485],\n        [-122.407305, 37.776315],\n        [-122.406308, 37.775519],\n        [-122.405447, 37.774832],\n        [-122.405251, 37.774676],\n        [-122.4049, 37.774396],\n        [-122.404762, 37.774286],\n        [-122.40322, 37.773055],\n        [-122.402509, 37.772489],\n        [-122.402204, 37.772245],\n        [-122.401787, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"73-70\": {\n    \"distance\": 3.0396280802806883,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.39354, 37.779474],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"74-70\": {\n    \"distance\": 2.857880058903385,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.39354, 37.779474],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"75-70\": {\n    \"distance\": 2.2971617989604862,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.39354, 37.779474],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"76-70\": {\n    \"distance\": 1.943620891263749,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.39354, 37.779474],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"77-70\": {\n    \"distance\": 2.0556615379425134,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.39354, 37.779474],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"82-70\": {\n    \"distance\": 3.3139316552015723,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.39354, 37.779474],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.39578, 37.776485]\n      ]\n    }\n  },\n  \"72-71\": {\n    \"distance\": 1.3625240422715554,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.406229, 37.785713],\n        [-122.407789, 37.785505],\n        [-122.407866, 37.785495],\n        [-122.408052, 37.786428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"73-71\": {\n    \"distance\": 1.6033611495623319,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.404371, 37.788802],\n        [-122.405221, 37.788694],\n        [-122.406771, 37.788499],\n        [-122.407426, 37.788415],\n        [-122.407518, 37.788404],\n        [-122.407762, 37.788373],\n        [-122.408329, 37.788301],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"74-71\": {\n    \"distance\": 1.5642229893384023,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403678, 37.788891],\n        [-122.404371, 37.788802],\n        [-122.405221, 37.788694],\n        [-122.406771, 37.788499],\n        [-122.407426, 37.788415],\n        [-122.407518, 37.788404],\n        [-122.407762, 37.788373],\n        [-122.408329, 37.788301],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"75-71\": {\n    \"distance\": 1.0035047293955028,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403678, 37.788891],\n        [-122.404371, 37.788802],\n        [-122.405221, 37.788694],\n        [-122.406771, 37.788499],\n        [-122.407426, 37.788415],\n        [-122.407518, 37.788404],\n        [-122.407762, 37.788373],\n        [-122.408329, 37.788301],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"76-71\": {\n    \"distance\": 0.6104310980173367,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.406229, 37.785713],\n        [-122.407789, 37.785505],\n        [-122.407866, 37.785495],\n        [-122.408052, 37.786428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"77-71\": {\n    \"distance\": 0.7620044683775296,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401991, 37.788963],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.40214, 37.789085],\n        [-122.402632, 37.789023],\n        [-122.402845, 37.788996],\n        [-122.403678, 37.788891],\n        [-122.404371, 37.788802],\n        [-122.405221, 37.788694],\n        [-122.406771, 37.788499],\n        [-122.407426, 37.788415],\n        [-122.407518, 37.788404],\n        [-122.407762, 37.788373],\n        [-122.408329, 37.788301],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"82-71\": {\n    \"distance\": 1.8776647244832154,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.404371, 37.788802],\n        [-122.405221, 37.788694],\n        [-122.406771, 37.788499],\n        [-122.407426, 37.788415],\n        [-122.407518, 37.788404],\n        [-122.407762, 37.788373],\n        [-122.408329, 37.788301],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788453]\n      ]\n    }\n  },\n  \"74-72\": {\n    \"distance\": 2.283090201259832,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"75-72\": {\n    \"distance\": 1.7223719413169332,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"73-72\": {\n    \"distance\": 3.2404034922475877,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"76-72\": {\n    \"distance\": 0.9603396575652077,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"77-72\": {\n    \"distance\": 1.4808716802989603,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"82-72\": {\n    \"distance\": 2.9966839385999258,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412805, 37.780268]\n      ]\n    }\n  },\n  \"74-73\": {\n    \"distance\": 1.7754044437232743,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.397611, 37.79352],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.400335, 37.795029],\n        [-122.401337, 37.794864],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.404507, 37.796369],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406307, 37.797566],\n        [-122.406733, 37.797863],\n        [-122.40704, 37.798072],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.40788, 37.798686],\n        [-122.40722, 37.79877],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"75-73\": {\n    \"distance\": 1.4587855267503322,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.401337, 37.794864],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.404507, 37.796369],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406307, 37.797566],\n        [-122.406733, 37.797863],\n        [-122.40704, 37.798072],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.40788, 37.798686],\n        [-122.40722, 37.79877],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"76-73\": {\n    \"distance\": 1.758825756861645,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.404507, 37.796369],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406307, 37.797566],\n        [-122.406733, 37.797863],\n        [-122.40704, 37.798072],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.40788, 37.798686],\n        [-122.40722, 37.79877],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"77-73\": {\n    \"distance\": 1.5160534198843687,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.404507, 37.796369],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406307, 37.797566],\n        [-122.406733, 37.797863],\n        [-122.40704, 37.798072],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.40788, 37.798686],\n        [-122.40722, 37.79877],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"82-73\": {\n    \"distance\": 0.8545144526877435,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.406256, 37.79792],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.406307, 37.797566],\n        [-122.406733, 37.797863],\n        [-122.40704, 37.798072],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.40788, 37.798686],\n        [-122.40722, 37.79877],\n        [-122.407172, 37.798528]\n      ]\n    }\n  },\n  \"75-74\": {\n    \"distance\": 0.5607193130875997,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"76-74\": {\n    \"distance\": 1.3227505436946247,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"77-74\": {\n    \"distance\": 0.8022188729850621,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"82-74\": {\n    \"distance\": 1.301905242401685,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398615, 37.798906],\n        [-122.398334, 37.798957],\n        [-122.398222, 37.798989],\n        [-122.398097, 37.799039],\n        [-122.398026, 37.799069],\n        [-122.397961, 37.799103],\n        [-122.397882, 37.799145],\n        [-122.397792, 37.799184],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393072, 37.79443],\n        [-122.392777, 37.794156],\n        [-122.392443, 37.793844],\n        [-122.392512, 37.793786],\n        [-122.392595, 37.793719],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"76-75\": {\n    \"distance\": 0.7620322837517256,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"77-75\": {\n    \"distance\": 0.241500613042163,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"77-76\": {\n    \"distance\": 0.5205320227337523,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"82-75\": {\n    \"distance\": 1.2743130504276934,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.398945, 37.79122]\n      ]\n    }\n  },\n  \"82-76\": {\n    \"distance\": 2.0363442810347183,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"82-77\": {\n    \"distance\": 1.5158126103251557,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"41-46\": {\n    \"distance\": 0.6927055673263851,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39999, 37.795079],\n        [-122.400335, 37.795029],\n        [-122.401337, 37.794864],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"47-46\": {\n    \"distance\": 1.3638754487186506,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403446, 37.78892],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"45-46\": {\n    \"distance\": 0.7428488314795862,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.402282, 37.794314],\n        [-122.401404, 37.794427],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"48-46\": {\n    \"distance\": 1.244887697998635,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398487, 37.799976],\n        [-122.39918, 37.800768],\n        [-122.399253, 37.80084],\n        [-122.399337, 37.800794],\n        [-122.399427, 37.800744],\n        [-122.399475, 37.800725],\n        [-122.39954, 37.800707],\n        [-122.400249, 37.800617],\n        [-122.400061, 37.799678],\n        [-122.399891, 37.798833],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"42-46\": {\n    \"distance\": 0.7479278361308588,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.398738, 37.797035],\n        [-122.399192, 37.796975],\n        [-122.399348, 37.796954],\n        [-122.399511, 37.796931],\n        [-122.400079, 37.79686],\n        [-122.400693, 37.796782],\n        [-122.401295, 37.796706],\n        [-122.40186, 37.796634],\n        [-122.402412, 37.796565],\n        [-122.40292, 37.7965],\n        [-122.403501, 37.796427],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"49-46\": {\n    \"distance\": 1.9843446999935213,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390979, 37.790082],\n        [-122.391972, 37.79087],\n        [-122.392525, 37.79131],\n        [-122.393119, 37.791781],\n        [-122.393228, 37.791868],\n        [-122.394077, 37.792542],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.397611, 37.79352],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.400335, 37.795029],\n        [-122.401337, 37.794864],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"51-46\": {\n    \"distance\": 1.9109431415765266,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390896, 37.791517],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396834, 37.795467],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.400335, 37.795029],\n        [-122.401337, 37.794864],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"50-46\": {\n    \"distance\": 1.6781376708126152,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394076, 37.795463],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393177, 37.794466],\n        [-122.393198, 37.794411],\n        [-122.393258, 37.794377],\n        [-122.393362, 37.794385],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.394809, 37.795712],\n        [-122.394881, 37.795826],\n        [-122.394968, 37.795946],\n        [-122.39508, 37.796081],\n        [-122.395452, 37.796517],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396834, 37.795467],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.400335, 37.795029],\n        [-122.401337, 37.794864],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"55-46\": {\n    \"distance\": 1.6236253773382927,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394561, 37.789696],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.400335, 37.795029],\n        [-122.401337, 37.794864],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"56-46\": {\n    \"distance\": 1.2306772049974144,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397147, 37.792201],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.400335, 37.795029],\n        [-122.401337, 37.794864],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"53-46\": {\n    \"distance\": 1.8592205553915184,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"54-46\": {\n    \"distance\": 2.4663315291762786,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388026, 37.787152],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390979, 37.790082],\n        [-122.391972, 37.79087],\n        [-122.392525, 37.79131],\n        [-122.393119, 37.791781],\n        [-122.393228, 37.791868],\n        [-122.394077, 37.792542],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.397611, 37.79352],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.400335, 37.795029],\n        [-122.401337, 37.794864],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"58-46\": {\n    \"distance\": 3.1193492925194164,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"57-46\": {\n    \"distance\": 2.263155178994173,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405201, 37.781697],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"59-46\": {\n    \"distance\": 3.0716585787090978,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416859, 37.780507],\n        [-122.41597, 37.780627],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"62-46\": {\n    \"distance\": 1.7813997484346078,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785231],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"60-46\": {\n    \"distance\": 1.4137328777287368,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403561, 37.805122],\n        [-122.403542, 37.804989],\n        [-122.403525, 37.804897],\n        [-122.403376, 37.804122],\n        [-122.403358, 37.804032],\n        [-122.403345, 37.803964],\n        [-122.403189, 37.803176],\n        [-122.403174, 37.803104],\n        [-122.403156, 37.803014],\n        [-122.402989, 37.802174],\n        [-122.402891, 37.801696],\n        [-122.402804, 37.801267],\n        [-122.40261, 37.800315],\n        [-122.402419, 37.799377],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"61-46\": {\n    \"distance\": 2.5264776545331458,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"64-46\": {\n    \"distance\": 2.2382231540733413,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"63-46\": {\n    \"distance\": 1.7713395983769478,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.397927, 37.790062],\n        [-122.398107, 37.790206],\n        [-122.398148, 37.790238],\n        [-122.398576, 37.790581],\n        [-122.399042, 37.790954],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.401337, 37.794864],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"67-46\": {\n    \"distance\": 2.9854642095907833,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417403, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"66-46\": {\n    \"distance\": 3.8316656623612193,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.417233, 37.774269],\n        [-122.417125, 37.774325],\n        [-122.415916, 37.775271],\n        [-122.416447, 37.775699],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.417677, 37.776665],\n        [-122.417784, 37.776729],\n        [-122.417839, 37.77677],\n        [-122.417889, 37.776816],\n        [-122.417916, 37.776859],\n        [-122.418049, 37.777505],\n        [-122.417586, 37.777568],\n        [-122.417475, 37.777584],\n        [-122.416945, 37.777652],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"68-46\": {\n    \"distance\": 1.6980403668084423,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.399502, 37.786634],\n        [-122.399975, 37.787011],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"65-46\": {\n    \"distance\": 4.212940580766348,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.403807, 37.770119],\n        [-122.403857, 37.77005],\n        [-122.403758, 37.769991],\n        [-122.403733, 37.769886],\n        [-122.403774, 37.76982],\n        [-122.403881, 37.769773],\n        [-122.40396, 37.769777],\n        [-122.404031, 37.769808],\n        [-122.404078, 37.769861],\n        [-122.404085, 37.769951],\n        [-122.404048, 37.770007],\n        [-122.403939, 37.770055],\n        [-122.404014, 37.770133],\n        [-122.404749, 37.770735],\n        [-122.404957, 37.770906],\n        [-122.405357, 37.771232],\n        [-122.405451, 37.771303],\n        [-122.405569, 37.77135],\n        [-122.405964, 37.771631],\n        [-122.406473, 37.771951],\n        [-122.406797, 37.772255],\n        [-122.406939, 37.772376],\n        [-122.407044, 37.772488],\n        [-122.407267, 37.77272],\n        [-122.407773, 37.773152],\n        [-122.407848, 37.773298],\n        [-122.407866, 37.773373],\n        [-122.407872, 37.773448],\n        [-122.407859, 37.773513],\n        [-122.407832, 37.773582],\n        [-122.407792, 37.77365],\n        [-122.407736, 37.77371],\n        [-122.407502, 37.773872],\n        [-122.407407, 37.773944],\n        [-122.407311, 37.774021],\n        [-122.407231, 37.774093],\n        [-122.407156, 37.774174],\n        [-122.407086, 37.774261],\n        [-122.406787, 37.774665],\n        [-122.406654, 37.774836],\n        [-122.406518, 37.774999],\n        [-122.406378, 37.775151],\n        [-122.406219, 37.775314],\n        [-122.406057, 37.775469],\n        [-122.405907, 37.775601],\n        [-122.405758, 37.775723],\n        [-122.405602, 37.775839],\n        [-122.405467, 37.775927],\n        [-122.405315, 37.776008],\n        [-122.405095, 37.776113],\n        [-122.403258, 37.777202],\n        [-122.402994, 37.777365],\n        [-122.402737, 37.777532],\n        [-122.402476, 37.777712],\n        [-122.402207, 37.777903],\n        [-122.401954, 37.778094],\n        [-122.40129, 37.778716],\n        [-122.401106, 37.778873],\n        [-122.400991, 37.77897],\n        [-122.400526, 37.779359],\n        [-122.400369, 37.7795],\n        [-122.400219, 37.779645],\n        [-122.400086, 37.779781],\n        [-122.399974, 37.779903],\n        [-122.399869, 37.780029],\n        [-122.399786, 37.78014],\n        [-122.399726, 37.780249],\n        [-122.39968, 37.780359],\n        [-122.399649, 37.780466],\n        [-122.39963, 37.78056],\n        [-122.399619, 37.780658],\n        [-122.399635, 37.780791],\n        [-122.400158, 37.781211],\n        [-122.400376, 37.781387],\n        [-122.400621, 37.781581],\n        [-122.401175, 37.782025],\n        [-122.401703, 37.782447],\n        [-122.401932, 37.782633],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"69-46\": {\n    \"distance\": 3.1819457956305905,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395997, 37.776315],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"70-46\": {\n    \"distance\": 3.1550932756477494,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39578, 37.776485],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.395097, 37.777181],\n        [-122.395196, 37.777261],\n        [-122.39577, 37.777717],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"74-46\": {\n    \"distance\": 1.4703863482357136,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.397611, 37.79352],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.400335, 37.795029],\n        [-122.401337, 37.794864],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"72-46\": {\n    \"distance\": 2.4141473189392912,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412805, 37.780268],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"73-46\": {\n    \"distance\": 0.4582198089716706,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798528],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"71-46\": {\n    \"distance\": 1.1504192861979472,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408451, 37.788453],\n        [-122.408615, 37.789226],\n        [-122.407752, 37.789333],\n        [-122.406986, 37.789429],\n        [-122.407038, 37.789698],\n        [-122.40714, 37.790283],\n        [-122.407644, 37.792738],\n        [-122.40772, 37.793173],\n        [-122.407385, 37.793215],\n        [-122.407272, 37.793229],\n        [-122.407145, 37.793245],\n        [-122.406639, 37.793309],\n        [-122.40682, 37.794196],\n        [-122.407013, 37.795085],\n        [-122.406493, 37.795153],\n        [-122.406065, 37.795203],\n        [-122.405847, 37.795226],\n        [-122.405665, 37.795244],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"75-46\": {\n    \"distance\": 1.1537674312627717,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398945, 37.79122],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399271, 37.791137],\n        [-122.399451, 37.791282],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.401337, 37.794864],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"76-46\": {\n    \"distance\": 1.4538076613740842,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"77-46\": {\n    \"distance\": 1.2110353243968082,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.401994, 37.788895],\n        [-122.401992, 37.788988],\n        [-122.401994, 37.78903],\n        [-122.401997, 37.789103],\n        [-122.402013, 37.789184],\n        [-122.40219, 37.790039],\n        [-122.40238, 37.790969],\n        [-122.402571, 37.791899],\n        [-122.402671, 37.792385],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"82-46\": {\n    \"distance\": 0.732523383892554,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400876, 37.798602],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"41-41s\": {\n    \"distance\": 1.2934432875393558,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.398168, 37.796167],\n        [-122.398587, 37.796104],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.399994, 37.795079],\n        [-122.399994, 37.795079],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.398587, 37.796104],\n        [-122.398168, 37.796167],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088]\n      ]\n    }\n  },\n  \"41-41m\": {\n    \"distance\": 1.384719861936007,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401337, 37.794864],\n        [-122.400335, 37.795029],\n        [-122.399994, 37.795079],\n        [-122.399994, 37.795079],\n        [-122.400335, 37.795029],\n        [-122.401337, 37.794864],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"42-42m\": {\n    \"distance\": 0.8768646667498633,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.401674, 37.795719],\n        [-122.40186, 37.796634],\n        [-122.401295, 37.796706],\n        [-122.400693, 37.796782],\n        [-122.400079, 37.79686],\n        [-122.399511, 37.796931],\n        [-122.399348, 37.796954],\n        [-122.399192, 37.796975],\n        [-122.398738, 37.797035],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284],\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.398738, 37.797035],\n        [-122.399192, 37.796975],\n        [-122.399348, 37.796954],\n        [-122.399511, 37.796931],\n        [-122.400079, 37.79686],\n        [-122.400693, 37.796782],\n        [-122.401295, 37.796706],\n        [-122.40186, 37.796634],\n        [-122.401674, 37.795719]\n      ]\n    }\n  },\n  \"42-42s\": {\n    \"distance\": 1.3241459803245461,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402282, 37.794314],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401582, 37.795306],\n        [-122.401674, 37.795719],\n        [-122.40186, 37.796634],\n        [-122.401295, 37.796706],\n        [-122.400693, 37.796782],\n        [-122.400079, 37.79686],\n        [-122.399511, 37.796931],\n        [-122.399348, 37.796954],\n        [-122.399192, 37.796975],\n        [-122.398738, 37.797035],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284],\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.398738, 37.797035],\n        [-122.399192, 37.796975],\n        [-122.399348, 37.796954],\n        [-122.399511, 37.796931],\n        [-122.400079, 37.79686],\n        [-122.400693, 37.796782],\n        [-122.401295, 37.796706],\n        [-122.40186, 37.796634],\n        [-122.401674, 37.795719],\n        [-122.401582, 37.795306],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.402282, 37.794314]\n      ]\n    }\n  },\n  \"45-45s\": {\n    \"distance\": 2.2097612936177606,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401404, 37.794427],\n        [-122.402282, 37.794314],\n        [-122.402923, 37.794231],\n        [-122.402923, 37.794231],\n        [-122.402282, 37.794314],\n        [-122.401404, 37.794427],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891]\n      ]\n    }\n  },\n  \"45-45m\": {\n    \"distance\": 1.4856976629591725,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.403221, 37.795066],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401404, 37.794427],\n        [-122.402282, 37.794314],\n        [-122.402923, 37.794231],\n        [-122.402923, 37.794231],\n        [-122.402282, 37.794314],\n        [-122.401404, 37.794427],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.403221, 37.795066],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"46-46s\": {\n    \"distance\": 2.249603012429865,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400335, 37.795029],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.396834, 37.795467],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.398168, 37.796167],\n        [-122.398587, 37.796104],\n        [-122.400492, 37.795867],\n        [-122.40111, 37.795793],\n        [-122.401674, 37.795719],\n        [-122.40238, 37.795641],\n        [-122.402741, 37.795597],\n        [-122.403321, 37.795531],\n        [-122.404754, 37.795349],\n        [-122.404754, 37.795349],\n        [-122.403321, 37.795531],\n        [-122.402741, 37.795597],\n        [-122.40238, 37.795641],\n        [-122.401674, 37.795719],\n        [-122.40111, 37.795793],\n        [-122.400492, 37.795867],\n        [-122.398587, 37.796104],\n        [-122.398168, 37.796167],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396834, 37.795467],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.400335, 37.795029]\n      ]\n    }\n  },\n  \"46-46m\": {\n    \"distance\": 1.4946402979249327,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.407172, 37.798525],\n        [-122.40722, 37.79877],\n        [-122.40788, 37.798686],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40704, 37.798072],\n        [-122.406733, 37.797863],\n        [-122.406307, 37.797566],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.404507, 37.796369],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.404754, 37.795349],\n        [-122.404754, 37.795349],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.404507, 37.796369],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406307, 37.797566],\n        [-122.406733, 37.797863],\n        [-122.40704, 37.798072],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.40788, 37.798686],\n        [-122.40722, 37.79877],\n        [-122.407172, 37.798525]\n      ]\n    }\n  },\n  \"47-47l\": {\n    \"distance\": 4.052876334962268,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.39918, 37.800768],\n        [-122.398436, 37.799913],\n        [-122.398143, 37.799592],\n        [-122.397869, 37.799273],\n        [-122.397792, 37.799184],\n        [-122.397691, 37.799069],\n        [-122.397531, 37.798883],\n        [-122.397452, 37.798793],\n        [-122.397263, 37.79858],\n        [-122.396624, 37.797859],\n        [-122.39604, 37.797201],\n        [-122.395682, 37.796785],\n        [-122.395556, 37.796634],\n        [-122.395692, 37.796622],\n        [-122.39584, 37.796606],\n        [-122.396197, 37.79656],\n        [-122.39648, 37.796506],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.39697, 37.796221],\n        [-122.396834, 37.795467],\n        [-122.396727, 37.795],\n        [-122.396661, 37.794645],\n        [-122.39664, 37.794536],\n        [-122.396491, 37.793786],\n        [-122.396485, 37.793737],\n        [-122.39648, 37.793664],\n        [-122.396471, 37.793606],\n        [-122.396442, 37.793458],\n        [-122.396421, 37.793353],\n        [-122.396419, 37.79327],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403375, 37.787978],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.403449, 37.78892],\n        [-122.403449, 37.78892],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403375, 37.787978],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396419, 37.79327],\n        [-122.396421, 37.793353],\n        [-122.396442, 37.793458],\n        [-122.396471, 37.793606],\n        [-122.39648, 37.793664],\n        [-122.396485, 37.793737],\n        [-122.396491, 37.793786],\n        [-122.39664, 37.794536],\n        [-122.396661, 37.794645],\n        [-122.396727, 37.795],\n        [-122.396834, 37.795467],\n        [-122.39697, 37.796221],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.39648, 37.796506],\n        [-122.396197, 37.79656],\n        [-122.39584, 37.796606],\n        [-122.395692, 37.796622],\n        [-122.395556, 37.796634],\n        [-122.395682, 37.796785],\n        [-122.39604, 37.797201],\n        [-122.396624, 37.797859],\n        [-122.397263, 37.79858],\n        [-122.397452, 37.798793],\n        [-122.397531, 37.798883],\n        [-122.397691, 37.799069],\n        [-122.397792, 37.799184],\n        [-122.397869, 37.799273],\n        [-122.398143, 37.799592],\n        [-122.398436, 37.799913],\n        [-122.39918, 37.800768]\n      ]\n    }\n  },\n  \"47-47m\": {\n    \"distance\": 2.2741505842960055,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.403449, 37.78892],\n        [-122.403449, 37.78892],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375]\n      ]\n    }\n  },\n  \"47-47s\": {\n    \"distance\": 3.022114821883737,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.403449, 37.78892],\n        [-122.403449, 37.78892],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999]\n      ]\n    }\n  },\n  \"48-48s\": {\n    \"distance\": 0.8664997399199117,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.399891, 37.798833],\n        [-122.400061, 37.799678],\n        [-122.400249, 37.800617],\n        [-122.39954, 37.800707],\n        [-122.399475, 37.800725],\n        [-122.399427, 37.800744],\n        [-122.399337, 37.800794],\n        [-122.399253, 37.80084],\n        [-122.39918, 37.800768],\n        [-122.398487, 37.799976],\n        [-122.398487, 37.799976],\n        [-122.39918, 37.800768],\n        [-122.399253, 37.80084],\n        [-122.399337, 37.800794],\n        [-122.399427, 37.800744],\n        [-122.399475, 37.800725],\n        [-122.39954, 37.800707],\n        [-122.400249, 37.800617],\n        [-122.400061, 37.799678],\n        [-122.399891, 37.798833],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871]\n      ]\n    }\n  },\n  \"48-48m\": {\n    \"distance\": 2.7494332844792257,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.390976, 37.792533],\n        [-122.391053, 37.792627],\n        [-122.391192, 37.792766],\n        [-122.392024, 37.793466],\n        [-122.39218, 37.793603],\n        [-122.392341, 37.793754],\n        [-122.392443, 37.793844],\n        [-122.392777, 37.794156],\n        [-122.393072, 37.79443],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399144, 37.800912],\n        [-122.399253, 37.80084],\n        [-122.39918, 37.800768],\n        [-122.398487, 37.799976],\n        [-122.398487, 37.799976],\n        [-122.39918, 37.800768],\n        [-122.399253, 37.80084],\n        [-122.399144, 37.800912],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393072, 37.79443],\n        [-122.392777, 37.794156],\n        [-122.392443, 37.793844],\n        [-122.392341, 37.793754],\n        [-122.39218, 37.793603],\n        [-122.392024, 37.793466],\n        [-122.391192, 37.792766],\n        [-122.391053, 37.792627],\n        [-122.390976, 37.792533],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562]\n      ]\n    }\n  },\n  \"48-48l\": {\n    \"distance\": 3.3095999887860157,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.389934, 37.790912],\n        [-122.39002, 37.791001],\n        [-122.390133, 37.791127],\n        [-122.390237, 37.791261],\n        [-122.390326, 37.791396],\n        [-122.39041, 37.791547],\n        [-122.390482, 37.791701],\n        [-122.390594, 37.791942],\n        [-122.390661, 37.792078],\n        [-122.390735, 37.79221],\n        [-122.390811, 37.792323],\n        [-122.390901, 37.792437],\n        [-122.390976, 37.792533],\n        [-122.391053, 37.792627],\n        [-122.391192, 37.792766],\n        [-122.391994, 37.793441],\n        [-122.39218, 37.793603],\n        [-122.392341, 37.793754],\n        [-122.392443, 37.793844],\n        [-122.392777, 37.794156],\n        [-122.393072, 37.79443],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394582, 37.796015],\n        [-122.39501, 37.796491],\n        [-122.395175, 37.796671],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399144, 37.800912],\n        [-122.399253, 37.80084],\n        [-122.39918, 37.800768],\n        [-122.398487, 37.799976],\n        [-122.398487, 37.799976],\n        [-122.39918, 37.800768],\n        [-122.399253, 37.80084],\n        [-122.399144, 37.800912],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395175, 37.796671],\n        [-122.39501, 37.796491],\n        [-122.394582, 37.796015],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393072, 37.79443],\n        [-122.392777, 37.794156],\n        [-122.392443, 37.793844],\n        [-122.392341, 37.793754],\n        [-122.39218, 37.793603],\n        [-122.391994, 37.793441],\n        [-122.391192, 37.792766],\n        [-122.391053, 37.792627],\n        [-122.390976, 37.792533],\n        [-122.390901, 37.792437],\n        [-122.390811, 37.792323],\n        [-122.390735, 37.79221],\n        [-122.390661, 37.792078],\n        [-122.390594, 37.791942],\n        [-122.390482, 37.791701],\n        [-122.39041, 37.791547],\n        [-122.390326, 37.791396],\n        [-122.390237, 37.791261],\n        [-122.390133, 37.791127],\n        [-122.39002, 37.791001],\n        [-122.389934, 37.790912],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082]\n      ]\n    }\n  },\n  \"49-49s\": {\n    \"distance\": 1.3171151353211692,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391364, 37.789777],\n        [-122.390979, 37.790082],\n        [-122.390335, 37.789569],\n        [-122.390335, 37.789569],\n        [-122.390979, 37.790082],\n        [-122.391364, 37.789777],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198]\n      ]\n    }\n  },\n  \"49-49m\": {\n    \"distance\": 1.4456171218996787,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.394077, 37.792542],\n        [-122.393228, 37.791868],\n        [-122.393119, 37.791781],\n        [-122.392525, 37.79131],\n        [-122.392008, 37.790899],\n        [-122.390979, 37.790082],\n        [-122.390335, 37.789569],\n        [-122.390335, 37.789569],\n        [-122.390979, 37.790082],\n        [-122.392008, 37.790899],\n        [-122.392525, 37.79131],\n        [-122.393119, 37.791781],\n        [-122.393228, 37.791868],\n        [-122.394077, 37.792542],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"50-50s\": {\n    \"distance\": 1.6855387026888902,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397352, 37.792361],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395023, 37.791767],\n        [-122.394951, 37.791852],\n        [-122.394077, 37.792542],\n        [-122.393203, 37.793241],\n        [-122.392595, 37.793719],\n        [-122.392512, 37.793786],\n        [-122.392443, 37.793844],\n        [-122.392777, 37.794156],\n        [-122.393072, 37.79443],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394078, 37.795465],\n        [-122.394078, 37.795465],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393072, 37.79443],\n        [-122.392777, 37.794156],\n        [-122.392443, 37.793844],\n        [-122.392512, 37.793786],\n        [-122.392595, 37.793719],\n        [-122.393203, 37.793241],\n        [-122.394077, 37.792542],\n        [-122.394951, 37.791852],\n        [-122.395023, 37.791767],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397352, 37.792361]\n      ]\n    }\n  },\n  \"49-49l\": {\n    \"distance\": 2.0850106791520724,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.393896, 37.795268],\n        [-122.394582, 37.796015],\n        [-122.394751, 37.796031],\n        [-122.394811, 37.796018],\n        [-122.394849, 37.795943],\n        [-122.394822, 37.795875],\n        [-122.39474, 37.795712],\n        [-122.394649, 37.795438],\n        [-122.39458, 37.795318],\n        [-122.394515, 37.795222],\n        [-122.394445, 37.795131],\n        [-122.394352, 37.795023],\n        [-122.394255, 37.794926],\n        [-122.394156, 37.794836],\n        [-122.394051, 37.794749],\n        [-122.393943, 37.794667],\n        [-122.393829, 37.794587],\n        [-122.393678, 37.794494],\n        [-122.393399, 37.794333],\n        [-122.393263, 37.794255],\n        [-122.393135, 37.794173],\n        [-122.393, 37.794076],\n        [-122.392864, 37.793965],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390907, 37.791534],\n        [-122.390823, 37.791399],\n        [-122.390736, 37.791278],\n        [-122.390627, 37.791149],\n        [-122.390519, 37.791036],\n        [-122.390394, 37.790923],\n        [-122.390264, 37.79082],\n        [-122.390154, 37.790737],\n        [-122.390591, 37.790389],\n        [-122.390979, 37.790082],\n        [-122.390335, 37.789569],\n        [-122.390335, 37.789569],\n        [-122.390979, 37.790082],\n        [-122.390591, 37.790389],\n        [-122.390154, 37.790737],\n        [-122.390264, 37.79082],\n        [-122.390394, 37.790923],\n        [-122.390519, 37.791036],\n        [-122.390627, 37.791149],\n        [-122.390736, 37.791278],\n        [-122.390823, 37.791399],\n        [-122.390907, 37.791534],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.392864, 37.793965],\n        [-122.393, 37.794076],\n        [-122.393135, 37.794173],\n        [-122.393263, 37.794255],\n        [-122.393399, 37.794333],\n        [-122.393678, 37.794494],\n        [-122.393829, 37.794587],\n        [-122.393943, 37.794667],\n        [-122.394051, 37.794749],\n        [-122.394156, 37.794836],\n        [-122.394255, 37.794926],\n        [-122.394352, 37.795023],\n        [-122.394445, 37.795131],\n        [-122.394515, 37.795222],\n        [-122.39458, 37.795318],\n        [-122.394649, 37.795438],\n        [-122.39474, 37.795712],\n        [-122.394822, 37.795875],\n        [-122.394849, 37.795943],\n        [-122.394811, 37.796018],\n        [-122.394751, 37.796031],\n        [-122.394582, 37.796015],\n        [-122.393896, 37.795268]\n      ]\n    }\n  },\n  \"50-50m\": {\n    \"distance\": 2.67597260317942,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.392595, 37.793719],\n        [-122.392512, 37.793786],\n        [-122.392443, 37.793844],\n        [-122.392777, 37.794156],\n        [-122.393072, 37.79443],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394078, 37.795465],\n        [-122.394078, 37.795465],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393072, 37.79443],\n        [-122.392777, 37.794156],\n        [-122.392443, 37.793844],\n        [-122.392512, 37.793786],\n        [-122.392595, 37.793719],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283]\n      ]\n    }\n  },\n  \"50-50l\": {\n    \"distance\": 4.33856304085629,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.392595, 37.793719],\n        [-122.392512, 37.793786],\n        [-122.392443, 37.793844],\n        [-122.392777, 37.794156],\n        [-122.393072, 37.79443],\n        [-122.393181, 37.794532],\n        [-122.393351, 37.794689],\n        [-122.393473, 37.79481],\n        [-122.393586, 37.79493],\n        [-122.393704, 37.795059],\n        [-122.393896, 37.795268],\n        [-122.394078, 37.795465],\n        [-122.394078, 37.795465],\n        [-122.393896, 37.795268],\n        [-122.393704, 37.795059],\n        [-122.393586, 37.79493],\n        [-122.393473, 37.79481],\n        [-122.393351, 37.794689],\n        [-122.393181, 37.794532],\n        [-122.393072, 37.79443],\n        [-122.392777, 37.794156],\n        [-122.392443, 37.793844],\n        [-122.392512, 37.793786],\n        [-122.392595, 37.793719],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999]\n      ]\n    }\n  },\n  \"51-51s\": {\n    \"distance\": 1.0663305004441663,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.393437, 37.790589],\n        [-122.392944, 37.790979],\n        [-122.392525, 37.79131],\n        [-122.391651, 37.792],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390896, 37.791517],\n        [-122.390896, 37.791517],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.391651, 37.792],\n        [-122.392525, 37.79131],\n        [-122.392944, 37.790979],\n        [-122.393437, 37.790589],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581]\n      ]\n    }\n  },\n  \"51-51m\": {\n    \"distance\": 2.8780228023840753,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390896, 37.791517],\n        [-122.390896, 37.791517],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917]\n      ]\n    }\n  },\n  \"51-51l\": {\n    \"distance\": 4.42527138508509,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.392595, 37.793719],\n        [-122.392275, 37.793439],\n        [-122.39211, 37.793295],\n        [-122.391736, 37.792985],\n        [-122.391587, 37.792853],\n        [-122.391485, 37.792754],\n        [-122.391405, 37.792664],\n        [-122.391326, 37.792562],\n        [-122.39126, 37.792458],\n        [-122.3912, 37.792356],\n        [-122.391153, 37.792233],\n        [-122.39103, 37.791798],\n        [-122.390973, 37.791666],\n        [-122.390896, 37.791517],\n        [-122.390896, 37.791517],\n        [-122.390973, 37.791666],\n        [-122.39103, 37.791798],\n        [-122.391153, 37.792233],\n        [-122.3912, 37.792356],\n        [-122.39126, 37.792458],\n        [-122.391326, 37.792562],\n        [-122.391405, 37.792664],\n        [-122.391485, 37.792754],\n        [-122.391587, 37.792853],\n        [-122.391736, 37.792985],\n        [-122.39211, 37.793295],\n        [-122.392275, 37.793439],\n        [-122.392595, 37.793719],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999]\n      ]\n    }\n  },\n  \"53-53s\": {\n    \"distance\": 1.7034725177333097,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406731, 37.781691],\n        [-122.40727, 37.782119],\n        [-122.408721, 37.780977],\n        [-122.409258, 37.781409],\n        [-122.409703, 37.781763],\n        [-122.410138, 37.782111],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.408344, 37.7838],\n        [-122.408344, 37.7838],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.410138, 37.782111],\n        [-122.409703, 37.781763],\n        [-122.409258, 37.781409],\n        [-122.408721, 37.780977],\n        [-122.40727, 37.782119],\n        [-122.406731, 37.781691],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927]\n      ]\n    }\n  },\n  \"53-53m\": {\n    \"distance\": 1.8518898335023735,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838],\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684]\n      ]\n    }\n  },\n  \"53-53l\": {\n    \"distance\": 5.086187895826131,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.388027, 37.787198],\n        [-122.388036, 37.787094],\n        [-122.388115, 37.787098],\n        [-122.388283, 37.787107],\n        [-122.388393, 37.787105],\n        [-122.388513, 37.787075],\n        [-122.388604, 37.787027],\n        [-122.388753, 37.786915],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.396404, 37.793004],\n        [-122.39645, 37.793103],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838],\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.39645, 37.793103],\n        [-122.396404, 37.793004],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.388753, 37.786915],\n        [-122.388604, 37.787027],\n        [-122.388513, 37.787075],\n        [-122.388393, 37.787105],\n        [-122.388283, 37.787107],\n        [-122.388115, 37.787098],\n        [-122.388036, 37.787094],\n        [-122.388027, 37.787198]\n      ]\n    }\n  },\n  \"54-54s\": {\n    \"distance\": 2.052585680811126,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.393437, 37.790589],\n        [-122.392944, 37.790979],\n        [-122.392525, 37.79131],\n        [-122.391972, 37.79087],\n        [-122.390979, 37.790082],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388026, 37.787152],\n        [-122.388026, 37.787152],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390979, 37.790082],\n        [-122.391972, 37.79087],\n        [-122.392525, 37.79131],\n        [-122.392944, 37.790979],\n        [-122.393437, 37.790589],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581]\n      ]\n    }\n  },\n  \"55-55s\": {\n    \"distance\": 0.8365327024453474,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397352, 37.792361],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394561, 37.789696],\n        [-122.394561, 37.789696],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397352, 37.792361]\n      ]\n    }\n  },\n  \"54-54m\": {\n    \"distance\": 2.503067271744856,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.393758, 37.788167],\n        [-122.394094, 37.788442],\n        [-122.394207, 37.788531],\n        [-122.394467, 37.788691],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.393437, 37.790589],\n        [-122.392944, 37.790979],\n        [-122.392525, 37.79131],\n        [-122.391972, 37.79087],\n        [-122.390979, 37.790082],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388026, 37.787152],\n        [-122.388026, 37.787152],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390979, 37.790082],\n        [-122.391972, 37.79087],\n        [-122.392525, 37.79131],\n        [-122.392944, 37.790979],\n        [-122.393437, 37.790589],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.394467, 37.788691],\n        [-122.394207, 37.788531],\n        [-122.394094, 37.788442],\n        [-122.393758, 37.788167]\n      ]\n    }\n  },\n  \"55-55m\": {\n    \"distance\": 1.7963288045636394,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.390971, 37.787643],\n        [-122.391407, 37.787297],\n        [-122.39207, 37.786773],\n        [-122.392994, 37.787515],\n        [-122.393616, 37.788003],\n        [-122.393758, 37.788167],\n        [-122.394094, 37.788442],\n        [-122.394207, 37.788531],\n        [-122.394467, 37.788691],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394561, 37.789696],\n        [-122.394561, 37.789696],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.394467, 37.788691],\n        [-122.394207, 37.788531],\n        [-122.394094, 37.788442],\n        [-122.393758, 37.788167],\n        [-122.393616, 37.788003],\n        [-122.392994, 37.787515],\n        [-122.39207, 37.786773],\n        [-122.391407, 37.787297],\n        [-122.390971, 37.787643],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"55-55l\": {\n    \"distance\": 3.49858475870002,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404941, 37.781493],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.406041, 37.783085],\n        [-122.405437, 37.783556],\n        [-122.404868, 37.783999],\n        [-122.404256, 37.784489],\n        [-122.404091, 37.784559],\n        [-122.403448, 37.785072],\n        [-122.403196, 37.785269],\n        [-122.402704, 37.785659],\n        [-122.402094, 37.786142],\n        [-122.402041, 37.786261],\n        [-122.401272, 37.78686],\n        [-122.400508, 37.787455],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.396688, 37.790461],\n        [-122.396238, 37.790817],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394561, 37.789696],\n        [-122.394561, 37.789696],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396238, 37.790817],\n        [-122.396688, 37.790461],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.400508, 37.787455],\n        [-122.401272, 37.78686],\n        [-122.402041, 37.786261],\n        [-122.402094, 37.786142],\n        [-122.402704, 37.785659],\n        [-122.403196, 37.785269],\n        [-122.403448, 37.785072],\n        [-122.404091, 37.784559],\n        [-122.404256, 37.784489],\n        [-122.404868, 37.783999],\n        [-122.405437, 37.783556],\n        [-122.406041, 37.783085],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.404941, 37.781493]\n      ]\n    }\n  },\n  \"56-56s\": {\n    \"distance\": 2.2361017476760856,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396719, 37.785543],\n        [-122.395932, 37.786164],\n        [-122.395817, 37.786255],\n        [-122.395623, 37.786408],\n        [-122.395559, 37.786459],\n        [-122.395274, 37.786684],\n        [-122.394485, 37.787307],\n        [-122.394133, 37.787589],\n        [-122.393995, 37.787691],\n        [-122.393616, 37.788003],\n        [-122.393758, 37.788167],\n        [-122.394094, 37.788442],\n        [-122.394207, 37.788531],\n        [-122.394467, 37.788691],\n        [-122.395147, 37.789231],\n        [-122.395361, 37.789402],\n        [-122.395702, 37.789671],\n        [-122.396038, 37.789941],\n        [-122.39617, 37.790047],\n        [-122.396297, 37.790148],\n        [-122.396688, 37.790461],\n        [-122.397159, 37.790837],\n        [-122.397244, 37.790905],\n        [-122.397548, 37.791147],\n        [-122.398234, 37.791694],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.397141, 37.792197],\n        [-122.397141, 37.792197],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.398234, 37.791694],\n        [-122.397548, 37.791147],\n        [-122.397244, 37.790905],\n        [-122.397159, 37.790837],\n        [-122.396688, 37.790461],\n        [-122.396297, 37.790148],\n        [-122.39617, 37.790047],\n        [-122.396038, 37.789941],\n        [-122.395702, 37.789671],\n        [-122.395361, 37.789402],\n        [-122.395147, 37.789231],\n        [-122.394467, 37.788691],\n        [-122.394207, 37.788531],\n        [-122.394094, 37.788442],\n        [-122.393758, 37.788167],\n        [-122.393616, 37.788003],\n        [-122.393995, 37.787691],\n        [-122.394133, 37.787589],\n        [-122.394485, 37.787307],\n        [-122.395274, 37.786684],\n        [-122.395559, 37.786459],\n        [-122.395623, 37.786408],\n        [-122.395817, 37.786255],\n        [-122.395932, 37.786164],\n        [-122.396719, 37.785543]\n      ]\n    }\n  },\n  \"56-56m\": {\n    \"distance\": 1.5625478231050747,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402923, 37.794231],\n        [-122.403047, 37.794216],\n        [-122.402953, 37.793774],\n        [-122.402767, 37.792851],\n        [-122.401958, 37.792954],\n        [-122.401128, 37.793073],\n        [-122.399959, 37.793209],\n        [-122.398903, 37.79335],\n        [-122.398783, 37.793366],\n        [-122.398706, 37.793376],\n        [-122.397611, 37.79352],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.397141, 37.792197],\n        [-122.397141, 37.792197],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.397611, 37.79352],\n        [-122.398706, 37.793376],\n        [-122.398783, 37.793366],\n        [-122.398903, 37.79335],\n        [-122.399959, 37.793209],\n        [-122.401128, 37.793073],\n        [-122.401958, 37.792954],\n        [-122.402767, 37.792851],\n        [-122.402953, 37.793774],\n        [-122.403047, 37.794216],\n        [-122.402923, 37.794231]\n      ]\n    }\n  },\n  \"56-56l\": {\n    \"distance\": 3.37657693603288,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397352, 37.792361],\n        [-122.397141, 37.792197],\n        [-122.397141, 37.792197],\n        [-122.397352, 37.792361],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927]\n      ]\n    }\n  },\n  \"57-57m\": {\n    \"distance\": 1.0838333161028633,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40083, 37.784731],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405198, 37.781695],\n        [-122.405198, 37.781695],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.40083, 37.784731]\n      ]\n    }\n  },\n  \"57-57s\": {\n    \"distance\": 3.0114935196001973,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405198, 37.781695],\n        [-122.405198, 37.781695],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444]\n      ]\n    }\n  },\n  \"58-58s\": {\n    \"distance\": 1.592915866490774,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.4188, 37.781236],\n        [-122.417147, 37.781446],\n        [-122.417337, 37.782379],\n        [-122.41899, 37.782169],\n        [-122.418896, 37.781705],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418567, 37.780129],\n        [-122.418419, 37.779388],\n        [-122.418274, 37.778643],\n        [-122.418274, 37.778643],\n        [-122.418419, 37.779388],\n        [-122.418567, 37.780129],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418896, 37.781705],\n        [-122.41899, 37.782169],\n        [-122.417337, 37.782379],\n        [-122.417147, 37.781446],\n        [-122.4188, 37.781236]\n      ]\n    }\n  },\n  \"58-58m\": {\n    \"distance\": 2.5202621343815785,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444],\n        [-122.418274, 37.778643],\n        [-122.418274, 37.778643],\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"59-59s\": {\n    \"distance\": 2.2944680043603882,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.416539, 37.777316],\n        [-122.417385, 37.776653],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419246, 37.775362],\n        [-122.419434, 37.776385],\n        [-122.419618, 37.777309],\n        [-122.419712, 37.77777],\n        [-122.41978, 37.778168],\n        [-122.419793, 37.778243],\n        [-122.419826, 37.778409],\n        [-122.420127, 37.779932],\n        [-122.42016, 37.780081],\n        [-122.420061, 37.780093],\n        [-122.419823, 37.780122],\n        [-122.419002, 37.780221],\n        [-122.418739, 37.780254],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262],\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418739, 37.780254],\n        [-122.419002, 37.780221],\n        [-122.419823, 37.780122],\n        [-122.420061, 37.780093],\n        [-122.42016, 37.780081],\n        [-122.420127, 37.779932],\n        [-122.419826, 37.778409],\n        [-122.419793, 37.778243],\n        [-122.41978, 37.778168],\n        [-122.419712, 37.77777],\n        [-122.419618, 37.777309],\n        [-122.419434, 37.776385],\n        [-122.419246, 37.775362],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417385, 37.776653],\n        [-122.416539, 37.777316]\n      ]\n    }\n  },\n  \"59-59m\": {\n    \"distance\": 2.033316501471276,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412807, 37.780266],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416401, 37.777723],\n        [-122.416579, 37.778655],\n        [-122.416748, 37.779416],\n        [-122.416783, 37.779585],\n        [-122.416816, 37.779741],\n        [-122.416944, 37.780404],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262],\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416944, 37.780404],\n        [-122.416816, 37.779741],\n        [-122.416783, 37.779585],\n        [-122.416748, 37.779416],\n        [-122.416579, 37.778655],\n        [-122.416401, 37.777723],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412807, 37.780266]\n      ]\n    }\n  },\n  \"60-60s\": {\n    \"distance\": 1.8276285695080743,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.402419, 37.799377],\n        [-122.40261, 37.800315],\n        [-122.402804, 37.801267],\n        [-122.402891, 37.801696],\n        [-122.402989, 37.802174],\n        [-122.403156, 37.803014],\n        [-122.403174, 37.803104],\n        [-122.403189, 37.803176],\n        [-122.403345, 37.803964],\n        [-122.403358, 37.804032],\n        [-122.403376, 37.804122],\n        [-122.403525, 37.804897],\n        [-122.403542, 37.804989],\n        [-122.403561, 37.805122],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828],\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403561, 37.805122],\n        [-122.403542, 37.804989],\n        [-122.403525, 37.804897],\n        [-122.403376, 37.804122],\n        [-122.403358, 37.804032],\n        [-122.403345, 37.803964],\n        [-122.403189, 37.803176],\n        [-122.403174, 37.803104],\n        [-122.403156, 37.803014],\n        [-122.402989, 37.802174],\n        [-122.402891, 37.801696],\n        [-122.402804, 37.801267],\n        [-122.40261, 37.800315],\n        [-122.402419, 37.799377],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591]\n      ]\n    }\n  },\n  \"59-59l\": {\n    \"distance\": 7.911380807534143,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403334, 37.804957],\n        [-122.402393, 37.804276],\n        [-122.40228, 37.804196],\n        [-122.402174, 37.804119],\n        [-122.402118, 37.804067],\n        [-122.402032, 37.803972],\n        [-122.402106, 37.803925],\n        [-122.402108, 37.803833],\n        [-122.402029, 37.803445],\n        [-122.401993, 37.803244],\n        [-122.401805, 37.802366],\n        [-122.401794, 37.802311],\n        [-122.401628, 37.801398],\n        [-122.401537, 37.800923],\n        [-122.401446, 37.800459],\n        [-122.401256, 37.799525],\n        [-122.401074, 37.79868],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399608, 37.791203],\n        [-122.399557, 37.790909],\n        [-122.399541, 37.790817],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.41597, 37.780627],\n        [-122.416859, 37.780507],\n        [-122.416961, 37.780493],\n        [-122.417121, 37.780474],\n        [-122.418058, 37.780341],\n        [-122.418482, 37.780286],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418587, 37.781262],\n        [-122.418587, 37.781262],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418482, 37.780286],\n        [-122.418058, 37.780341],\n        [-122.417121, 37.780474],\n        [-122.416961, 37.780493],\n        [-122.416859, 37.780507],\n        [-122.41597, 37.780627],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399541, 37.790817],\n        [-122.399557, 37.790909],\n        [-122.399608, 37.791203],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.401074, 37.79868],\n        [-122.401256, 37.799525],\n        [-122.401446, 37.800459],\n        [-122.401537, 37.800923],\n        [-122.401628, 37.801398],\n        [-122.401794, 37.802311],\n        [-122.401805, 37.802366],\n        [-122.401993, 37.803244],\n        [-122.402029, 37.803445],\n        [-122.402108, 37.803833],\n        [-122.402106, 37.803925],\n        [-122.402032, 37.803972],\n        [-122.402118, 37.804067],\n        [-122.402174, 37.804119],\n        [-122.40228, 37.804196],\n        [-122.402393, 37.804276],\n        [-122.403334, 37.804957]\n      ]\n    }\n  },\n  \"60-60m\": {\n    \"distance\": 5.8685783437640895,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398258, 37.786773],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.4012, 37.785587],\n        [-122.401495, 37.785825],\n        [-122.402041, 37.786261],\n        [-122.402475, 37.786602],\n        [-122.402572, 37.786679],\n        [-122.403019, 37.787031],\n        [-122.403358, 37.7873],\n        [-122.403394, 37.787342],\n        [-122.403418, 37.78739],\n        [-122.403433, 37.787441],\n        [-122.403438, 37.787491],\n        [-122.403436, 37.787675],\n        [-122.403443, 37.787728],\n        [-122.403464, 37.787825],\n        [-122.403491, 37.787963],\n        [-122.403586, 37.788434],\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.404877, 37.794859],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405331, 37.797092],\n        [-122.405411, 37.797563],\n        [-122.405481, 37.797903],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.402419, 37.799377],\n        [-122.40261, 37.800315],\n        [-122.402804, 37.801267],\n        [-122.402891, 37.801696],\n        [-122.402989, 37.802174],\n        [-122.403156, 37.803014],\n        [-122.403174, 37.803104],\n        [-122.403189, 37.803176],\n        [-122.403345, 37.803964],\n        [-122.403358, 37.804032],\n        [-122.403376, 37.804122],\n        [-122.403525, 37.804897],\n        [-122.403542, 37.804989],\n        [-122.403561, 37.805122],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828],\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403561, 37.805122],\n        [-122.403542, 37.804989],\n        [-122.403525, 37.804897],\n        [-122.403376, 37.804122],\n        [-122.403358, 37.804032],\n        [-122.403345, 37.803964],\n        [-122.403189, 37.803176],\n        [-122.403174, 37.803104],\n        [-122.403156, 37.803014],\n        [-122.402989, 37.802174],\n        [-122.402891, 37.801696],\n        [-122.402804, 37.801267],\n        [-122.40261, 37.800315],\n        [-122.402419, 37.799377],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.405481, 37.797903],\n        [-122.405411, 37.797563],\n        [-122.405331, 37.797092],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404877, 37.794859],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891],\n        [-122.403586, 37.788434],\n        [-122.403491, 37.787963],\n        [-122.403464, 37.787825],\n        [-122.403443, 37.787728],\n        [-122.403436, 37.787675],\n        [-122.403438, 37.787491],\n        [-122.403433, 37.787441],\n        [-122.403418, 37.78739],\n        [-122.403394, 37.787342],\n        [-122.403358, 37.7873],\n        [-122.403019, 37.787031],\n        [-122.402572, 37.786679],\n        [-122.402475, 37.786602],\n        [-122.402041, 37.786261],\n        [-122.401495, 37.785825],\n        [-122.4012, 37.785587],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.398258, 37.786773]\n      ]\n    }\n  },\n  \"60-60l\": {\n    \"distance\": 7.396088024688173,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398793, 37.7872],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.400345, 37.78844],\n        [-122.400812, 37.788814],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396596, 37.796376],\n        [-122.396383, 37.796428],\n        [-122.396158, 37.796471],\n        [-122.39584, 37.796525],\n        [-122.395641, 37.796558],\n        [-122.395556, 37.796634],\n        [-122.395289, 37.796796],\n        [-122.395418, 37.796939],\n        [-122.396458, 37.798098],\n        [-122.396924, 37.798616],\n        [-122.39745, 37.799203],\n        [-122.39753, 37.799291],\n        [-122.397632, 37.799406],\n        [-122.398178, 37.80002],\n        [-122.398962, 37.800892],\n        [-122.399049, 37.800992],\n        [-122.399165, 37.801123],\n        [-122.399792, 37.801819],\n        [-122.400448, 37.802547],\n        [-122.400903, 37.803058],\n        [-122.401236, 37.80342],\n        [-122.401794, 37.804076],\n        [-122.401904, 37.804165],\n        [-122.40207, 37.804321],\n        [-122.402155, 37.804399],\n        [-122.402206, 37.804441],\n        [-122.402723, 37.804821],\n        [-122.403174, 37.80514],\n        [-122.403268, 37.805142],\n        [-122.403356, 37.805116],\n        [-122.40345, 37.805041],\n        [-122.403334, 37.804957],\n        [-122.403159, 37.804828],\n        [-122.403159, 37.804828],\n        [-122.403334, 37.804957],\n        [-122.40345, 37.805041],\n        [-122.403356, 37.805116],\n        [-122.403268, 37.805142],\n        [-122.403174, 37.80514],\n        [-122.402723, 37.804821],\n        [-122.402206, 37.804441],\n        [-122.402155, 37.804399],\n        [-122.40207, 37.804321],\n        [-122.401904, 37.804165],\n        [-122.401794, 37.804076],\n        [-122.401236, 37.80342],\n        [-122.400903, 37.803058],\n        [-122.400448, 37.802547],\n        [-122.399792, 37.801819],\n        [-122.399165, 37.801123],\n        [-122.399049, 37.800992],\n        [-122.398962, 37.800892],\n        [-122.398178, 37.80002],\n        [-122.397632, 37.799406],\n        [-122.39753, 37.799291],\n        [-122.39745, 37.799203],\n        [-122.396924, 37.798616],\n        [-122.396458, 37.798098],\n        [-122.395418, 37.796939],\n        [-122.395289, 37.796796],\n        [-122.395556, 37.796634],\n        [-122.395641, 37.796558],\n        [-122.39584, 37.796525],\n        [-122.396158, 37.796471],\n        [-122.396383, 37.796428],\n        [-122.396596, 37.796376],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.400812, 37.788814],\n        [-122.400345, 37.78844],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398793, 37.7872],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607]\n      ]\n    }\n  },\n  \"61-61s\": {\n    \"distance\": 1.3879365579606615,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468],\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905]\n      ]\n    }\n  },\n  \"62-62m\": {\n    \"distance\": 1.4904722238391936,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396329, 37.785233],\n        [-122.396329, 37.785233],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468]\n      ]\n    }\n  },\n  \"61-61m\": {\n    \"distance\": 1.4904722238391939,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396329, 37.785233],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468],\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396329, 37.785233]\n      ]\n    }\n  },\n  \"62-62s\": {\n    \"distance\": 0.8629409177621594,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396329, 37.785233],\n        [-122.396329, 37.785233],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484]\n      ]\n    }\n  },\n  \"62-62l\": {\n    \"distance\": 0.5617442501385403,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397937, 37.787027],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.396329, 37.785233],\n        [-122.396329, 37.785233],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.397937, 37.787027]\n      ]\n    }\n  },\n  \"41-41l\": {\n    \"distance\": 1.2934432875393558,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.397026, 37.796524],\n        [-122.396979, 37.796344],\n        [-122.398168, 37.796167],\n        [-122.398587, 37.796104],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.399994, 37.795079],\n        [-122.399994, 37.795079],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.398587, 37.796104],\n        [-122.398168, 37.796167],\n        [-122.396979, 37.796344],\n        [-122.397026, 37.796524],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088]\n      ]\n    }\n  },\n  \"63-63s\": {\n    \"distance\": 3.1761795488069295,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932],\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484]\n      ]\n    }\n  },\n  \"42-42l\": {\n    \"distance\": 1.3241459803245461,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402282, 37.794314],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401582, 37.795306],\n        [-122.401674, 37.795719],\n        [-122.40186, 37.796634],\n        [-122.401295, 37.796706],\n        [-122.400693, 37.796782],\n        [-122.400079, 37.79686],\n        [-122.399511, 37.796931],\n        [-122.399348, 37.796954],\n        [-122.399192, 37.796975],\n        [-122.398738, 37.797035],\n        [-122.398341, 37.797088],\n        [-122.398382, 37.797284],\n        [-122.398382, 37.797284],\n        [-122.398341, 37.797088],\n        [-122.398738, 37.797035],\n        [-122.399192, 37.796975],\n        [-122.399348, 37.796954],\n        [-122.399511, 37.796931],\n        [-122.400079, 37.79686],\n        [-122.400693, 37.796782],\n        [-122.401295, 37.796706],\n        [-122.40186, 37.796634],\n        [-122.401674, 37.795719],\n        [-122.401582, 37.795306],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.402282, 37.794314]\n      ]\n    }\n  },\n  \"63-63m\": {\n    \"distance\": 1.6532730272558671,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397141, 37.792197],\n        [-122.396783, 37.791925],\n        [-122.396468, 37.791674],\n        [-122.395815, 37.791151],\n        [-122.395297, 37.790737],\n        [-122.395157, 37.790627],\n        [-122.394827, 37.790361],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581],\n        [-122.395147, 37.789231],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932],\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.395147, 37.789231],\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.394827, 37.790361],\n        [-122.395157, 37.790627],\n        [-122.395297, 37.790737],\n        [-122.395815, 37.791151],\n        [-122.396468, 37.791674],\n        [-122.396783, 37.791925],\n        [-122.397141, 37.792197]\n      ]\n    }\n  },\n  \"45-45l\": {\n    \"distance\": 2.2097612936177606,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.403678, 37.788891],\n        [-122.40377, 37.789344],\n        [-122.403866, 37.789826],\n        [-122.403958, 37.790283],\n        [-122.404053, 37.790757],\n        [-122.40424, 37.791688],\n        [-122.404346, 37.792217],\n        [-122.404438, 37.792651],\n        [-122.404614, 37.79356],\n        [-122.404709, 37.794021],\n        [-122.404792, 37.79446],\n        [-122.403139, 37.794666],\n        [-122.402363, 37.794756],\n        [-122.402205, 37.794775],\n        [-122.401491, 37.794864],\n        [-122.401404, 37.794427],\n        [-122.402282, 37.794314],\n        [-122.402923, 37.794231],\n        [-122.402923, 37.794231],\n        [-122.402282, 37.794314],\n        [-122.401404, 37.794427],\n        [-122.401491, 37.794864],\n        [-122.402205, 37.794775],\n        [-122.402363, 37.794756],\n        [-122.403139, 37.794666],\n        [-122.404792, 37.79446],\n        [-122.404709, 37.794021],\n        [-122.404614, 37.79356],\n        [-122.404438, 37.792651],\n        [-122.404346, 37.792217],\n        [-122.40424, 37.791688],\n        [-122.404053, 37.790757],\n        [-122.403958, 37.790283],\n        [-122.403866, 37.789826],\n        [-122.40377, 37.789344],\n        [-122.403678, 37.788891]\n      ]\n    }\n  },\n  \"64-64s\": {\n    \"distance\": 3.012243377740452,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400649, 37.784873],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.401932, 37.782633],\n        [-122.401703, 37.782447],\n        [-122.401175, 37.782025],\n        [-122.401004, 37.782162],\n        [-122.4007, 37.7824],\n        [-122.400382, 37.782651],\n        [-122.399117, 37.78365],\n        [-122.398943, 37.783787],\n        [-122.398748, 37.783941],\n        [-122.397841, 37.784657],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232],\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.397841, 37.784657],\n        [-122.398748, 37.783941],\n        [-122.398943, 37.783787],\n        [-122.399117, 37.78365],\n        [-122.400382, 37.782651],\n        [-122.4007, 37.7824],\n        [-122.401004, 37.782162],\n        [-122.401175, 37.782025],\n        [-122.401703, 37.782447],\n        [-122.401932, 37.782633],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.400649, 37.784873]\n      ]\n    }\n  },\n  \"64-64m\": {\n    \"distance\": 1.4462289978016192,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398054, 37.786932],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392661, 37.78232],\n        [-122.392661, 37.78232],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398054, 37.786932]\n      ]\n    }\n  },\n  \"64-64l\": {\n    \"distance\": 3.318166709217895,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401787, 37.771905],\n        [-122.402204, 37.772245],\n        [-122.402509, 37.772489],\n        [-122.40322, 37.773055],\n        [-122.402681, 37.773481],\n        [-122.402275, 37.773802],\n        [-122.402109, 37.773934],\n        [-122.40206, 37.773973],\n        [-122.401546, 37.774377],\n        [-122.400995, 37.774814],\n        [-122.400875, 37.774909],\n        [-122.400197, 37.775445],\n        [-122.398769, 37.776574],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.393198, 37.780977],\n        [-122.392623, 37.781431],\n        [-122.392186, 37.781777],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392661, 37.78232],\n        [-122.392661, 37.78232],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.392186, 37.781777],\n        [-122.392623, 37.781431],\n        [-122.393198, 37.780977],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.398769, 37.776574],\n        [-122.400197, 37.775445],\n        [-122.400875, 37.774909],\n        [-122.400995, 37.774814],\n        [-122.401546, 37.774377],\n        [-122.40206, 37.773973],\n        [-122.402109, 37.773934],\n        [-122.402275, 37.773802],\n        [-122.402681, 37.773481],\n        [-122.40322, 37.773055],\n        [-122.402509, 37.772489],\n        [-122.402204, 37.772245],\n        [-122.401787, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759]\n      ]\n    }\n  },\n  \"65-65s\": {\n    \"distance\": 1.3801793781228513,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024],\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421]\n      ]\n    }\n  },\n  \"65-65m\": {\n    \"distance\": 1.7167308040384268,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395777, 37.776487],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024],\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395777, 37.776487]\n      ]\n    }\n  },\n  \"65-65l\": {\n    \"distance\": 4.019703537597152,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419096, 37.774706],\n        [-122.419134, 37.774833],\n        [-122.419178, 37.775041],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.416447, 37.775699],\n        [-122.415916, 37.775271],\n        [-122.415384, 37.774852],\n        [-122.414921, 37.774484],\n        [-122.414368, 37.774043],\n        [-122.413763, 37.77356],\n        [-122.412834, 37.77282],\n        [-122.411897, 37.772073],\n        [-122.411287, 37.771586],\n        [-122.410904, 37.771281],\n        [-122.409766, 37.770337],\n        [-122.408436, 37.769318],\n        [-122.408334, 37.76921],\n        [-122.407888, 37.769241],\n        [-122.407461, 37.769271],\n        [-122.406882, 37.769299],\n        [-122.406725, 37.769307],\n        [-122.406544, 37.769334],\n        [-122.406398, 37.769371],\n        [-122.406226, 37.769452],\n        [-122.406127, 37.769521],\n        [-122.406034, 37.769591],\n        [-122.405959, 37.769629],\n        [-122.405881, 37.769658],\n        [-122.405801, 37.769671],\n        [-122.40572, 37.769678],\n        [-122.404995, 37.769721],\n        [-122.404433, 37.769754],\n        [-122.404306, 37.769746],\n        [-122.404138, 37.769753],\n        [-122.404047, 37.769763],\n        [-122.40396, 37.769777],\n        [-122.403881, 37.769773],\n        [-122.403774, 37.76982],\n        [-122.403733, 37.769886],\n        [-122.403758, 37.769991],\n        [-122.403857, 37.77005],\n        [-122.403807, 37.770119],\n        [-122.402675, 37.771024],\n        [-122.402675, 37.771024],\n        [-122.403807, 37.770119],\n        [-122.403857, 37.77005],\n        [-122.403758, 37.769991],\n        [-122.403733, 37.769886],\n        [-122.403774, 37.76982],\n        [-122.403881, 37.769773],\n        [-122.40396, 37.769777],\n        [-122.404047, 37.769763],\n        [-122.404138, 37.769753],\n        [-122.404306, 37.769746],\n        [-122.404433, 37.769754],\n        [-122.404995, 37.769721],\n        [-122.40572, 37.769678],\n        [-122.405801, 37.769671],\n        [-122.405881, 37.769658],\n        [-122.405959, 37.769629],\n        [-122.406034, 37.769591],\n        [-122.406127, 37.769521],\n        [-122.406226, 37.769452],\n        [-122.406398, 37.769371],\n        [-122.406544, 37.769334],\n        [-122.406725, 37.769307],\n        [-122.406882, 37.769299],\n        [-122.407461, 37.769271],\n        [-122.407888, 37.769241],\n        [-122.408334, 37.76921],\n        [-122.408436, 37.769318],\n        [-122.409766, 37.770337],\n        [-122.410904, 37.771281],\n        [-122.411287, 37.771586],\n        [-122.411897, 37.772073],\n        [-122.412834, 37.77282],\n        [-122.413763, 37.77356],\n        [-122.414368, 37.774043],\n        [-122.414921, 37.774484],\n        [-122.415384, 37.774852],\n        [-122.415916, 37.775271],\n        [-122.416447, 37.775699],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419178, 37.775041],\n        [-122.419134, 37.774833],\n        [-122.419096, 37.774706]\n      ]\n    }\n  },\n  \"66-66s\": {\n    \"distance\": 2.046592301305151,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.416539, 37.777316],\n        [-122.417385, 37.776653],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419328, 37.775112],\n        [-122.419868, 37.774685],\n        [-122.420333, 37.774413],\n        [-122.420457, 37.774336],\n        [-122.420573, 37.774251],\n        [-122.420663, 37.774181],\n        [-122.420727, 37.77413],\n        [-122.420761, 37.774296],\n        [-122.420457, 37.774336],\n        [-122.420238, 37.774338],\n        [-122.419675, 37.773892],\n        [-122.419165, 37.773478],\n        [-122.418855, 37.77322],\n        [-122.418702, 37.773081],\n        [-122.418631, 37.772841],\n        [-122.418532, 37.772961],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783],\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.418532, 37.772961],\n        [-122.418631, 37.772841],\n        [-122.418702, 37.773081],\n        [-122.418855, 37.77322],\n        [-122.419165, 37.773478],\n        [-122.419675, 37.773892],\n        [-122.420238, 37.774338],\n        [-122.420457, 37.774336],\n        [-122.420761, 37.774296],\n        [-122.420727, 37.77413],\n        [-122.420663, 37.774181],\n        [-122.420573, 37.774251],\n        [-122.420457, 37.774336],\n        [-122.420333, 37.774413],\n        [-122.419868, 37.774685],\n        [-122.419328, 37.775112],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417385, 37.776653],\n        [-122.416539, 37.777316]\n      ]\n    }\n  },\n  \"66-66m\": {\n    \"distance\": 1.832527989118305,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.417401, 37.776636],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419328, 37.775112],\n        [-122.419868, 37.774685],\n        [-122.420333, 37.774413],\n        [-122.420457, 37.774336],\n        [-122.420573, 37.774251],\n        [-122.420663, 37.774181],\n        [-122.420727, 37.77413],\n        [-122.420761, 37.774296],\n        [-122.420457, 37.774336],\n        [-122.420238, 37.774338],\n        [-122.419675, 37.773892],\n        [-122.419165, 37.773478],\n        [-122.418855, 37.77322],\n        [-122.418702, 37.773081],\n        [-122.418631, 37.772841],\n        [-122.418532, 37.772961],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783],\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.418532, 37.772961],\n        [-122.418631, 37.772841],\n        [-122.418702, 37.773081],\n        [-122.418855, 37.77322],\n        [-122.419165, 37.773478],\n        [-122.419675, 37.773892],\n        [-122.420238, 37.774338],\n        [-122.420457, 37.774336],\n        [-122.420761, 37.774296],\n        [-122.420727, 37.77413],\n        [-122.420663, 37.774181],\n        [-122.420573, 37.774251],\n        [-122.420457, 37.774336],\n        [-122.420333, 37.774413],\n        [-122.419868, 37.774685],\n        [-122.419328, 37.775112],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417401, 37.776636]\n      ]\n    }\n  },\n  \"67-67s\": {\n    \"distance\": 0.6571308506390282,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417401, 37.776636],\n        [-122.417401, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725]\n      ]\n    }\n  },\n  \"67-67m\": {\n    \"distance\": 1.5762225280307791,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.419121, 37.774783],\n        [-122.419134, 37.774833],\n        [-122.419178, 37.775041],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417305, 37.776391],\n        [-122.416923, 37.776083],\n        [-122.416526, 37.775763],\n        [-122.415323, 37.776716],\n        [-122.415742, 37.777047],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417401, 37.776636],\n        [-122.417401, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415742, 37.777047],\n        [-122.415323, 37.776716],\n        [-122.416526, 37.775763],\n        [-122.416923, 37.776083],\n        [-122.417305, 37.776391],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419178, 37.775041],\n        [-122.419134, 37.774833],\n        [-122.419121, 37.774783]\n      ]\n    }\n  },\n  \"67-67l\": {\n    \"distance\": 4.167449824287621,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400649, 37.784873],\n        [-122.401125, 37.784499],\n        [-122.401191, 37.784448],\n        [-122.401862, 37.783914],\n        [-122.402025, 37.783786],\n        [-122.402418, 37.783477],\n        [-122.402623, 37.783316],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.405723, 37.780875],\n        [-122.407162, 37.779736],\n        [-122.407705, 37.779298],\n        [-122.408275, 37.778851],\n        [-122.408839, 37.778409],\n        [-122.409388, 37.777976],\n        [-122.409945, 37.778419],\n        [-122.410401, 37.778784],\n        [-122.410944, 37.779218],\n        [-122.411484, 37.779648],\n        [-122.41194, 37.780011],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.41557, 37.778083],\n        [-122.415948, 37.777784],\n        [-122.416311, 37.777496],\n        [-122.416539, 37.777316],\n        [-122.417401, 37.776636],\n        [-122.417401, 37.776636],\n        [-122.416539, 37.777316],\n        [-122.416311, 37.777496],\n        [-122.415948, 37.777784],\n        [-122.41557, 37.778083],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.41194, 37.780011],\n        [-122.411484, 37.779648],\n        [-122.410944, 37.779218],\n        [-122.410401, 37.778784],\n        [-122.409945, 37.778419],\n        [-122.409388, 37.777976],\n        [-122.408839, 37.778409],\n        [-122.408275, 37.778851],\n        [-122.407705, 37.779298],\n        [-122.407162, 37.779736],\n        [-122.405723, 37.780875],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.402623, 37.783316],\n        [-122.402418, 37.783477],\n        [-122.402025, 37.783786],\n        [-122.401862, 37.783914],\n        [-122.401191, 37.784448],\n        [-122.401125, 37.784499],\n        [-122.400649, 37.784873]\n      ]\n    }\n  },\n  \"68-68s\": {\n    \"distance\": 3.866729849597509,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401998, 37.788702],\n        [-122.401948, 37.788626],\n        [-122.40151, 37.788269],\n        [-122.401043, 37.78789],\n        [-122.400821, 37.787704],\n        [-122.400508, 37.787455],\n        [-122.399975, 37.787011],\n        [-122.399502, 37.786634],\n        [-122.398984, 37.786206],\n        [-122.399379, 37.785887],\n        [-122.399883, 37.785477],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731],\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399883, 37.785477],\n        [-122.399379, 37.785887],\n        [-122.398984, 37.786206],\n        [-122.399502, 37.786634],\n        [-122.399975, 37.787011],\n        [-122.400508, 37.787455],\n        [-122.400821, 37.787704],\n        [-122.401043, 37.78789],\n        [-122.40151, 37.788269],\n        [-122.401948, 37.788626],\n        [-122.401998, 37.788702],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488]\n      ]\n    }\n  },\n  \"68-68m\": {\n    \"distance\": 2.027163958382668,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405198, 37.781695],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.401175, 37.782025],\n        [-122.401004, 37.782162],\n        [-122.4007, 37.7824],\n        [-122.400382, 37.782651],\n        [-122.399117, 37.78365],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731],\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.399117, 37.78365],\n        [-122.400382, 37.782651],\n        [-122.4007, 37.7824],\n        [-122.401004, 37.782162],\n        [-122.401175, 37.782025],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.405198, 37.781695]\n      ]\n    }\n  },\n  \"68-68l\": {\n    \"distance\": 3.142378118021179,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.396543, 37.778333],\n        [-122.396201, 37.778602],\n        [-122.396072, 37.778704],\n        [-122.395955, 37.778796],\n        [-122.39538, 37.779249],\n        [-122.395322, 37.779295],\n        [-122.394847, 37.779673],\n        [-122.394316, 37.780094],\n        [-122.394636, 37.780349],\n        [-122.395087, 37.780709],\n        [-122.395198, 37.780798],\n        [-122.395532, 37.781065],\n        [-122.395859, 37.781326],\n        [-122.396402, 37.781759],\n        [-122.396846, 37.782114],\n        [-122.3974, 37.782556],\n        [-122.397953, 37.782997],\n        [-122.398745, 37.783629],\n        [-122.398943, 37.783787],\n        [-122.399473, 37.78421],\n        [-122.399989, 37.784623],\n        [-122.400476, 37.785012],\n        [-122.400649, 37.784873],\n        [-122.40083, 37.784731],\n        [-122.40083, 37.784731],\n        [-122.400649, 37.784873],\n        [-122.400476, 37.785012],\n        [-122.399989, 37.784623],\n        [-122.399473, 37.78421],\n        [-122.398943, 37.783787],\n        [-122.398745, 37.783629],\n        [-122.397953, 37.782997],\n        [-122.3974, 37.782556],\n        [-122.396846, 37.782114],\n        [-122.396402, 37.781759],\n        [-122.395859, 37.781326],\n        [-122.395532, 37.781065],\n        [-122.395198, 37.780798],\n        [-122.395087, 37.780709],\n        [-122.394636, 37.780349],\n        [-122.394316, 37.780094],\n        [-122.394847, 37.779673],\n        [-122.395322, 37.779295],\n        [-122.39538, 37.779249],\n        [-122.395955, 37.778796],\n        [-122.396072, 37.778704],\n        [-122.396201, 37.778602],\n        [-122.396543, 37.778333],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421]\n      ]\n    }\n  },\n  \"69-69s\": {\n    \"distance\": 0,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395999, 37.776313],\n        [-122.395999, 37.776313],\n        [-122.395999, 37.776313],\n        [-122.395999, 37.776313]\n      ]\n    }\n  },\n  \"69-69m\": {\n    \"distance\": 1.6617749163921558,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395999, 37.776313],\n        [-122.395999, 37.776313],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"70-70s\": {\n    \"distance\": 1.2984426176177988,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390544, 37.780607],\n        [-122.390632, 37.780548],\n        [-122.39108, 37.780194],\n        [-122.391662, 37.779735],\n        [-122.392231, 37.779287],\n        [-122.392679, 37.778932],\n        [-122.392764, 37.778855],\n        [-122.393294, 37.778437],\n        [-122.393556, 37.778231],\n        [-122.39389, 37.777968],\n        [-122.393949, 37.777922],\n        [-122.394274, 37.777667],\n        [-122.394797, 37.777255],\n        [-122.394887, 37.777183],\n        [-122.394994, 37.7771],\n        [-122.395088, 37.777032],\n        [-122.395777, 37.776487],\n        [-122.395777, 37.776487],\n        [-122.395088, 37.777032],\n        [-122.394994, 37.7771],\n        [-122.394887, 37.777183],\n        [-122.394797, 37.777255],\n        [-122.394274, 37.777667],\n        [-122.393949, 37.777922],\n        [-122.39389, 37.777968],\n        [-122.393556, 37.778231],\n        [-122.393294, 37.778437],\n        [-122.392764, 37.778855],\n        [-122.392679, 37.778932],\n        [-122.392231, 37.779287],\n        [-122.391662, 37.779735],\n        [-122.39108, 37.780194],\n        [-122.390632, 37.780548],\n        [-122.390544, 37.780607]\n      ]\n    }\n  },\n  \"69-69l\": {\n    \"distance\": 4.552342023103179,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.408052, 37.786428],\n        [-122.407866, 37.785495],\n        [-122.407789, 37.785505],\n        [-122.406229, 37.785713],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395999, 37.776313],\n        [-122.395999, 37.776313],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.406229, 37.785713],\n        [-122.407789, 37.785505],\n        [-122.407866, 37.785495],\n        [-122.408052, 37.786428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829]\n      ]\n    }\n  },\n  \"70-70m\": {\n    \"distance\": 1.716730804038427,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.402675, 37.771024],\n        [-122.401757, 37.771759],\n        [-122.401678, 37.771828],\n        [-122.401602, 37.771905],\n        [-122.40125, 37.772178],\n        [-122.401182, 37.772232],\n        [-122.401112, 37.772291],\n        [-122.399417, 37.773623],\n        [-122.399365, 37.773667],\n        [-122.397326, 37.775272],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395777, 37.776487],\n        [-122.395777, 37.776487],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397326, 37.775272],\n        [-122.399365, 37.773667],\n        [-122.399417, 37.773623],\n        [-122.401112, 37.772291],\n        [-122.401182, 37.772232],\n        [-122.40125, 37.772178],\n        [-122.401602, 37.771905],\n        [-122.401678, 37.771828],\n        [-122.401757, 37.771759],\n        [-122.402675, 37.771024]\n      ]\n    }\n  },\n  \"70-70l\": {\n    \"distance\": 4.607297910749451,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.408052, 37.786428],\n        [-122.407866, 37.785495],\n        [-122.407789, 37.785505],\n        [-122.406229, 37.785713],\n        [-122.405916, 37.785713],\n        [-122.40577, 37.785699],\n        [-122.40569, 37.785658],\n        [-122.405236, 37.785296],\n        [-122.404781, 37.784935],\n        [-122.404256, 37.784489],\n        [-122.403734, 37.784073],\n        [-122.403405, 37.78381],\n        [-122.402707, 37.78325],\n        [-122.403299, 37.782776],\n        [-122.404941, 37.781493],\n        [-122.404411, 37.78107],\n        [-122.403935, 37.780691],\n        [-122.403403, 37.780266],\n        [-122.403286, 37.780173],\n        [-122.403222, 37.780122],\n        [-122.40314, 37.780058],\n        [-122.403034, 37.779972],\n        [-122.402847, 37.779824],\n        [-122.402717, 37.77972],\n        [-122.402537, 37.779576],\n        [-122.402383, 37.779454],\n        [-122.401857, 37.779035],\n        [-122.40132, 37.778607],\n        [-122.400842, 37.778226],\n        [-122.400313, 37.777804],\n        [-122.399767, 37.777368],\n        [-122.39967, 37.777292],\n        [-122.399534, 37.777183],\n        [-122.398769, 37.776574],\n        [-122.397997, 37.775958],\n        [-122.397334, 37.775426],\n        [-122.397227, 37.775345],\n        [-122.397136, 37.775421],\n        [-122.395777, 37.776487],\n        [-122.395777, 37.776487],\n        [-122.397136, 37.775421],\n        [-122.397227, 37.775345],\n        [-122.397334, 37.775426],\n        [-122.397997, 37.775958],\n        [-122.398769, 37.776574],\n        [-122.399534, 37.777183],\n        [-122.39967, 37.777292],\n        [-122.399767, 37.777368],\n        [-122.400313, 37.777804],\n        [-122.400842, 37.778226],\n        [-122.40132, 37.778607],\n        [-122.401857, 37.779035],\n        [-122.402383, 37.779454],\n        [-122.402537, 37.779576],\n        [-122.402717, 37.77972],\n        [-122.402847, 37.779824],\n        [-122.403034, 37.779972],\n        [-122.40314, 37.780058],\n        [-122.403222, 37.780122],\n        [-122.403286, 37.780173],\n        [-122.403403, 37.780266],\n        [-122.403935, 37.780691],\n        [-122.404411, 37.78107],\n        [-122.404941, 37.781493],\n        [-122.403299, 37.782776],\n        [-122.402707, 37.78325],\n        [-122.403405, 37.78381],\n        [-122.403734, 37.784073],\n        [-122.404256, 37.784489],\n        [-122.404781, 37.784935],\n        [-122.405236, 37.785296],\n        [-122.40569, 37.785658],\n        [-122.40577, 37.785699],\n        [-122.405916, 37.785713],\n        [-122.406229, 37.785713],\n        [-122.407789, 37.785505],\n        [-122.407866, 37.785495],\n        [-122.408052, 37.786428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829]\n      ]\n    }\n  },\n  \"71-71s\": {\n    \"distance\": 2.558621404424227,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.410138, 37.782111],\n        [-122.409703, 37.781763],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408207, 37.784092],\n        [-122.408459, 37.784306],\n        [-122.40851, 37.784397],\n        [-122.408525, 37.78446],\n        [-122.408538, 37.784536],\n        [-122.408678, 37.785392],\n        [-122.408697, 37.785481],\n        [-122.408723, 37.785545],\n        [-122.408843, 37.785847],\n        [-122.408951, 37.786313],\n        [-122.408052, 37.786428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788451],\n        [-122.408451, 37.788451],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.408052, 37.786428],\n        [-122.408951, 37.786313],\n        [-122.408843, 37.785847],\n        [-122.408723, 37.785545],\n        [-122.408697, 37.785481],\n        [-122.408678, 37.785392],\n        [-122.408538, 37.784536],\n        [-122.408525, 37.78446],\n        [-122.40851, 37.784397],\n        [-122.408459, 37.784306],\n        [-122.408207, 37.784092],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.409703, 37.781763],\n        [-122.410138, 37.782111],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488]\n      ]\n    }\n  },\n  \"72-72m\": {\n    \"distance\": 1.3743668500880457,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418587, 37.781262],\n        [-122.417147, 37.781446],\n        [-122.416799, 37.781491],\n        [-122.416341, 37.781549],\n        [-122.415505, 37.781654],\n        [-122.415322, 37.780711],\n        [-122.414484, 37.780824],\n        [-122.413675, 37.780932],\n        [-122.41358, 37.780943],\n        [-122.413148, 37.780994],\n        [-122.412635, 37.780575],\n        [-122.412528, 37.780488],\n        [-122.412807, 37.780266],\n        [-122.412807, 37.780266],\n        [-122.412528, 37.780488],\n        [-122.412635, 37.780575],\n        [-122.413148, 37.780994],\n        [-122.41358, 37.780943],\n        [-122.413675, 37.780932],\n        [-122.414484, 37.780824],\n        [-122.415322, 37.780711],\n        [-122.415505, 37.781654],\n        [-122.416341, 37.781549],\n        [-122.416799, 37.781491],\n        [-122.417147, 37.781446],\n        [-122.418587, 37.781262]\n      ]\n    }\n  },\n  \"72-72s\": {\n    \"distance\": 1.7129958729583628,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412807, 37.780266],\n        [-122.412807, 37.780266],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713]\n      ]\n    }\n  },\n  \"71-71m\": {\n    \"distance\": 2.038005018367924,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.40871, 37.783508],\n        [-122.408802, 37.78347],\n        [-122.408849, 37.783458],\n        [-122.409144, 37.78342],\n        [-122.410765, 37.783214],\n        [-122.410953, 37.784148],\n        [-122.41114, 37.785075],\n        [-122.411334, 37.78601],\n        [-122.411516, 37.78694],\n        [-122.411572, 37.78722],\n        [-122.411642, 37.787567],\n        [-122.411699, 37.787873],\n        [-122.410071, 37.78808],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788451],\n        [-122.408451, 37.788451],\n        [-122.408415, 37.78829],\n        [-122.410071, 37.78808],\n        [-122.411699, 37.787873],\n        [-122.411642, 37.787567],\n        [-122.411572, 37.78722],\n        [-122.411516, 37.78694],\n        [-122.411334, 37.78601],\n        [-122.41114, 37.785075],\n        [-122.410953, 37.784148],\n        [-122.410765, 37.783214],\n        [-122.409144, 37.78342],\n        [-122.408849, 37.783458],\n        [-122.408802, 37.78347],\n        [-122.40871, 37.783508]\n      ]\n    }\n  },\n  \"72-72l\": {\n    \"distance\": 4.498008127666101,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412807, 37.780266],\n        [-122.412807, 37.780266],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384]\n      ]\n    }\n  },\n  \"73-73s\": {\n    \"distance\": 1.2100484387040424,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401166, 37.798566],\n        [-122.402226, 37.798431],\n        [-122.403085, 37.798321],\n        [-122.403535, 37.798258],\n        [-122.40386, 37.79822],\n        [-122.40469, 37.798116],\n        [-122.405489, 37.798016],\n        [-122.406256, 37.79792],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798525],\n        [-122.407172, 37.798525],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406256, 37.79792],\n        [-122.405489, 37.798016],\n        [-122.40469, 37.798116],\n        [-122.40386, 37.79822],\n        [-122.403535, 37.798258],\n        [-122.403085, 37.798321],\n        [-122.402226, 37.798431],\n        [-122.401166, 37.798566],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591]\n      ]\n    }\n  },\n  \"73-73m\": {\n    \"distance\": 0.915777379921193,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404754, 37.795349],\n        [-122.404971, 37.795325],\n        [-122.40515, 37.796218],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798525],\n        [-122.407172, 37.798525],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.40515, 37.796218],\n        [-122.404971, 37.795325],\n        [-122.404754, 37.795349]\n      ]\n    }\n  },\n  \"74-74s\": {\n    \"distance\": 0.9600838773829852,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165],\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734]\n      ]\n    }\n  },\n  \"73-73l\": {\n    \"distance\": 3.2718466418426706,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396332, 37.79345],\n        [-122.396323, 37.793497],\n        [-122.396325, 37.793549],\n        [-122.396349, 37.793682],\n        [-122.396382, 37.793838],\n        [-122.396533, 37.794545],\n        [-122.396543, 37.794592],\n        [-122.396554, 37.794658],\n        [-122.396611, 37.795014],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.398168, 37.796167],\n        [-122.398587, 37.796104],\n        [-122.400492, 37.795867],\n        [-122.40111, 37.795793],\n        [-122.401674, 37.795719],\n        [-122.40238, 37.795641],\n        [-122.402741, 37.795597],\n        [-122.403321, 37.795531],\n        [-122.40412, 37.796083],\n        [-122.404422, 37.79631],\n        [-122.404507, 37.796369],\n        [-122.405295, 37.796902],\n        [-122.405535, 37.797071],\n        [-122.406182, 37.797516],\n        [-122.406209, 37.797581],\n        [-122.406635, 37.797873],\n        [-122.40698, 37.798113],\n        [-122.407075, 37.79813],\n        [-122.407216, 37.798228],\n        [-122.407154, 37.798308],\n        [-122.407145, 37.798352],\n        [-122.407172, 37.798525],\n        [-122.407172, 37.798525],\n        [-122.407145, 37.798352],\n        [-122.407154, 37.798308],\n        [-122.407216, 37.798228],\n        [-122.407075, 37.79813],\n        [-122.40698, 37.798113],\n        [-122.406635, 37.797873],\n        [-122.406209, 37.797581],\n        [-122.406182, 37.797516],\n        [-122.405535, 37.797071],\n        [-122.405295, 37.796902],\n        [-122.404507, 37.796369],\n        [-122.404422, 37.79631],\n        [-122.40412, 37.796083],\n        [-122.403321, 37.795531],\n        [-122.402741, 37.795597],\n        [-122.40238, 37.795641],\n        [-122.401674, 37.795719],\n        [-122.40111, 37.795793],\n        [-122.400492, 37.795867],\n        [-122.398587, 37.796104],\n        [-122.398168, 37.796167],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396611, 37.795014],\n        [-122.396554, 37.794658],\n        [-122.396543, 37.794592],\n        [-122.396533, 37.794545],\n        [-122.396382, 37.793838],\n        [-122.396349, 37.793682],\n        [-122.396325, 37.793549],\n        [-122.396323, 37.793497],\n        [-122.396332, 37.79345],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384]\n      ]\n    }\n  },\n  \"74-74m\": {\n    \"distance\": 2.333772487026762,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.390335, 37.789569],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.390321, 37.788151],\n        [-122.391857, 37.789385],\n        [-122.391908, 37.789426],\n        [-122.392891, 37.790206],\n        [-122.393405, 37.790614],\n        [-122.393835, 37.790958],\n        [-122.394165, 37.791222],\n        [-122.394951, 37.791852],\n        [-122.394077, 37.792542],\n        [-122.393203, 37.793241],\n        [-122.393342, 37.793313],\n        [-122.393916, 37.793774],\n        [-122.394399, 37.794165],\n        [-122.394399, 37.794165],\n        [-122.393916, 37.793774],\n        [-122.393342, 37.793313],\n        [-122.393203, 37.793241],\n        [-122.394077, 37.792542],\n        [-122.394951, 37.791852],\n        [-122.394165, 37.791222],\n        [-122.393835, 37.790958],\n        [-122.393405, 37.790614],\n        [-122.392891, 37.790206],\n        [-122.391908, 37.789426],\n        [-122.391857, 37.789385],\n        [-122.390321, 37.788151],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390335, 37.789569]\n      ]\n    }\n  },\n  \"75-75m\": {\n    \"distance\": 1.1207514330878308,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.398942, 37.791222],\n        [-122.398942, 37.791222],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165]\n      ]\n    }\n  },\n  \"75-75s\": {\n    \"distance\": 1.407156751192936,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398942, 37.791222],\n        [-122.398942, 37.791222],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749]\n      ]\n    }\n  },\n  \"76-76s\": {\n    \"distance\": 0.9146262000891374,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283]\n      ]\n    }\n  },\n  \"77-77s\": {\n    \"distance\": 1.7244248396242374,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.397872, 37.794791],\n        [-122.397792, 37.794428],\n        [-122.397613, 37.793534],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.400888, 37.789684],\n        [-122.400888, 37.789684],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.397613, 37.793534],\n        [-122.397792, 37.794428],\n        [-122.397872, 37.794791],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952]\n      ]\n    }\n  },\n  \"76-76m\": {\n    \"distance\": 1.921242586269352,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412807, 37.780266],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.412807, 37.780266]\n      ]\n    }\n  },\n  \"77-77m\": {\n    \"distance\": 1.8518898335023732,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.408344, 37.7838],\n        [-122.40809, 37.783999],\n        [-122.407934, 37.784122],\n        [-122.407357, 37.784576],\n        [-122.405916, 37.785713],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400888, 37.789684],\n        [-122.400888, 37.789684],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405916, 37.785713],\n        [-122.407357, 37.784576],\n        [-122.407934, 37.784122],\n        [-122.40809, 37.783999],\n        [-122.408344, 37.7838]\n      ]\n    }\n  },\n  \"77-77l\": {\n    \"distance\": 2.286752956663971,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.399986, 37.79871],\n        [-122.400962, 37.798591],\n        [-122.401052, 37.79858],\n        [-122.401034, 37.798492],\n        [-122.401013, 37.798391],\n        [-122.400874, 37.797662],\n        [-122.400693, 37.796782],\n        [-122.400492, 37.795867],\n        [-122.400413, 37.795448],\n        [-122.400335, 37.795029],\n        [-122.400226, 37.794547],\n        [-122.400141, 37.794129],\n        [-122.40006, 37.793693],\n        [-122.399959, 37.793209],\n        [-122.399763, 37.792258],\n        [-122.399589, 37.791411],\n        [-122.399572, 37.791327],\n        [-122.399608, 37.791203],\n        [-122.399557, 37.790909],\n        [-122.399541, 37.790817],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.400888, 37.789684],\n        [-122.400888, 37.789684],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399541, 37.790817],\n        [-122.399557, 37.790909],\n        [-122.399608, 37.791203],\n        [-122.399572, 37.791327],\n        [-122.399589, 37.791411],\n        [-122.399763, 37.792258],\n        [-122.399959, 37.793209],\n        [-122.40006, 37.793693],\n        [-122.400141, 37.794129],\n        [-122.400226, 37.794547],\n        [-122.400335, 37.795029],\n        [-122.400413, 37.795448],\n        [-122.400492, 37.795867],\n        [-122.400693, 37.796782],\n        [-122.400874, 37.797662],\n        [-122.401013, 37.798391],\n        [-122.401034, 37.798492],\n        [-122.401052, 37.79858],\n        [-122.400962, 37.798591],\n        [-122.399986, 37.79871]\n      ]\n    }\n  },\n  \"82-82s\": {\n    \"distance\": 0.7371823763521788,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400879, 37.798602],\n        [-122.400879, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337]\n      ]\n    }\n  },\n  \"82-82m\": {\n    \"distance\": 1.3017304645334833,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400879, 37.798602],\n        [-122.400879, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966]\n      ]\n    }\n  },\n  \"46-46l\": {\n    \"distance\": 2.249603012429865,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.400335, 37.795029],\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.396834, 37.795467],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396979, 37.796344],\n        [-122.398168, 37.796167],\n        [-122.398587, 37.796104],\n        [-122.400492, 37.795867],\n        [-122.40111, 37.795793],\n        [-122.401674, 37.795719],\n        [-122.40238, 37.795641],\n        [-122.402741, 37.795597],\n        [-122.403321, 37.795531],\n        [-122.404754, 37.795349],\n        [-122.404754, 37.795349],\n        [-122.403321, 37.795531],\n        [-122.402741, 37.795597],\n        [-122.40238, 37.795641],\n        [-122.401674, 37.795719],\n        [-122.40111, 37.795793],\n        [-122.400492, 37.795867],\n        [-122.398587, 37.796104],\n        [-122.398168, 37.796167],\n        [-122.396979, 37.796344],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396834, 37.795467],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952],\n        [-122.400335, 37.795029]\n      ]\n    }\n  },\n  \"54-54l\": {\n    \"distance\": 2.052585680811126,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.394704, 37.789581],\n        [-122.394277, 37.78992],\n        [-122.393437, 37.790589],\n        [-122.392944, 37.790979],\n        [-122.392525, 37.79131],\n        [-122.391972, 37.79087],\n        [-122.390979, 37.790082],\n        [-122.390077, 37.789366],\n        [-122.38943, 37.788852],\n        [-122.388628, 37.789488],\n        [-122.388529, 37.789374],\n        [-122.388428, 37.789232],\n        [-122.388339, 37.789072],\n        [-122.388281, 37.788931],\n        [-122.388236, 37.788787],\n        [-122.388084, 37.788205],\n        [-122.388052, 37.78805],\n        [-122.388029, 37.787905],\n        [-122.388013, 37.787756],\n        [-122.388008, 37.787618],\n        [-122.388008, 37.787477],\n        [-122.388015, 37.787333],\n        [-122.388027, 37.787198],\n        [-122.388026, 37.787152],\n        [-122.388026, 37.787152],\n        [-122.388027, 37.787198],\n        [-122.388015, 37.787333],\n        [-122.388008, 37.787477],\n        [-122.388008, 37.787618],\n        [-122.388013, 37.787756],\n        [-122.388029, 37.787905],\n        [-122.388052, 37.78805],\n        [-122.388084, 37.788205],\n        [-122.388236, 37.788787],\n        [-122.388281, 37.788931],\n        [-122.388339, 37.789072],\n        [-122.388428, 37.789232],\n        [-122.388529, 37.789374],\n        [-122.388628, 37.789488],\n        [-122.38943, 37.788852],\n        [-122.390077, 37.789366],\n        [-122.390979, 37.790082],\n        [-122.391972, 37.79087],\n        [-122.392525, 37.79131],\n        [-122.392944, 37.790979],\n        [-122.393437, 37.790589],\n        [-122.394277, 37.78992],\n        [-122.394704, 37.789581]\n      ]\n    }\n  },\n  \"82-82l\": {\n    \"distance\": 1.8421558933463955,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.399164, 37.7952],\n        [-122.398305, 37.795312],\n        [-122.398123, 37.795329],\n        [-122.397985, 37.795319],\n        [-122.396834, 37.795467],\n        [-122.396716, 37.795506],\n        [-122.396747, 37.795676],\n        [-122.396804, 37.795966],\n        [-122.396855, 37.796233],\n        [-122.396852, 37.796307],\n        [-122.396908, 37.796396],\n        [-122.396961, 37.796527],\n        [-122.397021, 37.796601],\n        [-122.397137, 37.797247],\n        [-122.397198, 37.797239],\n        [-122.398341, 37.797088],\n        [-122.398395, 37.797337],\n        [-122.39852, 37.797948],\n        [-122.398685, 37.798789],\n        [-122.398704, 37.79889],\n        [-122.398808, 37.798875],\n        [-122.39978, 37.798737],\n        [-122.39987, 37.798724],\n        [-122.399986, 37.79871],\n        [-122.400879, 37.798602],\n        [-122.400879, 37.798602],\n        [-122.399986, 37.79871],\n        [-122.39987, 37.798724],\n        [-122.39978, 37.798737],\n        [-122.398808, 37.798875],\n        [-122.398704, 37.79889],\n        [-122.398685, 37.798789],\n        [-122.39852, 37.797948],\n        [-122.398395, 37.797337],\n        [-122.398341, 37.797088],\n        [-122.397198, 37.797239],\n        [-122.397137, 37.797247],\n        [-122.397021, 37.796601],\n        [-122.396961, 37.796527],\n        [-122.396908, 37.796396],\n        [-122.396852, 37.796307],\n        [-122.396855, 37.796233],\n        [-122.396804, 37.795966],\n        [-122.396747, 37.795676],\n        [-122.396716, 37.795506],\n        [-122.396834, 37.795467],\n        [-122.397985, 37.795319],\n        [-122.398123, 37.795329],\n        [-122.398305, 37.795312],\n        [-122.399164, 37.7952]\n      ]\n    }\n  },\n  \"57-57l\": {\n    \"distance\": 3.0114935196001973,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.418229, 37.778444],\n        [-122.416764, 37.778631],\n        [-122.416579, 37.778655],\n        [-122.415057, 37.778849],\n        [-122.414921, 37.778867],\n        [-122.414757, 37.778725],\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.409099, 37.783201],\n        [-122.40871, 37.783508],\n        [-122.408397, 37.783756],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.407199, 37.783287],\n        [-122.407035, 37.783156],\n        [-122.406495, 37.782729],\n        [-122.405961, 37.782305],\n        [-122.405487, 37.781927],\n        [-122.405198, 37.781695],\n        [-122.405198, 37.781695],\n        [-122.405487, 37.781927],\n        [-122.405961, 37.782305],\n        [-122.406495, 37.782729],\n        [-122.407035, 37.783156],\n        [-122.407199, 37.783287],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408397, 37.783756],\n        [-122.40871, 37.783508],\n        [-122.409099, 37.783201],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488],\n        [-122.414757, 37.778725],\n        [-122.414921, 37.778867],\n        [-122.415057, 37.778849],\n        [-122.416579, 37.778655],\n        [-122.416764, 37.778631],\n        [-122.418229, 37.778444]\n      ]\n    }\n  },\n  \"58-58l\": {\n    \"distance\": 1.592915866490774,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.4188, 37.781236],\n        [-122.417147, 37.781446],\n        [-122.417337, 37.782379],\n        [-122.41899, 37.782169],\n        [-122.418896, 37.781705],\n        [-122.4188, 37.781236],\n        [-122.418706, 37.780773],\n        [-122.418628, 37.780392],\n        [-122.418604, 37.780272],\n        [-122.418567, 37.780129],\n        [-122.418419, 37.779388],\n        [-122.418274, 37.778643],\n        [-122.418274, 37.778643],\n        [-122.418419, 37.779388],\n        [-122.418567, 37.780129],\n        [-122.418604, 37.780272],\n        [-122.418628, 37.780392],\n        [-122.418706, 37.780773],\n        [-122.4188, 37.781236],\n        [-122.418896, 37.781705],\n        [-122.41899, 37.782169],\n        [-122.417337, 37.782379],\n        [-122.417147, 37.781446],\n        [-122.4188, 37.781236]\n      ]\n    }\n  },\n  \"61-61l\": {\n    \"distance\": 1.3879365579606615,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484],\n        [-122.392615, 37.782284],\n        [-122.392176, 37.781931],\n        [-122.392084, 37.781857],\n        [-122.391994, 37.781785],\n        [-122.390544, 37.780607],\n        [-122.390366, 37.780468],\n        [-122.390366, 37.780468],\n        [-122.390544, 37.780607],\n        [-122.391994, 37.781785],\n        [-122.392084, 37.781857],\n        [-122.392176, 37.781931],\n        [-122.392615, 37.782284],\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905]\n      ]\n    }\n  },\n  \"66-66l\": {\n    \"distance\": 2.046592301305151,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.416539, 37.777316],\n        [-122.417385, 37.776653],\n        [-122.417533, 37.776537],\n        [-122.41773, 37.776378],\n        [-122.418719, 37.775594],\n        [-122.419018, 37.775357],\n        [-122.419214, 37.775202],\n        [-122.419328, 37.775112],\n        [-122.419868, 37.774685],\n        [-122.420333, 37.774413],\n        [-122.420457, 37.774336],\n        [-122.420573, 37.774251],\n        [-122.420663, 37.774181],\n        [-122.420727, 37.77413],\n        [-122.420761, 37.774296],\n        [-122.420457, 37.774336],\n        [-122.420238, 37.774338],\n        [-122.419675, 37.773892],\n        [-122.419165, 37.773478],\n        [-122.418855, 37.77322],\n        [-122.418702, 37.773081],\n        [-122.418631, 37.772841],\n        [-122.418532, 37.772961],\n        [-122.418594, 37.77317],\n        [-122.419096, 37.774706],\n        [-122.419121, 37.774783],\n        [-122.419121, 37.774783],\n        [-122.419096, 37.774706],\n        [-122.418594, 37.77317],\n        [-122.418532, 37.772961],\n        [-122.418631, 37.772841],\n        [-122.418702, 37.773081],\n        [-122.418855, 37.77322],\n        [-122.419165, 37.773478],\n        [-122.419675, 37.773892],\n        [-122.420238, 37.774338],\n        [-122.420457, 37.774336],\n        [-122.420761, 37.774296],\n        [-122.420727, 37.77413],\n        [-122.420663, 37.774181],\n        [-122.420573, 37.774251],\n        [-122.420457, 37.774336],\n        [-122.420333, 37.774413],\n        [-122.419868, 37.774685],\n        [-122.419328, 37.775112],\n        [-122.419214, 37.775202],\n        [-122.419018, 37.775357],\n        [-122.418719, 37.775594],\n        [-122.41773, 37.776378],\n        [-122.417533, 37.776537],\n        [-122.417385, 37.776653],\n        [-122.416539, 37.777316]\n      ]\n    }\n  },\n  \"63-63l\": {\n    \"distance\": 3.1761795488069295,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.392864, 37.782484],\n        [-122.392923, 37.782532],\n        [-122.39309, 37.782666],\n        [-122.3933, 37.782834],\n        [-122.39362, 37.783091],\n        [-122.394169, 37.783522],\n        [-122.394865, 37.784067],\n        [-122.395178, 37.784312],\n        [-122.395919, 37.784905],\n        [-122.396719, 37.785543],\n        [-122.39724, 37.785959],\n        [-122.397709, 37.786334],\n        [-122.398258, 37.786773],\n        [-122.398818, 37.787219],\n        [-122.399265, 37.787577],\n        [-122.399805, 37.788009],\n        [-122.399362, 37.788357],\n        [-122.399058, 37.788596],\n        [-122.398936, 37.788692],\n        [-122.398566, 37.788983],\n        [-122.398317, 37.789178],\n        [-122.398078, 37.789366],\n        [-122.397564, 37.789771],\n        [-122.397175, 37.78946],\n        [-122.397043, 37.789352],\n        [-122.396566, 37.788971],\n        [-122.396028, 37.788542],\n        [-122.396484, 37.788179],\n        [-122.396721, 37.787989],\n        [-122.397485, 37.78738],\n        [-122.397937, 37.787027],\n        [-122.398054, 37.786932],\n        [-122.398054, 37.786932],\n        [-122.397937, 37.787027],\n        [-122.397485, 37.78738],\n        [-122.396721, 37.787989],\n        [-122.396484, 37.788179],\n        [-122.396028, 37.788542],\n        [-122.396566, 37.788971],\n        [-122.397043, 37.789352],\n        [-122.397175, 37.78946],\n        [-122.397564, 37.789771],\n        [-122.398078, 37.789366],\n        [-122.398317, 37.789178],\n        [-122.398566, 37.788983],\n        [-122.398936, 37.788692],\n        [-122.399058, 37.788596],\n        [-122.399362, 37.788357],\n        [-122.399805, 37.788009],\n        [-122.399265, 37.787577],\n        [-122.398818, 37.787219],\n        [-122.398258, 37.786773],\n        [-122.397709, 37.786334],\n        [-122.39724, 37.785959],\n        [-122.396719, 37.785543],\n        [-122.395919, 37.784905],\n        [-122.395178, 37.784312],\n        [-122.394865, 37.784067],\n        [-122.394169, 37.783522],\n        [-122.39362, 37.783091],\n        [-122.3933, 37.782834],\n        [-122.39309, 37.782666],\n        [-122.392923, 37.782532],\n        [-122.392864, 37.782484]\n      ]\n    }\n  },\n  \"71-71l\": {\n    \"distance\": 2.558621404424227,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.412528, 37.780488],\n        [-122.411978, 37.780923],\n        [-122.411603, 37.781218],\n        [-122.410355, 37.782206],\n        [-122.410138, 37.782111],\n        [-122.409703, 37.781763],\n        [-122.407494, 37.783521],\n        [-122.40809, 37.783999],\n        [-122.408207, 37.784092],\n        [-122.408459, 37.784306],\n        [-122.40851, 37.784397],\n        [-122.408525, 37.78446],\n        [-122.408538, 37.784536],\n        [-122.408678, 37.785392],\n        [-122.408697, 37.785481],\n        [-122.408723, 37.785545],\n        [-122.408843, 37.785847],\n        [-122.408951, 37.786313],\n        [-122.408052, 37.786428],\n        [-122.408234, 37.787372],\n        [-122.408328, 37.787826],\n        [-122.408398, 37.788211],\n        [-122.408415, 37.78829],\n        [-122.408451, 37.788451],\n        [-122.408451, 37.788451],\n        [-122.408415, 37.78829],\n        [-122.408398, 37.788211],\n        [-122.408328, 37.787826],\n        [-122.408234, 37.787372],\n        [-122.408052, 37.786428],\n        [-122.408951, 37.786313],\n        [-122.408843, 37.785847],\n        [-122.408723, 37.785545],\n        [-122.408697, 37.785481],\n        [-122.408678, 37.785392],\n        [-122.408538, 37.784536],\n        [-122.408525, 37.78446],\n        [-122.40851, 37.784397],\n        [-122.408459, 37.784306],\n        [-122.408207, 37.784092],\n        [-122.40809, 37.783999],\n        [-122.407494, 37.783521],\n        [-122.409703, 37.781763],\n        [-122.410138, 37.782111],\n        [-122.410355, 37.782206],\n        [-122.411603, 37.781218],\n        [-122.411978, 37.780923],\n        [-122.412528, 37.780488]\n      ]\n    }\n  },\n  \"74-74l\": {\n    \"distance\": 0.9600838773829852,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.398297, 37.791734],\n        [-122.397403, 37.79244],\n        [-122.396537, 37.793125],\n        [-122.396425, 37.793225],\n        [-122.396272, 37.793364],\n        [-122.396176, 37.793446],\n        [-122.395694, 37.793826],\n        [-122.394952, 37.794409],\n        [-122.394844, 37.794449],\n        [-122.394767, 37.794438],\n        [-122.394675, 37.794384],\n        [-122.394399, 37.794165],\n        [-122.394399, 37.794165],\n        [-122.394675, 37.794384],\n        [-122.394767, 37.794438],\n        [-122.394844, 37.794449],\n        [-122.394952, 37.794409],\n        [-122.395694, 37.793826],\n        [-122.396176, 37.793446],\n        [-122.396272, 37.793364],\n        [-122.396425, 37.793225],\n        [-122.396537, 37.793125],\n        [-122.397403, 37.79244],\n        [-122.398297, 37.791734]\n      ]\n    }\n  },\n  \"75-75l\": {\n    \"distance\": 1.407156751192936,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283],\n        [-122.400379, 37.790088],\n        [-122.400096, 37.790312],\n        [-122.39994, 37.790435],\n        [-122.399571, 37.790727],\n        [-122.399315, 37.790929],\n        [-122.399162, 37.79105],\n        [-122.399041, 37.791146],\n        [-122.398942, 37.791222],\n        [-122.398942, 37.791222],\n        [-122.399041, 37.791146],\n        [-122.399162, 37.79105],\n        [-122.399315, 37.790929],\n        [-122.399571, 37.790727],\n        [-122.39994, 37.790435],\n        [-122.400096, 37.790312],\n        [-122.400379, 37.790088],\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749]\n      ]\n    }\n  },\n  \"76-76l\": {\n    \"distance\": 0.9146262000891374,\n    \"geometry\": {\n      \"type\": \"LineString\",\n      \"coordinates\": [\n        [-122.401398, 37.789283],\n        [-122.401863, 37.788917],\n        [-122.402007, 37.788802],\n        [-122.402128, 37.788706],\n        [-122.402905, 37.788093],\n        [-122.402986, 37.788029],\n        [-122.403436, 37.787675],\n        [-122.404605, 37.786749],\n        [-122.405078, 37.786375],\n        [-122.405078, 37.786375],\n        [-122.404605, 37.786749],\n        [-122.403436, 37.787675],\n        [-122.402986, 37.788029],\n        [-122.402905, 37.788093],\n        [-122.402128, 37.788706],\n        [-122.402007, 37.788802],\n        [-122.401863, 37.788917],\n        [-122.401398, 37.789283]\n      ]\n    }\n  }\n};\n\nmodule.exports = bikeRoutes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/json/bikeRoutesJson.js\n ** module id = 230\n ** module chunks = 0\n **/","var Docks = function(){\n  this.docksJson = {\n    \"type\": \"idCollection\",\n    \"features\": [{\n      \"properties\": {\n        \"id\": 41,\n        \"name\": \"Clay at Battery\",\n        \"places\": 15, \n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.39997, 37.795001]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 42,\n        \"name\": \"Davis at Jackson\",\n        \"places\": 15, \n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.398436, 37.79728]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 45,\n        \"name\": \"Commercial at Montgomery\",\n        \"places\": 15, \n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.402923, 37.794231]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 46,\n        \"name\": \"Washington at Kearney\",\n        \"places\": 15, \n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.404767, 37.795425]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 47,\n        \"name\": \"Post at Kearney\",\n        \"places\": 19,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.403452, 37.788975]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 48,\n        \"name\": \"Embarcadero at Vallejo\",\n        \"places\": 15, \n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.398525, 37.799953]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 49,\n        \"name\": \"Spear at Folsom\",\n        \"places\": 19,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.390264, 37.789625]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 50,\n        \"name\": \"Harry Bridges Plaza (Ferry Building)\",\n        \"places\": 23,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.394203, 37.795392]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 51,\n        \"name\": \"Embarcadero at Folsom\",\n        \"places\": 19,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.391034, 37.791464]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 53,\n        \"name\": \"Powell Street BART\",\n        \"places\": 19,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.408433, 37.783871]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 54,\n        \"name\": \"Embarcadero at Bryant\",\n        \"places\": 15, \n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.388013, 37.787152]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 55,\n        \"name\": \"Temporary Transbay Terminal (Howard at Beale)\",\n        \"places\": 23,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.394643, 37.789756]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 56,\n        \"name\": \"Beale at Market\",\n        \"places\": 19,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.397086, 37.792251]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 57,\n        \"name\": \"5th at Howard\",\n        \"places\": 15, \n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.405127, 37.781752]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 58,\n        \"name\": \"San Francisco City Hall\",\n        \"places\": 19,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.418235, 37.77865]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 59,\n        \"name\": \"Golden Gate at Polk\",\n        \"places\": 23,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.418603, 37.781332]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 60,\n        \"name\": \"Embarcadero at Sansome\",\n        \"places\": 15, \n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.403234, 37.80477]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 61,\n        \"name\": \"2nd at Townsend\",\n        \"places\": 27,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.390288, 37.780526]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 62,\n        \"name\": \"2nd at Folsom\",\n        \"places\": 19,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.396236, 37.785299]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 63,\n        \"name\": \"Howard at 2nd\",\n        \"places\": 19,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.398108, 37.786978]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 64,\n        \"name\": \"2nd at South Park\",\n        \"places\": 15, \n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.392738, 37.782259]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 65,\n        \"name\": \"Townsend at 7th\",\n        \"places\": 15, \n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.402717, 37.771058]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 66,\n        \"name\": \"South Van Ness at Market\",\n        \"places\": 19,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.418954, 37.774814]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 67,\n        \"name\": \"Market at 10th\",\n        \"places\": 27,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.417385, 37.776619]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 68,\n        \"name\": \"Yerba Buena Center of the Arts (3rd @ Howard)\",\n        \"places\": 19,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.401014, 37.784878]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 69,\n        \"name\": \"San Francisco Caltrain 2 (330 Townsend)\",\n        \"places\": 23,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.39607, 37.776377]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 70,\n        \"name\": \"San Francisco Caltrain (Townsend at 4th)\",\n        \"places\": 19,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.395569, 37.776317]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 71,\n        \"name\": \"Powell at Post (Union Square)\",\n        \"places\": 19,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.408499, 37.788446]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 72,\n        \"name\": \"Civic Center BART (7th at Market)\",\n        \"places\": 23,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.412919, 37.780356]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 73,\n        \"name\": \"Grant Avenue at Columbus Avenue\",\n        \"places\": 15, \n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.407245, 37.798522]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 74,\n        \"name\": \"Steuart at Market\",\n        \"places\": 23,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.394434, 37.794139]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 75,\n        \"name\": \"Mechanics Plaza (Market at Battery)\",\n        \"places\": 9,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-122.3990511, 37.7913]\n      }\n    }, {\n      \"properties\": {\n        \"id\": 76,\n        \"name\": \"Market at 4th\",\n        \"places\": 19,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"coordinates\": [-122.404966, 37.786305],\n        \"type\": \"Point\"\n      }\n    }, {\n      \"properties\": {\n        \"id\": 77,\n        \"name\": \"Market at Sansome\",\n        \"places\": 27,\n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"coordinates\": [-122.400811, 37.789625],\n        \"type\": \"Point\"\n      }\n    }, {\n      \"properties\": {\n        \"id\": 82,\n        \"name\": \"Broadway St at Battery St\",\n        \"places\": 15, \n        \"activity\": [\n        ]\n      },\n      \"geometry\": {\n        \"coordinates\": [-122.400862, 37.798541],\n        \"type\": \"Point\"\n      }\n    }]\n  };\n};\n\nmodule.exports = Docks;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/json/docksPositionJson.js\n ** module id = 231\n ** module chunks = 0\n **/","// var helperFunctions = require('./buildgeojson');\n\n// var fetchNewDate = function(start_date, end_date){\n//   var serverDate = d3.time.format(\"%-m/%d/%Y 00:00\");\n//   var docksDate = d3.time.format(\"%Y/%m/%d\");\n//   var tripStartDate = start_date ? serverDate(start_date) : \"12/18/2013 00:00\";\n//   var tripEndDate = end_date ? serverDate(end_date) : \"12/19/2013 00:00\";\n//   var dockStartDate = start_date ? docksDate(start_date) : \"2013/12/18\";\n\n//   d3.json(\"/api/timeline/calendar?start_date=\" + tripStartDate + \"&end_date=\" + tripEndDate, function(error, tripJson) {\n//     if (error) {\n//       console.log(\"error\", error);\n//     }\n//     console.log(tripJson);\n//     bikesJson = helperFunctions.buildBikesJson(tripJson);\n//     console.log(\"elastic successsssss--------->\", bikesJson);\n\n//     d3.json(\"/api/redis?start_date=\" + dockStartDate, function(error, docksJson) {\n//       if (error) {\n//         console.log(\"error\", error);\n//       }\n\n//       var docksHash = helperFunctions.buildDocksHash(tripJson, docksJson);\n//       console.log(\"redis successsssss--------->\", docksHash);\n//       require('./map')();\n//       drawRoutes(bikesJson);\n//       drawDocks(docksHash);\n\n//       loaded();\n//     });\n//   });\n// };\n\n// module.exports = fetchNewDate;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/js/fetchData.js\n ** module id = 232\n ** module chunks = 0\n **/","/** @jsx React.DOM */\n\n\n/** WEBPACK FOOTER **\n ** ./client/js/components/Predictions.react.jsx\n **/"],"sourceRoot":""}